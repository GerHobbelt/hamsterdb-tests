running ../../testfiles/1/45.tst --reopen=1    
==24398== Memcheck, a memory error detector
==24398== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24398== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24398== Command: ./test ../../testfiles/1/45.tst --reopen=1
==24398== 
==24398== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24398==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24398==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24398==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24398==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24398==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24398==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24398==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24398==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24398==    by 0x40210C: engine::flush() (engine.cpp:350)
==24398==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24398==    by 0x401E76: parser::process() (parser.cpp:44)
==24398==    by 0x403308: main (main.cpp:464)
==24398==  Address 0x5f0341e is 206 bytes inside a block of size 4,176 alloc'd
==24398==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24398==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24398==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24398==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24398==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24398==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24398==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24398==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24398==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24398==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24398==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24398==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24398== 
==24398== 
==24398== HEAP SUMMARY:
==24398==     in use at exit: 0 bytes in 0 blocks
==24398==   total heap usage: 3,543 allocs, 3,543 frees, 2,771,100 bytes allocated
==24398== 
==24398== All heap blocks were freed -- no leaks are possible
==24398== 
==24398== For counts of detected and suppressed errors, rerun with: -v
==24398== Use --track-origins=yes to see where uninitialised values come from
==24398== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --reopen=1    
==24420== Memcheck, a memory error detector
==24420== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24420== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24420== Command: ./test ../../testfiles/1/220.tst --reopen=1
==24420== 
==24420== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24420==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24420==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24420==  Address 0x5fb98ea is 122 bytes inside a block of size 4,176 alloc'd
==24420==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24420==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24420==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24420==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24420== 
==24420== 
==24420== HEAP SUMMARY:
==24420==     in use at exit: 0 bytes in 0 blocks
==24420==   total heap usage: 4,224 allocs, 4,224 frees, 2,456,530 bytes allocated
==24420== 
==24420== All heap blocks were freed -- no leaks are possible
==24420== 
==24420== For counts of detected and suppressed errors, rerun with: -v
==24420== Use --track-origins=yes to see where uninitialised values come from
==24420== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --reopen=1    
==24423== Memcheck, a memory error detector
==24423== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24423== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24423== Command: ./test ../../testfiles/1/ext_020.tst --reopen=1
==24423== 
==24423== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24423==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24423==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24423==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24423==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24423==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24423==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24423==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24423==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24423==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24423==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24423==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24423==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24423==  Address 0x5f06e06 is 118 bytes inside a block of size 4,176 alloc'd
==24423==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24423==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24423==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24423==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24423==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24423==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24423==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24423==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24423==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24423==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24423==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24423==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24423== 
==24423== 
==24423== HEAP SUMMARY:
==24423==     in use at exit: 0 bytes in 0 blocks
==24423==   total heap usage: 996 allocs, 996 frees, 987,546 bytes allocated
==24423== 
==24423== All heap blocks were freed -- no leaks are possible
==24423== 
==24423== For counts of detected and suppressed errors, rerun with: -v
==24423== Use --track-origins=yes to see where uninitialised values come from
==24423== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --reopen=1    
==24426== Memcheck, a memory error detector
==24426== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24426== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24426== Command: ./test ../../testfiles/2/ext_060.tst --reopen=1
==24426== 
==24426== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24426==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24426==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24426==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24426==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24426==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24426==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24426==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24426==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24426==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24426==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24426==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24426==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24426==  Address 0x5f1ceda is 410 bytes inside a block of size 4,176 alloc'd
==24426==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24426==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24426==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24426==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24426==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24426==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24426==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24426==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24426==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24426==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24426==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24426==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24426== 
==24426== 
==24426== HEAP SUMMARY:
==24426==     in use at exit: 0 bytes in 0 blocks
==24426==   total heap usage: 920,403 allocs, 920,403 frees, 24,716,473 bytes allocated
==24426== 
==24426== All heap blocks were freed -- no leaks are possible
==24426== 
==24426== For counts of detected and suppressed errors, rerun with: -v
==24426== Use --track-origins=yes to see where uninitialised values come from
==24426== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --reopen=1    
==24430== Memcheck, a memory error detector
==24430== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24430== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24430== Command: ./test ../../testfiles/2/blb-001.tst --reopen=1
==24430== 
==24430== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24430==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24430==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24430==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24430==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24430==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24430==  Address 0x5f023d8 is 3,976 bytes inside a block of size 4,176 alloc'd
==24430==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24430==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24430==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24430== 
==24430== 
==24430== HEAP SUMMARY:
==24430==     in use at exit: 0 bytes in 0 blocks
==24430==   total heap usage: 356 allocs, 356 frees, 203,455,483 bytes allocated
==24430== 
==24430== All heap blocks were freed -- no leaks are possible
==24430== 
==24430== For counts of detected and suppressed errors, rerun with: -v
==24430== Use --track-origins=yes to see where uninitialised values come from
==24430== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --overwrite=1 --reopen=1    
==24434== Memcheck, a memory error detector
==24434== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24434== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24434== Command: ./test ../../testfiles/1/45.tst --overwrite=1 --reopen=1
==24434== 
==24434== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24434==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24434==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24434==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24434==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24434==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24434==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24434==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24434==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24434==    by 0x40210C: engine::flush() (engine.cpp:350)
==24434==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24434==    by 0x401E76: parser::process() (parser.cpp:44)
==24434==    by 0x403308: main (main.cpp:464)
==24434==  Address 0x5f0341e is 206 bytes inside a block of size 4,176 alloc'd
==24434==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24434==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24434==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24434==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24434==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24434==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24434==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24434==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24434==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24434==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24434==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24434==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24434== 
==24434== 
==24434== HEAP SUMMARY:
==24434==     in use at exit: 0 bytes in 0 blocks
==24434==   total heap usage: 3,543 allocs, 3,543 frees, 2,771,100 bytes allocated
==24434== 
==24434== All heap blocks were freed -- no leaks are possible
==24434== 
==24434== For counts of detected and suppressed errors, rerun with: -v
==24434== Use --track-origins=yes to see where uninitialised values come from
==24434== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --overwrite=1 --reopen=1    
==24437== Memcheck, a memory error detector
==24437== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24437== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24437== Command: ./test ../../testfiles/1/220.tst --overwrite=1 --reopen=1
==24437== 
==24437== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24437==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24437==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24437==  Address 0x5fb676a is 122 bytes inside a block of size 4,176 alloc'd
==24437==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24437==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24437==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24437==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24437== 
==24437== 
==24437== HEAP SUMMARY:
==24437==     in use at exit: 0 bytes in 0 blocks
==24437==   total heap usage: 3,800 allocs, 3,800 frees, 2,506,677 bytes allocated
==24437== 
==24437== All heap blocks were freed -- no leaks are possible
==24437== 
==24437== For counts of detected and suppressed errors, rerun with: -v
==24437== Use --track-origins=yes to see where uninitialised values come from
==24437== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --overwrite=1 --reopen=1    
==24440== Memcheck, a memory error detector
==24440== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24440== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24440== Command: ./test ../../testfiles/1/ext_020.tst --overwrite=1 --reopen=1
==24440== 
==24440== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24440==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24440==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24440==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24440==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24440==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24440==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24440==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24440==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24440==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24440==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24440==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24440==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24440==  Address 0x5f06e06 is 118 bytes inside a block of size 4,176 alloc'd
==24440==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24440==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24440==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24440==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24440==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24440==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24440==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24440==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24440==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24440==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24440==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24440==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24440== 
==24440== 
==24440== HEAP SUMMARY:
==24440==     in use at exit: 0 bytes in 0 blocks
==24440==   total heap usage: 996 allocs, 996 frees, 987,546 bytes allocated
==24440== 
==24440== All heap blocks were freed -- no leaks are possible
==24440== 
==24440== For counts of detected and suppressed errors, rerun with: -v
==24440== Use --track-origins=yes to see where uninitialised values come from
==24440== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --overwrite=1 --reopen=1    
==24443== Memcheck, a memory error detector
==24443== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24443== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24443== Command: ./test ../../testfiles/2/ext_060.tst --overwrite=1 --reopen=1
==24443== 
==24443== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24443==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24443==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24443==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24443==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24443==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24443==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24443==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24443==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24443==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24443==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24443==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24443==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24443==  Address 0x5f1d01e is 414 bytes inside a block of size 4,176 alloc'd
==24443==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24443==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24443==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24443==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24443==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24443==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24443==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24443==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24443==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24443==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24443==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24443==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24443== 
==24443== 
==24443== HEAP SUMMARY:
==24443==     in use at exit: 0 bytes in 0 blocks
==24443==   total heap usage: 911,482 allocs, 911,482 frees, 24,581,027 bytes allocated
==24443== 
==24443== All heap blocks were freed -- no leaks are possible
==24443== 
==24443== For counts of detected and suppressed errors, rerun with: -v
==24443== Use --track-origins=yes to see where uninitialised values come from
==24443== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --overwrite=1 --reopen=1    
==24448== Memcheck, a memory error detector
==24448== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24448== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24448== Command: ./test ../../testfiles/2/blb-001.tst --overwrite=1 --reopen=1
==24448== 
==24448== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24448==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24448==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24448==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24448==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24448==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24448==  Address 0x5f0224c is 3,580 bytes inside a block of size 4,176 alloc'd
==24448==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24448==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24448==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24448== 
==24448== 
==24448== HEAP SUMMARY:
==24448==     in use at exit: 0 bytes in 0 blocks
==24448==   total heap usage: 342 allocs, 342 frees, 45,703,831 bytes allocated
==24448== 
==24448== All heap blocks were freed -- no leaks are possible
==24448== 
==24448== For counts of detected and suppressed errors, rerun with: -v
==24448== Use --track-origins=yes to see where uninitialised values come from
==24448== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --duplicate=1 --reopen=1    
==24452== Memcheck, a memory error detector
==24452== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24452== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24452== Command: ./test ../../testfiles/1/45.tst --duplicate=1 --reopen=1
==24452== 
==24452== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24452==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24452==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24452==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24452==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24452==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24452==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24452==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24452==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24452==    by 0x40210C: engine::flush() (engine.cpp:350)
==24452==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24452==    by 0x401E76: parser::process() (parser.cpp:44)
==24452==    by 0x403308: main (main.cpp:464)
==24452==  Address 0x5f0341e is 206 bytes inside a block of size 4,176 alloc'd
==24452==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24452==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24452==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24452==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24452==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24452==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24452==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24452==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24452==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24452==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24452==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24452==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24452== 
==24452== 
==24452== HEAP SUMMARY:
==24452==     in use at exit: 0 bytes in 0 blocks
==24452==   total heap usage: 3,543 allocs, 3,543 frees, 2,771,100 bytes allocated
==24452== 
==24452== All heap blocks were freed -- no leaks are possible
==24452== 
==24452== For counts of detected and suppressed errors, rerun with: -v
==24452== Use --track-origins=yes to see where uninitialised values come from
==24452== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --duplicate=1 --reopen=1    
==24455== Memcheck, a memory error detector
==24455== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24455== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24455== Command: ./test ../../testfiles/1/220.tst --duplicate=1 --reopen=1
==24455== 
==24455== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24455==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24455==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24455==  Address 0x5fa77a0 is 112 bytes inside a block of size 4,176 alloc'd
==24455==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24455==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24455==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24455==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24455== 
==24455== 
==24455== HEAP SUMMARY:
==24455==     in use at exit: 0 bytes in 0 blocks
==24455==   total heap usage: 7,070 allocs, 7,070 frees, 3,210,239 bytes allocated
==24455== 
==24455== All heap blocks were freed -- no leaks are possible
==24455== 
==24455== For counts of detected and suppressed errors, rerun with: -v
==24455== Use --track-origins=yes to see where uninitialised values come from
==24455== ERROR SUMMARY: 607 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --duplicate=1 --reopen=1    
==24458== Memcheck, a memory error detector
==24458== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24458== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24458== Command: ./test ../../testfiles/1/ext_020.tst --duplicate=1 --reopen=1
==24458== 
==24458== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24458==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24458==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24458==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24458==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24458==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24458==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24458==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24458==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24458==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24458==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24458==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24458==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24458==  Address 0x5f06e06 is 118 bytes inside a block of size 4,176 alloc'd
==24458==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24458==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24458==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24458==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24458==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24458==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24458==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24458==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24458==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24458==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24458==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24458==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24458== 
==24458== 
==24458== HEAP SUMMARY:
==24458==     in use at exit: 0 bytes in 0 blocks
==24458==   total heap usage: 996 allocs, 996 frees, 987,546 bytes allocated
==24458== 
==24458== All heap blocks were freed -- no leaks are possible
==24458== 
==24458== For counts of detected and suppressed errors, rerun with: -v
==24458== Use --track-origins=yes to see where uninitialised values come from
==24458== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --duplicate=1 --reopen=1    
==24461== Memcheck, a memory error detector
==24461== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24461== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24461== Command: ./test ../../testfiles/2/ext_060.tst --duplicate=1 --reopen=1
==24461== 
==24461== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24461==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24461==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24461==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24461==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24461==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24461==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24461==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24461==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24461==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24461==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24461==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24461==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24461==  Address 0x5f169e6 is 614 bytes inside a block of size 4,176 alloc'd
==24461==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24461==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24461==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24461==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24461==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24461==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24461==    by 0x4E619E2: __bam_split (in /usr/lib/libdb-4.7.so)
==24461==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24461==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24461==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24461==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24461==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24461== 
==24461== 
==24461== HEAP SUMMARY:
==24461==     in use at exit: 0 bytes in 0 blocks
==24461==   total heap usage: 1,448,274 allocs, 1,448,274 frees, 44,146,734 bytes allocated
==24461== 
==24461== All heap blocks were freed -- no leaks are possible
==24461== 
==24461== For counts of detected and suppressed errors, rerun with: -v
==24461== Use --track-origins=yes to see where uninitialised values come from
==24461== ERROR SUMMARY: 15 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --duplicate=1 --reopen=1    
==24468== Memcheck, a memory error detector
==24468== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24468== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24468== Command: ./test ../../testfiles/2/blb-001.tst --duplicate=1 --reopen=1
==24468== 
==24468== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24468==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24468==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24468==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24468==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24468==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24468==  Address 0x5f02240 is 3,568 bytes inside a block of size 4,176 alloc'd
==24468==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24468==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24468==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24468== 
==24468== 
==24468== HEAP SUMMARY:
==24468==     in use at exit: 0 bytes in 0 blocks
==24468==   total heap usage: 358 allocs, 358 frees, 203,455,623 bytes allocated
==24468== 
==24468== All heap blocks were freed -- no leaks are possible
==24468== 
==24468== For counts of detected and suppressed errors, rerun with: -v
==24468== Use --track-origins=yes to see where uninitialised values come from
==24468== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==24472== Memcheck, a memory error detector
==24472== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24472== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24472== Command: ./test ../../testfiles/1/45.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==24472== 
==24472== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24472==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24472==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24472==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24472==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24472==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24472==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24472==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24472==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24472==    by 0x40210C: engine::flush() (engine.cpp:350)
==24472==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24472==    by 0x401E76: parser::process() (parser.cpp:44)
==24472==    by 0x403308: main (main.cpp:464)
==24472==  Address 0x5f0341e is 206 bytes inside a block of size 4,176 alloc'd
==24472==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24472==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24472==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24472==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24472==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24472==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24472==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24472==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24472==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24472==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24472==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24472==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24472== 
==24472== 
==24472== HEAP SUMMARY:
==24472==     in use at exit: 0 bytes in 0 blocks
==24472==   total heap usage: 3,543 allocs, 3,543 frees, 2,771,100 bytes allocated
==24472== 
==24472== All heap blocks were freed -- no leaks are possible
==24472== 
==24472== For counts of detected and suppressed errors, rerun with: -v
==24472== Use --track-origins=yes to see where uninitialised values come from
==24472== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==24475== Memcheck, a memory error detector
==24475== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24475== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24475== Command: ./test ../../testfiles/1/220.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==24475== 
==24475== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24475==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24475==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24475==  Address 0x5fab8a0 is 112 bytes inside a block of size 4,176 alloc'd
==24475==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24475==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24475==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24475==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24475== 
==24475== 
==24475== HEAP SUMMARY:
==24475==     in use at exit: 0 bytes in 0 blocks
==24475==   total heap usage: 7,118 allocs, 7,118 frees, 3,250,651 bytes allocated
==24475== 
==24475== All heap blocks were freed -- no leaks are possible
==24475== 
==24475== For counts of detected and suppressed errors, rerun with: -v
==24475== Use --track-origins=yes to see where uninitialised values come from
==24475== ERROR SUMMARY: 607 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==24478== Memcheck, a memory error detector
==24478== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24478== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24478== Command: ./test ../../testfiles/1/ext_020.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==24478== 
==24478== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24478==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24478==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24478==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24478==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24478==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24478==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24478==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24478==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24478==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24478==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24478==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24478==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24478==  Address 0x5f06e06 is 118 bytes inside a block of size 4,176 alloc'd
==24478==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24478==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24478==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24478==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24478==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24478==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24478==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24478==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24478==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24478==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24478==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24478==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24478== 
==24478== 
==24478== HEAP SUMMARY:
==24478==     in use at exit: 0 bytes in 0 blocks
==24478==   total heap usage: 996 allocs, 996 frees, 987,546 bytes allocated
==24478== 
==24478== All heap blocks were freed -- no leaks are possible
==24478== 
==24478== For counts of detected and suppressed errors, rerun with: -v
==24478== Use --track-origins=yes to see where uninitialised values come from
==24478== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==24481== Memcheck, a memory error detector
==24481== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24481== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24481== Command: ./test ../../testfiles/2/ext_060.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==24481== 
==24481== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24481==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24481==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24481==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24481==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24481==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24481==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24481==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24481==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24481==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24481==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24481==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24481==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24481==  Address 0x5f16976 is 614 bytes inside a block of size 4,176 alloc'd
==24481==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24481==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24481==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24481==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24481==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24481==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24481==    by 0x4E619E2: __bam_split (in /usr/lib/libdb-4.7.so)
==24481==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24481==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24481==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24481==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24481==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24481== 
==24481== 
==24481== HEAP SUMMARY:
==24481==     in use at exit: 0 bytes in 0 blocks
==24481==   total heap usage: 1,447,854 allocs, 1,447,854 frees, 44,039,925 bytes allocated
==24481== 
==24481== All heap blocks were freed -- no leaks are possible
==24481== 
==24481== For counts of detected and suppressed errors, rerun with: -v
==24481== Use --track-origins=yes to see where uninitialised values come from
==24481== ERROR SUMMARY: 15 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==24484== Memcheck, a memory error detector
==24484== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24484== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24484== Command: ./test ../../testfiles/2/blb-001.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==24484== 
==24484== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24484==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24484==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24484==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24484==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24484==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24484==  Address 0x5f02240 is 3,568 bytes inside a block of size 4,176 alloc'd
==24484==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24484==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24484==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24484== 
==24484== 
==24484== HEAP SUMMARY:
==24484==     in use at exit: 0 bytes in 0 blocks
==24484==   total heap usage: 358 allocs, 358 frees, 203,455,623 bytes allocated
==24484== 
==24484== All heap blocks were freed -- no leaks are possible
==24484== 
==24484== For counts of detected and suppressed errors, rerun with: -v
==24484== Use --track-origins=yes to see where uninitialised values come from
==24484== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==24488== Memcheck, a memory error detector
==24488== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24488== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24488== Command: ./test ../../testfiles/1/45.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==24488== 
==24488== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24488==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24488==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24488==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24488==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24488==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24488==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24488==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24488==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24488==    by 0x40210C: engine::flush() (engine.cpp:350)
==24488==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24488==    by 0x401E76: parser::process() (parser.cpp:44)
==24488==    by 0x403308: main (main.cpp:464)
==24488==  Address 0x5f03f1e is 206 bytes inside a block of size 4,176 alloc'd
==24488==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24488==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24488==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24488==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24488==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24488==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24488==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24488==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24488==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24488==    by 0x4EFD790: __dbc_put_pp (in /usr/lib/libdb-4.7.so)
==24488==    by 0x405538: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:167)
==24488==    by 0x402B43: engine::insert(char*, char*) (engine.cpp:127)
==24488== 
==24488== 
==24488== HEAP SUMMARY:
==24488==     in use at exit: 0 bytes in 0 blocks
==24488==   total heap usage: 3,923 allocs, 3,923 frees, 2,776,420 bytes allocated
==24488== 
==24488== All heap blocks were freed -- no leaks are possible
==24488== 
==24488== For counts of detected and suppressed errors, rerun with: -v
==24488== Use --track-origins=yes to see where uninitialised values come from
==24488== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==24493== Memcheck, a memory error detector
==24493== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24493== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24493== Command: ./test ../../testfiles/1/220.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==24493== 
==24493== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24493==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24493==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4EFD790: __dbc_put_pp (in /usr/lib/libdb-4.7.so)
==24493==    by 0x405538: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:167)
==24493==  Address 0x5faf66e is 126 bytes inside a block of size 4,176 alloc'd
==24493==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24493==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24493==    by 0x4EFD790: __dbc_put_pp (in /usr/lib/libdb-4.7.so)
==24493==    by 0x405538: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:167)
==24493==    by 0x402B43: engine::insert(char*, char*) (engine.cpp:127)
==24493== 
==24493== 
==24493== HEAP SUMMARY:
==24493==     in use at exit: 0 bytes in 0 blocks
==24493==   total heap usage: 9,016 allocs, 9,016 frees, 2,996,945 bytes allocated
==24493== 
==24493== All heap blocks were freed -- no leaks are possible
==24493== 
==24493== For counts of detected and suppressed errors, rerun with: -v
==24493== Use --track-origins=yes to see where uninitialised values come from
==24493== ERROR SUMMARY: 598 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==24497== Memcheck, a memory error detector
==24497== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24497== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24497== Command: ./test ../../testfiles/1/ext_020.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==24497== 
==24497== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24497==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24497==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24497==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24497==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24497==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24497==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24497==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24497==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24497==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24497==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24497==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24497==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24497==  Address 0x5f070f6 is 118 bytes inside a block of size 4,176 alloc'd
==24497==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24497==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24497==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24497==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24497==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24497==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24497==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24497==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24497==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24497==    by 0x4EFD790: __dbc_put_pp (in /usr/lib/libdb-4.7.so)
==24497==    by 0x405538: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:167)
==24497==    by 0x402B43: engine::insert(char*, char*) (engine.cpp:127)
==24497== 
==24497== 
==24497== HEAP SUMMARY:
==24497==     in use at exit: 0 bytes in 0 blocks
==24497==   total heap usage: 1,016 allocs, 1,016 frees, 993,428 bytes allocated
==24497== 
==24497== All heap blocks were freed -- no leaks are possible
==24497== 
==24497== For counts of detected and suppressed errors, rerun with: -v
==24497== Use --track-origins=yes to see where uninitialised values come from
==24497== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==24500== Memcheck, a memory error detector
==24500== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24500== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24500== Command: ./test ../../testfiles/2/ext_060.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==24500== 
==24500== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24500==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24500==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4EFD790: __dbc_put_pp (in /usr/lib/libdb-4.7.so)
==24500==    by 0x405538: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:167)
==24500==  Address 0x6326c4e is 446 bytes inside a block of size 4,176 alloc'd
==24500==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24500==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24500==    by 0x4EFD790: __dbc_put_pp (in /usr/lib/libdb-4.7.so)
==24500==    by 0x405538: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:167)
==24500==    by 0x402B43: engine::insert(char*, char*) (engine.cpp:127)
==24500== 
==24500== 
==24500== HEAP SUMMARY:
==24500==     in use at exit: 0 bytes in 0 blocks
==24500==   total heap usage: 5,074,940 allocs, 5,074,940 frees, 135,766,772 bytes allocated
==24500== 
==24500== All heap blocks were freed -- no leaks are possible
==24500== 
==24500== For counts of detected and suppressed errors, rerun with: -v
==24500== Use --track-origins=yes to see where uninitialised values come from
==24500== ERROR SUMMARY: 84 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==24504== Memcheck, a memory error detector
==24504== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24504== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24504== Command: ./test ../../testfiles/2/blb-001.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==24504== 
==24504== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24504==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24504==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24504==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24504==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24504==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24504==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24504==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24504==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24504==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24504==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24504==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24504==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24504==  Address 0x5f02240 is 3,568 bytes inside a block of size 4,176 alloc'd
==24504==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24504==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24504==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24504==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24504==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24504==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24504==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24504==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24504==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24504==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24504==    by 0x4EFD790: __dbc_put_pp (in /usr/lib/libdb-4.7.so)
==24504==    by 0x405538: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:167)
==24504== 
==24504== 
==24504== HEAP SUMMARY:
==24504==     in use at exit: 0 bytes in 0 blocks
==24504==   total heap usage: 362 allocs, 362 frees, 203,457,239 bytes allocated
==24504== 
==24504== All heap blocks were freed -- no leaks are possible
==24504== 
==24504== For counts of detected and suppressed errors, rerun with: -v
==24504== Use --track-origins=yes to see where uninitialised values come from
==24504== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --inmemorydb=1    
==24508== Memcheck, a memory error detector
==24508== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24508== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24508== Command: ./test ../../testfiles/1/45.tst --inmemorydb=1
==24508== 
==24508== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24508==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24508==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24508==  Address 0x5fda236 is 518 bytes inside a block of size 8,272 alloc'd
==24508==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24508==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24508==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24508==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24508== 
==24508== 
==24508== HEAP SUMMARY:
==24508==     in use at exit: 0 bytes in 0 blocks
==24508==   total heap usage: 8,468 allocs, 8,468 frees, 3,157,269 bytes allocated
==24508== 
==24508== All heap blocks were freed -- no leaks are possible
==24508== 
==24508== For counts of detected and suppressed errors, rerun with: -v
==24508== Use --track-origins=yes to see where uninitialised values come from
==24508== ERROR SUMMARY: 51 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --inmemorydb=1    
==24511== Memcheck, a memory error detector
==24511== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24511== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24511== Command: ./test ../../testfiles/1/220.tst --inmemorydb=1
==24511== 
==24511== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24511==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24511==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24511==  Address 0x5fea1de is 158 bytes inside a block of size 8,272 alloc'd
==24511==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24511==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24511==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24511==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24511== 
==24511== 
==24511== HEAP SUMMARY:
==24511==     in use at exit: 0 bytes in 0 blocks
==24511==   total heap usage: 5,781 allocs, 5,781 frees, 2,759,718 bytes allocated
==24511== 
==24511== All heap blocks were freed -- no leaks are possible
==24511== 
==24511== For counts of detected and suppressed errors, rerun with: -v
==24511== Use --track-origins=yes to see where uninitialised values come from
==24511== ERROR SUMMARY: 37 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --inmemorydb=1    
==24514== Memcheck, a memory error detector
==24514== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24514== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24514== Command: ./test ../../testfiles/1/ext_020.tst --inmemorydb=1
==24514== 
==24514== 
==24514== HEAP SUMMARY:
==24514==     in use at exit: 0 bytes in 0 blocks
==24514==   total heap usage: 817 allocs, 817 frees, 691,799 bytes allocated
==24514== 
==24514== All heap blocks were freed -- no leaks are possible
==24514== 
==24514== For counts of detected and suppressed errors, rerun with: -v
==24514== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --inmemorydb=1    
==24517== Memcheck, a memory error detector
==24517== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24517== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24517== Command: ./test ../../testfiles/2/ext_060.tst --inmemorydb=1
==24517== 
==24517== 
==24517== HEAP SUMMARY:
==24517==     in use at exit: 0 bytes in 0 blocks
==24517==   total heap usage: 924,099 allocs, 924,099 frees, 24,658,775 bytes allocated
==24517== 
==24517== All heap blocks were freed -- no leaks are possible
==24517== 
==24517== For counts of detected and suppressed errors, rerun with: -v
==24517== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --inmemorydb=1    
==24520== Memcheck, a memory error detector
==24520== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24520== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24520== Command: ./test ../../testfiles/2/blb-001.tst --inmemorydb=1
==24520== 
==24520== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24520==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24520==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24520==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24520==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24520==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24520==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24520==    by 0x4F07938: __db_goff (in /usr/lib/libdb-4.7.so)
==24520==    by 0x4F1232B: __db_ret (in /usr/lib/libdb-4.7.so)
==24520==    by 0x4EF5695: __dbc_get (in /usr/lib/libdb-4.7.so)
==24520==    by 0x4EFE0EC: __dbc_get_pp (in /usr/lib/libdb-4.7.so)
==24520==    by 0x404DE0: berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:318)
==24520==    by 0x4024F1: engine::fullcheck() (engine.cpp:259)
==24520==  Address 0x5f05370 is 592 bytes inside a block of size 8,272 alloc'd
==24520==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24520==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24520==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24520==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24520==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24520==    by 0x4E53C59: __bam_new_file (in /usr/lib/libdb-4.7.so)
==24520==    by 0x4F06A0D: __db_new_file (in /usr/lib/libdb-4.7.so)
==24520==    by 0x4F070F4: __db_open (in /usr/lib/libdb-4.7.so)
==24520==    by 0x4EFF855: __db_open_pp (in /usr/lib/libdb-4.7.so)
==24520==    by 0x40562D: berkeleydb::create() (berkeleydb.cpp:65)
==24520==    by 0x4021C9: engine::create(bool) (engine.cpp:42)
==24520==    by 0x401D23: parser::process_line(char*) (parser.cpp:69)
==24520== 
==24520== 
==24520== HEAP SUMMARY:
==24520==     in use at exit: 0 bytes in 0 blocks
==24520==   total heap usage: 133 allocs, 133 frees, 171,929,765 bytes allocated
==24520== 
==24520== All heap blocks were freed -- no leaks are possible
==24520== 
==24520== For counts of detected and suppressed errors, rerun with: -v
==24520== Use --track-origins=yes to see where uninitialised values come from
==24520== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --inmemorydb=1 --duplicate=1    
==24524== Memcheck, a memory error detector
==24524== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24524== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24524== Command: ./test ../../testfiles/1/45.tst --inmemorydb=1 --duplicate=1
==24524== 
==24524== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24524==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24524==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24524==  Address 0x5fda236 is 518 bytes inside a block of size 8,272 alloc'd
==24524==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24524==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24524==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24524==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24524== 
==24524== 
==24524== HEAP SUMMARY:
==24524==     in use at exit: 0 bytes in 0 blocks
==24524==   total heap usage: 8,468 allocs, 8,468 frees, 3,157,269 bytes allocated
==24524== 
==24524== All heap blocks were freed -- no leaks are possible
==24524== 
==24524== For counts of detected and suppressed errors, rerun with: -v
==24524== Use --track-origins=yes to see where uninitialised values come from
==24524== ERROR SUMMARY: 51 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --inmemorydb=1 --duplicate=1    
==24527== Memcheck, a memory error detector
==24527== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24527== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24527== Command: ./test ../../testfiles/1/220.tst --inmemorydb=1 --duplicate=1
==24527== 
==24527== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24527==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24527==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24527==  Address 0x5fee2ee is 158 bytes inside a block of size 8,272 alloc'd
==24527==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24527==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24527==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24527==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24527== 
==24527== 
==24527== HEAP SUMMARY:
==24527==     in use at exit: 0 bytes in 0 blocks
==24527==   total heap usage: 9,627 allocs, 9,627 frees, 5,098,475 bytes allocated
==24527== 
==24527== All heap blocks were freed -- no leaks are possible
==24527== 
==24527== For counts of detected and suppressed errors, rerun with: -v
==24527== Use --track-origins=yes to see where uninitialised values come from
==24527== ERROR SUMMARY: 146 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --inmemorydb=1 --duplicate=1    
==24532== Memcheck, a memory error detector
==24532== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24532== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24532== Command: ./test ../../testfiles/1/ext_020.tst --inmemorydb=1 --duplicate=1
==24532== 
==24532== 
==24532== HEAP SUMMARY:
==24532==     in use at exit: 0 bytes in 0 blocks
==24532==   total heap usage: 817 allocs, 817 frees, 691,799 bytes allocated
==24532== 
==24532== All heap blocks were freed -- no leaks are possible
==24532== 
==24532== For counts of detected and suppressed errors, rerun with: -v
==24532== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --inmemorydb=1 --duplicate=1    
==24535== Memcheck, a memory error detector
==24535== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24535== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24535== Command: ./test ../../testfiles/2/ext_060.tst --inmemorydb=1 --duplicate=1
==24535== 
==24535== 
==24535== HEAP SUMMARY:
==24535==     in use at exit: 0 bytes in 0 blocks
==24535==   total heap usage: 1,432,561 allocs, 1,432,561 frees, 39,517,341 bytes allocated
==24535== 
==24535== All heap blocks were freed -- no leaks are possible
==24535== 
==24535== For counts of detected and suppressed errors, rerun with: -v
==24535== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --inmemorydb=1 --duplicate=1    
==24539== Memcheck, a memory error detector
==24539== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24539== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24539== Command: ./test ../../testfiles/2/blb-001.tst --inmemorydb=1 --duplicate=1
==24539== 
==24539== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24539==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24539==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24539==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24539==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24539==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24539==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24539==    by 0x4F07938: __db_goff (in /usr/lib/libdb-4.7.so)
==24539==    by 0x4F1232B: __db_ret (in /usr/lib/libdb-4.7.so)
==24539==    by 0x4EF5695: __dbc_get (in /usr/lib/libdb-4.7.so)
==24539==    by 0x4EFE0EC: __dbc_get_pp (in /usr/lib/libdb-4.7.so)
==24539==    by 0x404DE0: berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:318)
==24539==    by 0x4024F1: engine::fullcheck() (engine.cpp:259)
==24539==  Address 0x5f05370 is 592 bytes inside a block of size 8,272 alloc'd
==24539==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24539==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24539==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24539==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24539==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24539==    by 0x4E53C59: __bam_new_file (in /usr/lib/libdb-4.7.so)
==24539==    by 0x4F06A0D: __db_new_file (in /usr/lib/libdb-4.7.so)
==24539==    by 0x4F070F4: __db_open (in /usr/lib/libdb-4.7.so)
==24539==    by 0x4EFF855: __db_open_pp (in /usr/lib/libdb-4.7.so)
==24539==    by 0x40562D: berkeleydb::create() (berkeleydb.cpp:65)
==24539==    by 0x4021C9: engine::create(bool) (engine.cpp:42)
==24539==    by 0x401D23: parser::process_line(char*) (parser.cpp:69)
==24539== 
==24539== 
==24539== HEAP SUMMARY:
==24539==     in use at exit: 0 bytes in 0 blocks
==24539==   total heap usage: 138 allocs, 138 frees, 171,930,637 bytes allocated
==24539== 
==24539== All heap blocks were freed -- no leaks are possible
==24539== 
==24539== For counts of detected and suppressed errors, rerun with: -v
==24539== Use --track-origins=yes to see where uninitialised values come from
==24539== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==24543== Memcheck, a memory error detector
==24543== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24543== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24543== Command: ./test ../../testfiles/1/45.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==24543== 
==24543== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24543==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24543==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24543==  Address 0x5fda236 is 518 bytes inside a block of size 8,272 alloc'd
==24543==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24543==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24543==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24543==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24543== 
==24543== 
==24543== HEAP SUMMARY:
==24543==     in use at exit: 0 bytes in 0 blocks
==24543==   total heap usage: 8,468 allocs, 8,468 frees, 3,157,269 bytes allocated
==24543== 
==24543== All heap blocks were freed -- no leaks are possible
==24543== 
==24543== For counts of detected and suppressed errors, rerun with: -v
==24543== Use --track-origins=yes to see where uninitialised values come from
==24543== ERROR SUMMARY: 51 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==24546== Memcheck, a memory error detector
==24546== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24546== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24546== Command: ./test ../../testfiles/1/220.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==24546== 
==24546== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24546==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24546==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24546==  Address 0x5fef3be is 158 bytes inside a block of size 8,272 alloc'd
==24546==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24546==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24546==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24546==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24546== 
==24546== 
==24546== HEAP SUMMARY:
==24546==     in use at exit: 0 bytes in 0 blocks
==24546==   total heap usage: 9,672 allocs, 9,672 frees, 5,136,252 bytes allocated
==24546== 
==24546== All heap blocks were freed -- no leaks are possible
==24546== 
==24546== For counts of detected and suppressed errors, rerun with: -v
==24546== Use --track-origins=yes to see where uninitialised values come from
==24546== ERROR SUMMARY: 146 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==24549== Memcheck, a memory error detector
==24549== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24549== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24549== Command: ./test ../../testfiles/1/ext_020.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==24549== 
==24549== 
==24549== HEAP SUMMARY:
==24549==     in use at exit: 0 bytes in 0 blocks
==24549==   total heap usage: 817 allocs, 817 frees, 691,799 bytes allocated
==24549== 
==24549== All heap blocks were freed -- no leaks are possible
==24549== 
==24549== For counts of detected and suppressed errors, rerun with: -v
==24549== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==24552== Memcheck, a memory error detector
==24552== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24552== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24552== Command: ./test ../../testfiles/2/ext_060.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==24552== 
==24552== 
==24552== HEAP SUMMARY:
==24552==     in use at exit: 0 bytes in 0 blocks
==24552==   total heap usage: 1,432,560 allocs, 1,432,560 frees, 39,517,308 bytes allocated
==24552== 
==24552== All heap blocks were freed -- no leaks are possible
==24552== 
==24552== For counts of detected and suppressed errors, rerun with: -v
==24552== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==24555== Memcheck, a memory error detector
==24555== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24555== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24555== Command: ./test ../../testfiles/2/blb-001.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==24555== 
==24555== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24555==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24555==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24555==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24555==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24555==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24555==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24555==    by 0x4F07938: __db_goff (in /usr/lib/libdb-4.7.so)
==24555==    by 0x4F1232B: __db_ret (in /usr/lib/libdb-4.7.so)
==24555==    by 0x4EF5695: __dbc_get (in /usr/lib/libdb-4.7.so)
==24555==    by 0x4EFE0EC: __dbc_get_pp (in /usr/lib/libdb-4.7.so)
==24555==    by 0x404DE0: berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:318)
==24555==    by 0x4024F1: engine::fullcheck() (engine.cpp:259)
==24555==  Address 0x5f05370 is 592 bytes inside a block of size 8,272 alloc'd
==24555==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24555==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24555==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24555==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24555==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24555==    by 0x4E53C59: __bam_new_file (in /usr/lib/libdb-4.7.so)
==24555==    by 0x4F06A0D: __db_new_file (in /usr/lib/libdb-4.7.so)
==24555==    by 0x4F070F4: __db_open (in /usr/lib/libdb-4.7.so)
==24555==    by 0x4EFF855: __db_open_pp (in /usr/lib/libdb-4.7.so)
==24555==    by 0x40562D: berkeleydb::create() (berkeleydb.cpp:65)
==24555==    by 0x4021C9: engine::create(bool) (engine.cpp:42)
==24555==    by 0x401D23: parser::process_line(char*) (parser.cpp:69)
==24555== 
==24555== 
==24555== HEAP SUMMARY:
==24555==     in use at exit: 0 bytes in 0 blocks
==24555==   total heap usage: 138 allocs, 138 frees, 171,930,637 bytes allocated
==24555== 
==24555== All heap blocks were freed -- no leaks are possible
==24555== 
==24555== For counts of detected and suppressed errors, rerun with: -v
==24555== Use --track-origins=yes to see where uninitialised values come from
==24555== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --overwrite=1 --inmemorydb=1    
==24559== Memcheck, a memory error detector
==24559== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24559== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24559== Command: ./test ../../testfiles/1/45.tst --overwrite=1 --inmemorydb=1
==24559== 
==24559== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24559==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24559==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24559==  Address 0x5fda236 is 518 bytes inside a block of size 8,272 alloc'd
==24559==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24559==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24559==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24559==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24559== 
==24559== 
==24559== HEAP SUMMARY:
==24559==     in use at exit: 0 bytes in 0 blocks
==24559==   total heap usage: 8,468 allocs, 8,468 frees, 3,157,269 bytes allocated
==24559== 
==24559== All heap blocks were freed -- no leaks are possible
==24559== 
==24559== For counts of detected and suppressed errors, rerun with: -v
==24559== Use --track-origins=yes to see where uninitialised values come from
==24559== ERROR SUMMARY: 51 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --overwrite=1 --inmemorydb=1    
==24562== Memcheck, a memory error detector
==24562== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24562== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24562== Command: ./test ../../testfiles/1/220.tst --overwrite=1 --inmemorydb=1
==24562== 
==24562== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24562==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24562==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24562==  Address 0x5ff1eb6 is 150 bytes inside a block of size 8,272 alloc'd
==24562==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24562==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24562==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24562==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24562== 
==24562== 
==24562== HEAP SUMMARY:
==24562==     in use at exit: 0 bytes in 0 blocks
==24562==   total heap usage: 6,833 allocs, 6,833 frees, 3,684,282 bytes allocated
==24562== 
==24562== All heap blocks were freed -- no leaks are possible
==24562== 
==24562== For counts of detected and suppressed errors, rerun with: -v
==24562== Use --track-origins=yes to see where uninitialised values come from
==24562== ERROR SUMMARY: 36 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --overwrite=1 --inmemorydb=1    
==24565== Memcheck, a memory error detector
==24565== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24565== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24565== Command: ./test ../../testfiles/1/ext_020.tst --overwrite=1 --inmemorydb=1
==24565== 
==24565== 
==24565== HEAP SUMMARY:
==24565==     in use at exit: 0 bytes in 0 blocks
==24565==   total heap usage: 817 allocs, 817 frees, 691,799 bytes allocated
==24565== 
==24565== All heap blocks were freed -- no leaks are possible
==24565== 
==24565== For counts of detected and suppressed errors, rerun with: -v
==24565== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --overwrite=1 --inmemorydb=1    
==24568== Memcheck, a memory error detector
==24568== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24568== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24568== Command: ./test ../../testfiles/2/ext_060.tst --overwrite=1 --inmemorydb=1
==24568== 
==24568== 
==24568== HEAP SUMMARY:
==24568==     in use at exit: 0 bytes in 0 blocks
==24568==   total heap usage: 922,843 allocs, 922,843 frees, 24,977,855 bytes allocated
==24568== 
==24568== All heap blocks were freed -- no leaks are possible
==24568== 
==24568== For counts of detected and suppressed errors, rerun with: -v
==24568== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --overwrite=1 --inmemorydb=1    
==24571== Memcheck, a memory error detector
==24571== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24571== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24571== Command: ./test ../../testfiles/2/blb-001.tst --overwrite=1 --inmemorydb=1
==24571== 
==24571== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24571==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24571==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24571==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24571==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24571==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24571==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24571==    by 0x4F07938: __db_goff (in /usr/lib/libdb-4.7.so)
==24571==    by 0x4F1232B: __db_ret (in /usr/lib/libdb-4.7.so)
==24571==    by 0x4EF5695: __dbc_get (in /usr/lib/libdb-4.7.so)
==24571==    by 0x4EFE0EC: __dbc_get_pp (in /usr/lib/libdb-4.7.so)
==24571==    by 0x404DE0: berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:318)
==24571==    by 0x4024F1: engine::fullcheck() (engine.cpp:259)
==24571==  Address 0x5f05370 is 592 bytes inside a block of size 8,272 alloc'd
==24571==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24571==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24571==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24571==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24571==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24571==    by 0x4E53C59: __bam_new_file (in /usr/lib/libdb-4.7.so)
==24571==    by 0x4F06A0D: __db_new_file (in /usr/lib/libdb-4.7.so)
==24571==    by 0x4F070F4: __db_open (in /usr/lib/libdb-4.7.so)
==24571==    by 0x4EFF855: __db_open_pp (in /usr/lib/libdb-4.7.so)
==24571==    by 0x40562D: berkeleydb::create() (berkeleydb.cpp:65)
==24571==    by 0x4021C9: engine::create(bool) (engine.cpp:42)
==24571==    by 0x401D23: parser::process_line(char*) (parser.cpp:69)
==24571== 
==24571== 
==24571== HEAP SUMMARY:
==24571==     in use at exit: 0 bytes in 0 blocks
==24571==   total heap usage: 138 allocs, 138 frees, 93,064,913 bytes allocated
==24571== 
==24571== All heap blocks were freed -- no leaks are possible
==24571== 
==24571== For counts of detected and suppressed errors, rerun with: -v
==24571== Use --track-origins=yes to see where uninitialised values come from
==24571== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --reopen=1 --use-cursors=1    
==24575== Memcheck, a memory error detector
==24575== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24575== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24575== Command: ./test ../../testfiles/1/45.tst --reopen=1 --use-cursors=1
==24575== 
==24575== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24575==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24575==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24575==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24575==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24575==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24575==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24575==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24575==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24575==    by 0x40210C: engine::flush() (engine.cpp:350)
==24575==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24575==    by 0x401E76: parser::process() (parser.cpp:44)
==24575==    by 0x403308: main (main.cpp:464)
==24575==  Address 0x5f03f1e is 206 bytes inside a block of size 4,176 alloc'd
==24575==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24575==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24575==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24575==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24575==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24575==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24575==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24575==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24575==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24575==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24575==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24575==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24575== 
==24575== 
==24575== HEAP SUMMARY:
==24575==     in use at exit: 0 bytes in 0 blocks
==24575==   total heap usage: 3,923 allocs, 3,923 frees, 2,776,420 bytes allocated
==24575== 
==24575== All heap blocks were freed -- no leaks are possible
==24575== 
==24575== For counts of detected and suppressed errors, rerun with: -v
==24575== Use --track-origins=yes to see where uninitialised values come from
==24575== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --reopen=1 --use-cursors=1    
==24578== Memcheck, a memory error detector
==24578== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24578== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24578== Command: ./test ../../testfiles/1/220.tst --reopen=1 --use-cursors=1
==24578== 
==24578== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24578==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24578==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24578==  Address 0x5fc7476 is 118 bytes inside a block of size 4,176 alloc'd
==24578==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24578==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24578==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24578==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24578== 
==24578== 
==24578== HEAP SUMMARY:
==24578==     in use at exit: 0 bytes in 0 blocks
==24578==   total heap usage: 7,745 allocs, 7,745 frees, 2,453,007 bytes allocated
==24578== 
==24578== All heap blocks were freed -- no leaks are possible
==24578== 
==24578== For counts of detected and suppressed errors, rerun with: -v
==24578== Use --track-origins=yes to see where uninitialised values come from
==24578== ERROR SUMMARY: 91 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --reopen=1 --use-cursors=1    
==24581== Memcheck, a memory error detector
==24581== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24581== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24581== Command: ./test ../../testfiles/1/ext_020.tst --reopen=1 --use-cursors=1
==24581== 
==24581== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24581==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24581==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24581==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24581==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24581==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24581==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24581==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24581==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24581==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24581==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24581==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24581==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24581==  Address 0x5f070f6 is 118 bytes inside a block of size 4,176 alloc'd
==24581==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24581==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24581==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24581==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24581==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24581==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24581==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24581==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24581==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24581==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24581==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24581==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24581== 
==24581== 
==24581== HEAP SUMMARY:
==24581==     in use at exit: 0 bytes in 0 blocks
==24581==   total heap usage: 1,016 allocs, 1,016 frees, 993,428 bytes allocated
==24581== 
==24581== All heap blocks were freed -- no leaks are possible
==24581== 
==24581== For counts of detected and suppressed errors, rerun with: -v
==24581== Use --track-origins=yes to see where uninitialised values come from
==24581== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --reopen=1 --use-cursors=1    
==24584== Memcheck, a memory error detector
==24584== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24584== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24584== Command: ./test ../../testfiles/2/ext_060.tst --reopen=1 --use-cursors=1
==24584== 
==24584== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24584==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24584==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24584==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24584==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24584==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24584==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24584==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24584==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24584==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24584==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24584==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24584==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24584==  Address 0x5f1c55a is 410 bytes inside a block of size 4,176 alloc'd
==24584==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24584==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24584==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24584==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24584==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24584==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24584==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24584==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24584==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24584==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24584==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24584==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24584== 
==24584== 
==24584== HEAP SUMMARY:
==24584==     in use at exit: 0 bytes in 0 blocks
==24584==   total heap usage: 941,696 allocs, 941,696 frees, 25,188,286 bytes allocated
==24584== 
==24584== All heap blocks were freed -- no leaks are possible
==24584== 
==24584== For counts of detected and suppressed errors, rerun with: -v
==24584== Use --track-origins=yes to see where uninitialised values come from
==24584== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --reopen=1 --use-cursors=1    
==24587== Memcheck, a memory error detector
==24587== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24587== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24587== Command: ./test ../../testfiles/2/blb-001.tst --reopen=1 --use-cursors=1
==24587== 
==24587== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24587==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24587==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24587==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24587==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24587==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24587==  Address 0x5f023d8 is 3,976 bytes inside a block of size 4,176 alloc'd
==24587==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24587==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24587==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24587== 
==24587== 
==24587== HEAP SUMMARY:
==24587==     in use at exit: 0 bytes in 0 blocks
==24587==   total heap usage: 356 allocs, 356 frees, 203,455,483 bytes allocated
==24587== 
==24587== All heap blocks were freed -- no leaks are possible
==24587== 
==24587== For counts of detected and suppressed errors, rerun with: -v
==24587== Use --track-origins=yes to see where uninitialised values come from
==24587== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --reopen=1 --use-cursors=1 --duplicate=1    
==24591== Memcheck, a memory error detector
==24591== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24591== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24591== Command: ./test ../../testfiles/1/45.tst --reopen=1 --use-cursors=1 --duplicate=1
==24591== 
==24591== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24591==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24591==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24591==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24591==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24591==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24591==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24591==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24591==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24591==    by 0x40210C: engine::flush() (engine.cpp:350)
==24591==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24591==    by 0x401E76: parser::process() (parser.cpp:44)
==24591==    by 0x403308: main (main.cpp:464)
==24591==  Address 0x5f03f1e is 206 bytes inside a block of size 4,176 alloc'd
==24591==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24591==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24591==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24591==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24591==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24591==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24591==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24591==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24591==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24591==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24591==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24591==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24591== 
==24591== 
==24591== HEAP SUMMARY:
==24591==     in use at exit: 0 bytes in 0 blocks
==24591==   total heap usage: 3,923 allocs, 3,923 frees, 2,776,420 bytes allocated
==24591== 
==24591== All heap blocks were freed -- no leaks are possible
==24591== 
==24591== For counts of detected and suppressed errors, rerun with: -v
==24591== Use --track-origins=yes to see where uninitialised values come from
==24591== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --reopen=1 --use-cursors=1 --duplicate=1    
==24594== Memcheck, a memory error detector
==24594== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24594== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24594== Command: ./test ../../testfiles/1/220.tst --reopen=1 --use-cursors=1 --duplicate=1
==24594== 
==24594== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24594==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24594==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24594==  Address 0x5fa9c80 is 112 bytes inside a block of size 4,176 alloc'd
==24594==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24594==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24594==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24594==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24594== 
==24594== 
==24594== HEAP SUMMARY:
==24594==     in use at exit: 0 bytes in 0 blocks
==24594==   total heap usage: 9,047 allocs, 9,047 frees, 2,993,730 bytes allocated
==24594== 
==24594== All heap blocks were freed -- no leaks are possible
==24594== 
==24594== For counts of detected and suppressed errors, rerun with: -v
==24594== Use --track-origins=yes to see where uninitialised values come from
==24594== ERROR SUMMARY: 608 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --reopen=1 --use-cursors=1 --duplicate=1    
==24597== Memcheck, a memory error detector
==24597== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24597== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24597== Command: ./test ../../testfiles/1/ext_020.tst --reopen=1 --use-cursors=1 --duplicate=1
==24597== 
==24597== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24597==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24597==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24597==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24597==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24597==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24597==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24597==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24597==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24597==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24597==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24597==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24597==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24597==  Address 0x5f070f6 is 118 bytes inside a block of size 4,176 alloc'd
==24597==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24597==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24597==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24597==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24597==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24597==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24597==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24597==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24597==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24597==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24597==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24597==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24597== 
==24597== 
==24597== HEAP SUMMARY:
==24597==     in use at exit: 0 bytes in 0 blocks
==24597==   total heap usage: 1,016 allocs, 1,016 frees, 993,428 bytes allocated
==24597== 
==24597== All heap blocks were freed -- no leaks are possible
==24597== 
==24597== For counts of detected and suppressed errors, rerun with: -v
==24597== Use --track-origins=yes to see where uninitialised values come from
==24597== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --reopen=1 --use-cursors=1 --duplicate=1    
==24600== Memcheck, a memory error detector
==24600== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24600== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24600== Command: ./test ../../testfiles/2/ext_060.tst --reopen=1 --use-cursors=1 --duplicate=1
==24600== 
==24600== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24600==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24600==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24600==  Address 0x824639a is 410 bytes inside a block of size 4,176 alloc'd
==24600==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24600==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24600==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24600==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24600== 
==24600== 
==24600== HEAP SUMMARY:
==24600==     in use at exit: 0 bytes in 0 blocks
==24600==   total heap usage: 5,074,941 allocs, 5,074,941 frees, 135,783,024 bytes allocated
==24600== 
==24600== All heap blocks were freed -- no leaks are possible
==24600== 
==24600== For counts of detected and suppressed errors, rerun with: -v
==24600== Use --track-origins=yes to see where uninitialised values come from
==24600== ERROR SUMMARY: 74 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --reopen=1 --use-cursors=1 --duplicate=1    
==24610== Memcheck, a memory error detector
==24610== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24610== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24610== Command: ./test ../../testfiles/2/blb-001.tst --reopen=1 --use-cursors=1 --duplicate=1
==24610== 
==24610== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24610==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24610==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24610==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24610==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24610==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24610==  Address 0x5f02240 is 3,568 bytes inside a block of size 4,176 alloc'd
==24610==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24610==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24610==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24610== 
==24610== 
==24610== HEAP SUMMARY:
==24610==     in use at exit: 0 bytes in 0 blocks
==24610==   total heap usage: 358 allocs, 358 frees, 203,455,623 bytes allocated
==24610== 
==24610== All heap blocks were freed -- no leaks are possible
==24610== 
==24610== For counts of detected and suppressed errors, rerun with: -v
==24610== Use --track-origins=yes to see where uninitialised values come from
==24610== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --overwrite=1 --reopen=1 --use-cursors=1    
==24614== Memcheck, a memory error detector
==24614== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24614== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24614== Command: ./test ../../testfiles/1/45.tst --overwrite=1 --reopen=1 --use-cursors=1
==24614== 
==24614== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24614==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24614==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24614==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24614==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24614==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24614==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24614==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24614==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24614==    by 0x40210C: engine::flush() (engine.cpp:350)
==24614==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24614==    by 0x401E76: parser::process() (parser.cpp:44)
==24614==    by 0x403308: main (main.cpp:464)
==24614==  Address 0x5f03f1e is 206 bytes inside a block of size 4,176 alloc'd
==24614==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24614==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24614==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24614==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24614==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24614==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24614==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24614==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24614==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24614==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24614==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24614==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24614== 
==24614== 
==24614== HEAP SUMMARY:
==24614==     in use at exit: 0 bytes in 0 blocks
==24614==   total heap usage: 3,923 allocs, 3,923 frees, 2,776,420 bytes allocated
==24614== 
==24614== All heap blocks were freed -- no leaks are possible
==24614== 
==24614== For counts of detected and suppressed errors, rerun with: -v
==24614== Use --track-origins=yes to see where uninitialised values come from
==24614== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --overwrite=1 --reopen=1 --use-cursors=1    
==24617== Memcheck, a memory error detector
==24617== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24617== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24617== Command: ./test ../../testfiles/1/220.tst --overwrite=1 --reopen=1 --use-cursors=1
==24617== 
==24617== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24617==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24617==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24617==  Address 0x5fc34f6 is 118 bytes inside a block of size 4,176 alloc'd
==24617==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24617==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24617==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24617==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24617== 
==24617== 
==24617== HEAP SUMMARY:
==24617==     in use at exit: 0 bytes in 0 blocks
==24617==   total heap usage: 6,797 allocs, 6,797 frees, 2,635,562 bytes allocated
==24617== 
==24617== All heap blocks were freed -- no leaks are possible
==24617== 
==24617== For counts of detected and suppressed errors, rerun with: -v
==24617== Use --track-origins=yes to see where uninitialised values come from
==24617== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --overwrite=1 --reopen=1 --use-cursors=1    
==24620== Memcheck, a memory error detector
==24620== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24620== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24620== Command: ./test ../../testfiles/1/ext_020.tst --overwrite=1 --reopen=1 --use-cursors=1
==24620== 
==24620== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24620==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24620==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24620==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24620==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24620==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24620==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24620==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24620==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24620==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24620==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24620==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24620==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24620==  Address 0x5f070f6 is 118 bytes inside a block of size 4,176 alloc'd
==24620==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24620==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24620==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24620==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24620==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24620==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24620==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24620==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24620==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24620==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24620==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24620==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24620== 
==24620== 
==24620== HEAP SUMMARY:
==24620==     in use at exit: 0 bytes in 0 blocks
==24620==   total heap usage: 1,016 allocs, 1,016 frees, 993,428 bytes allocated
==24620== 
==24620== All heap blocks were freed -- no leaks are possible
==24620== 
==24620== For counts of detected and suppressed errors, rerun with: -v
==24620== Use --track-origins=yes to see where uninitialised values come from
==24620== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --overwrite=1 --reopen=1 --use-cursors=1    
==24623== Memcheck, a memory error detector
==24623== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24623== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24623== Command: ./test ../../testfiles/2/ext_060.tst --overwrite=1 --reopen=1 --use-cursors=1
==24623== 
==24623== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24623==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24623==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24623==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24623==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24623==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24623==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24623==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24623==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24623==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24623==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24623==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24623==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24623==  Address 0x5f1c55e is 414 bytes inside a block of size 4,176 alloc'd
==24623==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24623==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24623==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24623==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24623==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24623==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24623==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24623==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24623==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24623==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24623==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24623==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24623== 
==24623== 
==24623== HEAP SUMMARY:
==24623==     in use at exit: 0 bytes in 0 blocks
==24623==   total heap usage: 929,443 allocs, 929,443 frees, 25,022,548 bytes allocated
==24623== 
==24623== All heap blocks were freed -- no leaks are possible
==24623== 
==24623== For counts of detected and suppressed errors, rerun with: -v
==24623== Use --track-origins=yes to see where uninitialised values come from
==24623== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --overwrite=1 --reopen=1 --use-cursors=1    
==24626== Memcheck, a memory error detector
==24626== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24626== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24626== Command: ./test ../../testfiles/2/blb-001.tst --overwrite=1 --reopen=1 --use-cursors=1
==24626== 
==24626== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24626==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24626==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24626==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24626==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24626==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24626==  Address 0x5f0224c is 3,580 bytes inside a block of size 4,176 alloc'd
==24626==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24626==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24626==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24626== 
==24626== 
==24626== HEAP SUMMARY:
==24626==     in use at exit: 0 bytes in 0 blocks
==24626==   total heap usage: 342 allocs, 342 frees, 45,703,831 bytes allocated
==24626== 
==24626== All heap blocks were freed -- no leaks are possible
==24626== 
==24626== For counts of detected and suppressed errors, rerun with: -v
==24626== Use --track-origins=yes to see where uninitialised values come from
==24626== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --inmemorydb=1 --use-cursors=1    
==24630== Memcheck, a memory error detector
==24630== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24630== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24630== Command: ./test ../../testfiles/1/45.tst --inmemorydb=1 --use-cursors=1
==24630== 
==24630== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24630==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24630==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24630==  Address 0x5fe0cc6 is 518 bytes inside a block of size 8,272 alloc'd
==24630==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24630==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24630==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24630==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24630== 
==24630== 
==24630== HEAP SUMMARY:
==24630==     in use at exit: 0 bytes in 0 blocks
==24630==   total heap usage: 8,848 allocs, 8,848 frees, 3,162,589 bytes allocated
==24630== 
==24630== All heap blocks were freed -- no leaks are possible
==24630== 
==24630== For counts of detected and suppressed errors, rerun with: -v
==24630== Use --track-origins=yes to see where uninitialised values come from
==24630== ERROR SUMMARY: 51 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --inmemorydb=1 --use-cursors=1    
==24633== Memcheck, a memory error detector
==24633== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24633== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24633== Command: ./test ../../testfiles/1/220.tst --inmemorydb=1 --use-cursors=1
==24633== 
==24633== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24633==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24633==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24633==  Address 0x5fee5d6 is 134 bytes inside a block of size 8,272 alloc'd
==24633==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24633==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24633==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24633==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24633== 
==24633== 
==24633== HEAP SUMMARY:
==24633==     in use at exit: 0 bytes in 0 blocks
==24633==   total heap usage: 9,311 allocs, 9,311 frees, 2,842,291 bytes allocated
==24633== 
==24633== All heap blocks were freed -- no leaks are possible
==24633== 
==24633== For counts of detected and suppressed errors, rerun with: -v
==24633== Use --track-origins=yes to see where uninitialised values come from
==24633== ERROR SUMMARY: 34 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --inmemorydb=1 --use-cursors=1    
==24636== Memcheck, a memory error detector
==24636== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24636== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24636== Command: ./test ../../testfiles/1/ext_020.tst --inmemorydb=1 --use-cursors=1
==24636== 
==24636== 
==24636== HEAP SUMMARY:
==24636==     in use at exit: 0 bytes in 0 blocks
==24636==   total heap usage: 837 allocs, 837 frees, 697,681 bytes allocated
==24636== 
==24636== All heap blocks were freed -- no leaks are possible
==24636== 
==24636== For counts of detected and suppressed errors, rerun with: -v
==24636== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --inmemorydb=1 --use-cursors=1    
==24639== Memcheck, a memory error detector
==24639== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24639== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24639== Command: ./test ../../testfiles/2/ext_060.tst --inmemorydb=1 --use-cursors=1
==24639== 
==24639== 
==24639== HEAP SUMMARY:
==24639==     in use at exit: 0 bytes in 0 blocks
==24639==   total heap usage: 945,392 allocs, 945,392 frees, 25,130,588 bytes allocated
==24639== 
==24639== All heap blocks were freed -- no leaks are possible
==24639== 
==24639== For counts of detected and suppressed errors, rerun with: -v
==24639== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --inmemorydb=1 --use-cursors=1    
==24642== Memcheck, a memory error detector
==24642== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24642== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24642== Command: ./test ../../testfiles/2/blb-001.tst --inmemorydb=1 --use-cursors=1
==24642== 
==24642== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24642==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24642==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24642==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24642==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24642==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24642==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24642==    by 0x4F07938: __db_goff (in /usr/lib/libdb-4.7.so)
==24642==    by 0x4F1232B: __db_ret (in /usr/lib/libdb-4.7.so)
==24642==    by 0x4EF5695: __dbc_get (in /usr/lib/libdb-4.7.so)
==24642==    by 0x4EFE0EC: __dbc_get_pp (in /usr/lib/libdb-4.7.so)
==24642==    by 0x404DE0: berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:318)
==24642==    by 0x4024F1: engine::fullcheck() (engine.cpp:259)
==24642==  Address 0x5f05370 is 592 bytes inside a block of size 8,272 alloc'd
==24642==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24642==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24642==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24642==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24642==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24642==    by 0x4E53C59: __bam_new_file (in /usr/lib/libdb-4.7.so)
==24642==    by 0x4F06A0D: __db_new_file (in /usr/lib/libdb-4.7.so)
==24642==    by 0x4F070F4: __db_open (in /usr/lib/libdb-4.7.so)
==24642==    by 0x4EFF855: __db_open_pp (in /usr/lib/libdb-4.7.so)
==24642==    by 0x40562D: berkeleydb::create() (berkeleydb.cpp:65)
==24642==    by 0x4021C9: engine::create(bool) (engine.cpp:42)
==24642==    by 0x401D23: parser::process_line(char*) (parser.cpp:69)
==24642== 
==24642== 
==24642== HEAP SUMMARY:
==24642==     in use at exit: 0 bytes in 0 blocks
==24642==   total heap usage: 133 allocs, 133 frees, 171,929,765 bytes allocated
==24642== 
==24642== All heap blocks were freed -- no leaks are possible
==24642== 
==24642== For counts of detected and suppressed errors, rerun with: -v
==24642== Use --track-origins=yes to see where uninitialised values come from
==24642== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==24646== Memcheck, a memory error detector
==24646== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24646== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24646== Command: ./test ../../testfiles/1/45.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==24646== 
==24646== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24646==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24646==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24646==  Address 0x5fe0cc6 is 518 bytes inside a block of size 8,272 alloc'd
==24646==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24646==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24646==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24646==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24646== 
==24646== 
==24646== HEAP SUMMARY:
==24646==     in use at exit: 0 bytes in 0 blocks
==24646==   total heap usage: 8,848 allocs, 8,848 frees, 3,162,589 bytes allocated
==24646== 
==24646== All heap blocks were freed -- no leaks are possible
==24646== 
==24646== For counts of detected and suppressed errors, rerun with: -v
==24646== Use --track-origins=yes to see where uninitialised values come from
==24646== ERROR SUMMARY: 51 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==24649== Memcheck, a memory error detector
==24649== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24649== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24649== Command: ./test ../../testfiles/1/220.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==24649== 
==24649== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24649==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24649==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24649==  Address 0x5ffd4d2 is 130 bytes inside a block of size 8,272 alloc'd
==24649==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24649==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24649==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24649==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24649== 
==24649== 
==24649== HEAP SUMMARY:
==24649==     in use at exit: 0 bytes in 0 blocks
==24649==   total heap usage: 9,820 allocs, 9,820 frees, 3,719,039 bytes allocated
==24649== 
==24649== All heap blocks were freed -- no leaks are possible
==24649== 
==24649== For counts of detected and suppressed errors, rerun with: -v
==24649== Use --track-origins=yes to see where uninitialised values come from
==24649== ERROR SUMMARY: 36 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==24652== Memcheck, a memory error detector
==24652== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24652== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24652== Command: ./test ../../testfiles/1/ext_020.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==24652== 
==24652== 
==24652== HEAP SUMMARY:
==24652==     in use at exit: 0 bytes in 0 blocks
==24652==   total heap usage: 837 allocs, 837 frees, 697,681 bytes allocated
==24652== 
==24652== All heap blocks were freed -- no leaks are possible
==24652== 
==24652== For counts of detected and suppressed errors, rerun with: -v
==24652== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==24655== Memcheck, a memory error detector
==24655== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24655== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24655== Command: ./test ../../testfiles/2/ext_060.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==24655== 
==24655== 
==24655== HEAP SUMMARY:
==24655==     in use at exit: 0 bytes in 0 blocks
==24655==   total heap usage: 940,804 allocs, 940,804 frees, 25,419,376 bytes allocated
==24655== 
==24655== All heap blocks were freed -- no leaks are possible
==24655== 
==24655== For counts of detected and suppressed errors, rerun with: -v
==24655== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==24658== Memcheck, a memory error detector
==24658== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24658== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24658== Command: ./test ../../testfiles/2/blb-001.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==24658== 
==24658== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24658==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24658==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24658==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24658==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24658==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24658==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24658==    by 0x4F07938: __db_goff (in /usr/lib/libdb-4.7.so)
==24658==    by 0x4F1232B: __db_ret (in /usr/lib/libdb-4.7.so)
==24658==    by 0x4EF5695: __dbc_get (in /usr/lib/libdb-4.7.so)
==24658==    by 0x4EFE0EC: __dbc_get_pp (in /usr/lib/libdb-4.7.so)
==24658==    by 0x404DE0: berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:318)
==24658==    by 0x4024F1: engine::fullcheck() (engine.cpp:259)
==24658==  Address 0x5f05370 is 592 bytes inside a block of size 8,272 alloc'd
==24658==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24658==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24658==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24658==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24658==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24658==    by 0x4E53C59: __bam_new_file (in /usr/lib/libdb-4.7.so)
==24658==    by 0x4F06A0D: __db_new_file (in /usr/lib/libdb-4.7.so)
==24658==    by 0x4F070F4: __db_open (in /usr/lib/libdb-4.7.so)
==24658==    by 0x4EFF855: __db_open_pp (in /usr/lib/libdb-4.7.so)
==24658==    by 0x40562D: berkeleydb::create() (berkeleydb.cpp:65)
==24658==    by 0x4021C9: engine::create(bool) (engine.cpp:42)
==24658==    by 0x401D23: parser::process_line(char*) (parser.cpp:69)
==24658== 
==24658== 
==24658== HEAP SUMMARY:
==24658==     in use at exit: 0 bytes in 0 blocks
==24658==   total heap usage: 138 allocs, 138 frees, 93,064,913 bytes allocated
==24658== 
==24658== All heap blocks were freed -- no leaks are possible
==24658== 
==24658== For counts of detected and suppressed errors, rerun with: -v
==24658== Use --track-origins=yes to see where uninitialised values come from
==24658== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --fullcheck-find=1    
==24662== Memcheck, a memory error detector
==24662== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24662== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24662== Command: ./test ../../testfiles/1/45.tst --fullcheck-find=1
==24662== 
==24662== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24662==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24662==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24662==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24662==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24662==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24662==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24662==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24662==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24662==    by 0x40210C: engine::flush() (engine.cpp:350)
==24662==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24662==    by 0x401E76: parser::process() (parser.cpp:44)
==24662==    by 0x403308: main (main.cpp:464)
==24662==  Address 0x5f0350e is 206 bytes inside a block of size 4,176 alloc'd
==24662==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24662==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24662==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24662==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24662==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24662==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24662==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24662==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24662==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24662==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24662==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24662==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24662== 
==24662== 
==24662== HEAP SUMMARY:
==24662==     in use at exit: 0 bytes in 0 blocks
==24662==   total heap usage: 3,549 allocs, 3,549 frees, 2,271,169 bytes allocated
==24662== 
==24662== All heap blocks were freed -- no leaks are possible
==24662== 
==24662== For counts of detected and suppressed errors, rerun with: -v
==24662== Use --track-origins=yes to see where uninitialised values come from
==24662== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --fullcheck-find=1    
==24665== Memcheck, a memory error detector
==24665== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24665== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24665== Command: ./test ../../testfiles/1/220.tst --fullcheck-find=1
==24665== 
==24665== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24665==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24665==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24665==  Address 0x5fbbd7a is 122 bytes inside a block of size 4,176 alloc'd
==24665==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24665==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24665==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24665==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24665== 
==24665== 
==24665== HEAP SUMMARY:
==24665==     in use at exit: 0 bytes in 0 blocks
==24665==   total heap usage: 4,799 allocs, 4,799 frees, 1,953,965 bytes allocated
==24665== 
==24665== All heap blocks were freed -- no leaks are possible
==24665== 
==24665== For counts of detected and suppressed errors, rerun with: -v
==24665== Use --track-origins=yes to see where uninitialised values come from
==24665== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --fullcheck-find=1    
==24668== Memcheck, a memory error detector
==24668== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24668== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24668== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-find=1
==24668== 
==24668== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24668==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24668==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24668==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24668==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24668==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24668==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24668==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24668==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24668==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24668==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24668==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24668==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24668==  Address 0x5f08306 is 118 bytes inside a block of size 4,176 alloc'd
==24668==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24668==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24668==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24668==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24668==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24668==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24668==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24668==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24668==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24668==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24668==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24668==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24668== 
==24668== 
==24668== HEAP SUMMARY:
==24668==     in use at exit: 0 bytes in 0 blocks
==24668==   total heap usage: 1,320 allocs, 1,320 frees, 854,883 bytes allocated
==24668== 
==24668== All heap blocks were freed -- no leaks are possible
==24668== 
==24668== For counts of detected and suppressed errors, rerun with: -v
==24668== Use --track-origins=yes to see where uninitialised values come from
==24668== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --fullcheck-find=1    
==24671== Memcheck, a memory error detector
==24671== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24671== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24671== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-find=1
==24671== 
==24671== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24671==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24671==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24671==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24671==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24671==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24671==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24671==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24671==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24671==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24671==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24671==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24671==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24671==  Address 0x5f2c93a is 410 bytes inside a block of size 4,176 alloc'd
==24671==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24671==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24671==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24671==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24671==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24671==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24671==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24671==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24671==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24671==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24671==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24671==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24671== 
==24671== 
==24671== HEAP SUMMARY:
==24671==     in use at exit: 0 bytes in 0 blocks
==24671==   total heap usage: 2,525,134 allocs, 2,525,134 frees, 66,573,482 bytes allocated
==24671== 
==24671== All heap blocks were freed -- no leaks are possible
==24671== 
==24671== For counts of detected and suppressed errors, rerun with: -v
==24671== Use --track-origins=yes to see where uninitialised values come from
==24671== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --fullcheck-find=1    
==24674== Memcheck, a memory error detector
==24674== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24674== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24674== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-find=1
==24674== 
==24674== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24674==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24674==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24674==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24674==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24674==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24674==  Address 0x5f023d8 is 3,976 bytes inside a block of size 4,176 alloc'd
==24674==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24674==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24674==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24674== 
==24674== 
==24674== HEAP SUMMARY:
==24674==     in use at exit: 0 bytes in 0 blocks
==24674==   total heap usage: 224 allocs, 224 frees, 121,989,804 bytes allocated
==24674== 
==24674== All heap blocks were freed -- no leaks are possible
==24674== 
==24674== For counts of detected and suppressed errors, rerun with: -v
==24674== Use --track-origins=yes to see where uninitialised values come from
==24674== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --fullcheck-find=1 --duplicate=1    
==24678== Memcheck, a memory error detector
==24678== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24678== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24678== Command: ./test ../../testfiles/1/45.tst --fullcheck-find=1 --duplicate=1
==24678== 
==24678== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24678==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24678==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24678==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24678==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24678==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24678==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24678==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24678==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24678==    by 0x40210C: engine::flush() (engine.cpp:350)
==24678==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24678==    by 0x401E76: parser::process() (parser.cpp:44)
==24678==    by 0x403308: main (main.cpp:464)
==24678==  Address 0x5f0350e is 206 bytes inside a block of size 4,176 alloc'd
==24678==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24678==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24678==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24678==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24678==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24678==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24678==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24678==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24678==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24678==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24678==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24678==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24678== 
==24678== 
==24678== HEAP SUMMARY:
==24678==     in use at exit: 0 bytes in 0 blocks
==24678==   total heap usage: 3,549 allocs, 3,549 frees, 2,271,169 bytes allocated
==24678== 
==24678== All heap blocks were freed -- no leaks are possible
==24678== 
==24678== For counts of detected and suppressed errors, rerun with: -v
==24678== Use --track-origins=yes to see where uninitialised values come from
==24678== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --fullcheck-find=1 --duplicate=1    
==24681== Memcheck, a memory error detector
==24681== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24681== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24681== Command: ./test ../../testfiles/1/220.tst --fullcheck-find=1 --duplicate=1
==24681== 
==24681== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24681==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24681==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24681==  Address 0x5fa8b10 is 112 bytes inside a block of size 4,176 alloc'd
==24681==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24681==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24681==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24681==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24681== 
==24681== 
==24681== HEAP SUMMARY:
==24681==     in use at exit: 0 bytes in 0 blocks
==24681==   total heap usage: 6,341 allocs, 6,341 frees, 2,522,153 bytes allocated
==24681== 
==24681== All heap blocks were freed -- no leaks are possible
==24681== 
==24681== For counts of detected and suppressed errors, rerun with: -v
==24681== Use --track-origins=yes to see where uninitialised values come from
==24681== ERROR SUMMARY: 607 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --fullcheck-find=1 --duplicate=1    
==24684== Memcheck, a memory error detector
==24684== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24684== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24684== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-find=1 --duplicate=1
==24684== 
==24684== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24684==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24684==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24684==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24684==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24684==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24684==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24684==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24684==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24684==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24684==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24684==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24684==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24684==  Address 0x5f08306 is 118 bytes inside a block of size 4,176 alloc'd
==24684==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24684==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24684==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24684==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24684==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24684==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24684==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24684==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24684==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24684==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24684==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24684==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24684== 
==24684== 
==24684== HEAP SUMMARY:
==24684==     in use at exit: 0 bytes in 0 blocks
==24684==   total heap usage: 1,320 allocs, 1,320 frees, 854,883 bytes allocated
==24684== 
==24684== All heap blocks were freed -- no leaks are possible
==24684== 
==24684== For counts of detected and suppressed errors, rerun with: -v
==24684== Use --track-origins=yes to see where uninitialised values come from
==24684== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --fullcheck-find=1 --duplicate=1    
==24687== Memcheck, a memory error detector
==24687== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24687== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24687== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-find=1 --duplicate=1
==24687== 
==24687== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24687==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24687==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24687==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24687==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24687==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24687==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24687==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24687==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24687==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24687==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24687==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24687==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24687==  Address 0x5f1ea56 is 614 bytes inside a block of size 4,176 alloc'd
==24687==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24687==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24687==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24687==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24687==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24687==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24687==    by 0x4E619E2: __bam_split (in /usr/lib/libdb-4.7.so)
==24687==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24687==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24687==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24687==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24687==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24687== 
==24687== 
==24687== HEAP SUMMARY:
==24687==     in use at exit: 0 bytes in 0 blocks
==24687==   total heap usage: 2,528,472 allocs, 2,528,472 frees, 68,451,477 bytes allocated
==24687== 
==24687== All heap blocks were freed -- no leaks are possible
==24687== 
==24687== For counts of detected and suppressed errors, rerun with: -v
==24687== Use --track-origins=yes to see where uninitialised values come from
==24687== ERROR SUMMARY: 15 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --fullcheck-find=1 --duplicate=1    
==24692== Memcheck, a memory error detector
==24692== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24692== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24692== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-find=1 --duplicate=1
==24692== 
==24692== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24692==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24692==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24692==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24692==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24692==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24692==  Address 0x5f02240 is 3,568 bytes inside a block of size 4,176 alloc'd
==24692==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24692==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24692==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24692== 
==24692== 
==24692== HEAP SUMMARY:
==24692==     in use at exit: 0 bytes in 0 blocks
==24692==   total heap usage: 227 allocs, 227 frees, 121,989,948 bytes allocated
==24692== 
==24692== All heap blocks were freed -- no leaks are possible
==24692== 
==24692== For counts of detected and suppressed errors, rerun with: -v
==24692== Use --track-origins=yes to see where uninitialised values come from
==24692== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --fullcheck-find=1 --useralloc=1    
==24696== Memcheck, a memory error detector
==24696== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24696== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24696== Command: ./test ../../testfiles/1/45.tst --fullcheck-find=1 --useralloc=1
==24696== 
==24696== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24696==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24696==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24696==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24696==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24696==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24696==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24696==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24696==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24696==    by 0x40210C: engine::flush() (engine.cpp:350)
==24696==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24696==    by 0x401E76: parser::process() (parser.cpp:44)
==24696==    by 0x403308: main (main.cpp:464)
==24696==  Address 0x9f032de is 206 bytes inside a block of size 4,176 alloc'd
==24696==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24696==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24696==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24696==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24696==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24696==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24696==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24696==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24696==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24696==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24696==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24696==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24696== 
==24696== 
==24696== HEAP SUMMARY:
==24696==     in use at exit: 0 bytes in 0 blocks
==24696==   total heap usage: 3,546 allocs, 3,546 frees, 69,379,601 bytes allocated
==24696== 
==24696== All heap blocks were freed -- no leaks are possible
==24696== 
==24696== For counts of detected and suppressed errors, rerun with: -v
==24696== Use --track-origins=yes to see where uninitialised values come from
==24696== ERROR SUMMARY: 107 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --fullcheck-find=1 --useralloc=1    
==24700== Memcheck, a memory error detector
==24700== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24700== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24700== Command: ./test ../../testfiles/1/220.tst --fullcheck-find=1 --useralloc=1
==24700== 
==24700== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24700==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24700==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24700==  Address 0x9f171d6 is 150 bytes inside a block of size 4,176 alloc'd
==24700==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24700==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24700==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24700==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24700== 
==24700== 
==24700== HEAP SUMMARY:
==24700==     in use at exit: 0 bytes in 0 blocks
==24700==   total heap usage: 4,791 allocs, 4,791 frees, 69,054,792 bytes allocated
==24700== 
==24700== All heap blocks were freed -- no leaks are possible
==24700== 
==24700== For counts of detected and suppressed errors, rerun with: -v
==24700== Use --track-origins=yes to see where uninitialised values come from
==24700== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --fullcheck-find=1 --useralloc=1    
==24703== Memcheck, a memory error detector
==24703== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24703== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24703== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-find=1 --useralloc=1
==24703== 
==24703== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24703==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24703==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24703==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24703==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24703==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24703==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24703==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24703==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24703==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24703==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24703==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24703==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24703==  Address 0x9f07df6 is 118 bytes inside a block of size 4,176 alloc'd
==24703==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24703==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24703==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24703==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24703==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24703==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24703==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24703==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24703==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24703==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24703==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24703==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24703== 
==24703== 
==24703== HEAP SUMMARY:
==24703==     in use at exit: 0 bytes in 0 blocks
==24703==   total heap usage: 1,319 allocs, 1,319 frees, 67,962,460 bytes allocated
==24703== 
==24703== All heap blocks were freed -- no leaks are possible
==24703== 
==24703== For counts of detected and suppressed errors, rerun with: -v
==24703== Use --track-origins=yes to see where uninitialised values come from
==24703== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --fullcheck-find=1 --useralloc=1    
==24706== Memcheck, a memory error detector
==24706== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24706== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24706== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-find=1 --useralloc=1
==24706== 
==24706== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24706==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24706==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24706==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24706==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24706==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24706==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24706==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24706==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24706==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24706==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24706==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24706==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24706==  Address 0x9f2c8da is 410 bytes inside a block of size 4,176 alloc'd
==24706==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24706==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24706==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24706==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24706==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24706==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24706==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24706==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24706==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24706==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24706==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24706==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24706== 
==24706== 
==24706== HEAP SUMMARY:
==24706==     in use at exit: 0 bytes in 0 blocks
==24706==   total heap usage: 2,525,137 allocs, 2,525,137 frees, 133,682,443 bytes allocated
==24706== 
==24706== All heap blocks were freed -- no leaks are possible
==24706== 
==24706== For counts of detected and suppressed errors, rerun with: -v
==24706== Use --track-origins=yes to see where uninitialised values come from
==24706== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --fullcheck-find=1 --useralloc=1    
==24709== Memcheck, a memory error detector
==24709== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24709== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24709== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-find=1 --useralloc=1
==24709== 
==24709== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24709==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24709==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24709==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24709==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24709==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24709==  Address 0x9f02468 is 3,976 bytes inside a block of size 4,176 alloc'd
==24709==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24709==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24709==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24709== 
==24709== 
==24709== HEAP SUMMARY:
==24709==     in use at exit: 0 bytes in 0 blocks
==24709==   total heap usage: 224 allocs, 224 frees, 148,612,908 bytes allocated
==24709== 
==24709== All heap blocks were freed -- no leaks are possible
==24709== 
==24709== For counts of detected and suppressed errors, rerun with: -v
==24709== Use --track-origins=yes to see where uninitialised values come from
==24709== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --fullcheck-backwards=1    
==24713== Memcheck, a memory error detector
==24713== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24713== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24713== Command: ./test ../../testfiles/1/45.tst --fullcheck-backwards=1
==24713== 
==24713== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24713==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24713==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24713==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24713==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24713==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24713==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24713==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24713==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24713==    by 0x40210C: engine::flush() (engine.cpp:350)
==24713==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24713==    by 0x401E76: parser::process() (parser.cpp:44)
==24713==    by 0x403308: main (main.cpp:464)
==24713==  Address 0x5f0311e is 206 bytes inside a block of size 4,176 alloc'd
==24713==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24713==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24713==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24713==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24713==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24713==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24713==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24713==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24713==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24713==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24713==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24713==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24713== 
==24713== 
==24713== HEAP SUMMARY:
==24713==     in use at exit: 0 bytes in 0 blocks
==24713==   total heap usage: 3,350 allocs, 3,350 frees, 2,270,176 bytes allocated
==24713== 
==24713== All heap blocks were freed -- no leaks are possible
==24713== 
==24713== For counts of detected and suppressed errors, rerun with: -v
==24713== Use --track-origins=yes to see where uninitialised values come from
==24713== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --fullcheck-backwards=1    
==24716== Memcheck, a memory error detector
==24716== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24716== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24716== Command: ./test ../../testfiles/1/220.tst --fullcheck-backwards=1
==24716== 
==24716== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24716==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24716==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24716==  Address 0x5fba6be is 1,118 bytes inside a block of size 4,176 alloc'd
==24716==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24716==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24716==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24716== 
==24716== 
==24716== HEAP SUMMARY:
==24716==     in use at exit: 0 bytes in 0 blocks
==24716==   total heap usage: 4,055 allocs, 4,055 frees, 1,948,695 bytes allocated
==24716== 
==24716== All heap blocks were freed -- no leaks are possible
==24716== 
==24716== For counts of detected and suppressed errors, rerun with: -v
==24716== Use --track-origins=yes to see where uninitialised values come from
==24716== ERROR SUMMARY: 94 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --fullcheck-backwards=1    
==24719== Memcheck, a memory error detector
==24719== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24719== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24719== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-backwards=1
==24719== 
==24719== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24719==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24719==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24719==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24719==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24719==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24719==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24719==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24719==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24719==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24719==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24719==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24719==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24719==  Address 0x5f06e06 is 118 bytes inside a block of size 4,176 alloc'd
==24719==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24719==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24719==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24719==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24719==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24719==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24719==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24719==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24719==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24719==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24719==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24719==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24719== 
==24719== 
==24719== HEAP SUMMARY:
==24719==     in use at exit: 0 bytes in 0 blocks
==24719==   total heap usage: 831 allocs, 831 frees, 665,399 bytes allocated
==24719== 
==24719== All heap blocks were freed -- no leaks are possible
==24719== 
==24719== For counts of detected and suppressed errors, rerun with: -v
==24719== Use --track-origins=yes to see where uninitialised values come from
==24719== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --fullcheck-backwards=1    
==24722== Memcheck, a memory error detector
==24722== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24722== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24722== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-backwards=1
==24722== 
==24722== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24722==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24722==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24722==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24722==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24722==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24722==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24722==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24722==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24722==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24722==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24722==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24722==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24722==  Address 0x5f1d0da is 410 bytes inside a block of size 4,176 alloc'd
==24722==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24722==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24722==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24722==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24722==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24722==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24722==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24722==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24722==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24722==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24722==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24722==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24722== 
==24722== 
==24722== HEAP SUMMARY:
==24722==     in use at exit: 0 bytes in 0 blocks
==24722==   total heap usage: 919,990 allocs, 919,990 frees, 24,441,599 bytes allocated
==24722== 
==24722== All heap blocks were freed -- no leaks are possible
==24722== 
==24722== For counts of detected and suppressed errors, rerun with: -v
==24722== Use --track-origins=yes to see where uninitialised values come from
==24722== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --fullcheck-backwards=1    
==24725== Memcheck, a memory error detector
==24725== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24725== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24725== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-backwards=1
==24725== 
==24725== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24725==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24725==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24725==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24725==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24725==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24725==  Address 0x5f023d8 is 3,976 bytes inside a block of size 4,176 alloc'd
==24725==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24725==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24725==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24725== 
==24725== 
==24725== HEAP SUMMARY:
==24725==     in use at exit: 0 bytes in 0 blocks
==24725==   total heap usage: 206 allocs, 206 frees, 121,989,732 bytes allocated
==24725== 
==24725== All heap blocks were freed -- no leaks are possible
==24725== 
==24725== For counts of detected and suppressed errors, rerun with: -v
==24725== Use --track-origins=yes to see where uninitialised values come from
==24725== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --fullcheck-backwards=1 --duplicate=1    
==24729== Memcheck, a memory error detector
==24729== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24729== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24729== Command: ./test ../../testfiles/1/45.tst --fullcheck-backwards=1 --duplicate=1
==24729== 
==24729== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24729==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24729==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24729==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24729==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24729==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24729==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24729==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24729==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24729==    by 0x40210C: engine::flush() (engine.cpp:350)
==24729==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24729==    by 0x401E76: parser::process() (parser.cpp:44)
==24729==    by 0x403308: main (main.cpp:464)
==24729==  Address 0x5f0311e is 206 bytes inside a block of size 4,176 alloc'd
==24729==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24729==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24729==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24729==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24729==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24729==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24729==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24729==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24729==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24729==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24729==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24729==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24729== 
==24729== 
==24729== HEAP SUMMARY:
==24729==     in use at exit: 0 bytes in 0 blocks
==24729==   total heap usage: 3,350 allocs, 3,350 frees, 2,270,176 bytes allocated
==24729== 
==24729== All heap blocks were freed -- no leaks are possible
==24729== 
==24729== For counts of detected and suppressed errors, rerun with: -v
==24729== Use --track-origins=yes to see where uninitialised values come from
==24729== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --fullcheck-backwards=1 --duplicate=1    
==24732== Memcheck, a memory error detector
==24732== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24732== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24732== Command: ./test ../../testfiles/1/220.tst --fullcheck-backwards=1 --duplicate=1
==24732== 
==24732== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24732==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24732==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24732==  Address 0x5fa5f87 is 1,127 bytes inside a block of size 4,176 alloc'd
==24732==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24732==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24732==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24732== 
==24732== 
==24732== HEAP SUMMARY:
==24732==     in use at exit: 0 bytes in 0 blocks
==24732==   total heap usage: 6,854 allocs, 6,854 frees, 2,688,420 bytes allocated
==24732== 
==24732== All heap blocks were freed -- no leaks are possible
==24732== 
==24732== For counts of detected and suppressed errors, rerun with: -v
==24732== Use --track-origins=yes to see where uninitialised values come from
==24732== ERROR SUMMARY: 599 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --fullcheck-backwards=1 --duplicate=1    
==24735== Memcheck, a memory error detector
==24735== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24735== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24735== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-backwards=1 --duplicate=1
==24735== 
==24735== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24735==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24735==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24735==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24735==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24735==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24735==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24735==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24735==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24735==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24735==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24735==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24735==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24735==  Address 0x5f06e06 is 118 bytes inside a block of size 4,176 alloc'd
==24735==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24735==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24735==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24735==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24735==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24735==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24735==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24735==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24735==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24735==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24735==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24735==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24735== 
==24735== 
==24735== HEAP SUMMARY:
==24735==     in use at exit: 0 bytes in 0 blocks
==24735==   total heap usage: 831 allocs, 831 frees, 665,399 bytes allocated
==24735== 
==24735== All heap blocks were freed -- no leaks are possible
==24735== 
==24735== For counts of detected and suppressed errors, rerun with: -v
==24735== Use --track-origins=yes to see where uninitialised values come from
==24735== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --fullcheck-backwards=1 --duplicate=1    
==24738== Memcheck, a memory error detector
==24738== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24738== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24738== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-backwards=1 --duplicate=1
==24738== 
==24738== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24738==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24738==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24738==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24738==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24738==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24738==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24738==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24738==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24738==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24738==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24738==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24738==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24738==  Address 0x5f16be6 is 614 bytes inside a block of size 4,176 alloc'd
==24738==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24738==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24738==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24738==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24738==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24738==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24738==    by 0x4E619E2: __bam_split (in /usr/lib/libdb-4.7.so)
==24738==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24738==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24738==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24738==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24738==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24738== 
==24738== 
==24738== HEAP SUMMARY:
==24738==     in use at exit: 0 bytes in 0 blocks
==24738==   total heap usage: 1,447,686 allocs, 1,447,686 frees, 43,828,702 bytes allocated
==24738== 
==24738== All heap blocks were freed -- no leaks are possible
==24738== 
==24738== For counts of detected and suppressed errors, rerun with: -v
==24738== Use --track-origins=yes to see where uninitialised values come from
==24738== ERROR SUMMARY: 15 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --fullcheck-backwards=1 --duplicate=1    
==24741== Memcheck, a memory error detector
==24741== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24741== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24741== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-backwards=1 --duplicate=1
==24741== 
==24741== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24741==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24741==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24741==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24741==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24741==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24741==  Address 0x5f02240 is 3,568 bytes inside a block of size 4,176 alloc'd
==24741==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24741==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24741==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24741== 
==24741== 
==24741== HEAP SUMMARY:
==24741==     in use at exit: 0 bytes in 0 blocks
==24741==   total heap usage: 210 allocs, 210 frees, 121,990,680 bytes allocated
==24741== 
==24741== All heap blocks were freed -- no leaks are possible
==24741== 
==24741== For counts of detected and suppressed errors, rerun with: -v
==24741== Use --track-origins=yes to see where uninitialised values come from
==24741== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --fullcheck-backwards=1 --useralloc=1    
==24745== Memcheck, a memory error detector
==24745== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24745== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24745== Command: ./test ../../testfiles/1/45.tst --fullcheck-backwards=1 --useralloc=1
==24745== 
==24745== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24745==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24745==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24745==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24745==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24745==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24745==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24745==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24745==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24745==    by 0x40210C: engine::flush() (engine.cpp:350)
==24745==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24745==    by 0x401E76: parser::process() (parser.cpp:44)
==24745==    by 0x403308: main (main.cpp:464)
==24745==  Address 0x9f0301e is 206 bytes inside a block of size 4,176 alloc'd
==24745==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24745==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24745==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24745==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24745==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24745==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24745==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24745==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24745==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24745==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24745==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24745==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24745== 
==24745== 
==24745== HEAP SUMMARY:
==24745==     in use at exit: 0 bytes in 0 blocks
==24745==   total heap usage: 3,348 allocs, 3,348 frees, 69,378,845 bytes allocated
==24745== 
==24745== All heap blocks were freed -- no leaks are possible
==24745== 
==24745== For counts of detected and suppressed errors, rerun with: -v
==24745== Use --track-origins=yes to see where uninitialised values come from
==24745== ERROR SUMMARY: 107 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --fullcheck-backwards=1 --useralloc=1    
==24748== Memcheck, a memory error detector
==24748== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24748== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24748== Command: ./test ../../testfiles/1/220.tst --fullcheck-backwards=1 --useralloc=1
==24748== 
==24748== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24748==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24748==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24748==  Address 0x9f19bde is 142 bytes inside a block of size 4,176 alloc'd
==24748==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24748==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24748==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24748==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24748== 
==24748== 
==24748== HEAP SUMMARY:
==24748==     in use at exit: 0 bytes in 0 blocks
==24748==   total heap usage: 4,046 allocs, 4,046 frees, 69,049,378 bytes allocated
==24748== 
==24748== All heap blocks were freed -- no leaks are possible
==24748== 
==24748== For counts of detected and suppressed errors, rerun with: -v
==24748== Use --track-origins=yes to see where uninitialised values come from
==24748== ERROR SUMMARY: 91 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --fullcheck-backwards=1 --useralloc=1    
==24751== Memcheck, a memory error detector
==24751== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24751== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24751== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-backwards=1 --useralloc=1
==24751== 
==24751== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24751==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24751==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24751==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24751==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24751==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24751==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24751==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24751==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24751==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24751==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24751==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24751==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24751==  Address 0x9f05a26 is 118 bytes inside a block of size 4,176 alloc'd
==24751==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24751==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24751==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24751==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24751==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24751==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24751==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24751==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24751==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24751==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24751==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24751==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24751== 
==24751== 
==24751== HEAP SUMMARY:
==24751==     in use at exit: 0 bytes in 0 blocks
==24751==   total heap usage: 620 allocs, 620 frees, 67,684,526 bytes allocated
==24751== 
==24751== All heap blocks were freed -- no leaks are possible
==24751== 
==24751== For counts of detected and suppressed errors, rerun with: -v
==24751== Use --track-origins=yes to see where uninitialised values come from
==24751== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --fullcheck-backwards=1 --useralloc=1    
==24754== Memcheck, a memory error detector
==24754== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24754== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24754== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-backwards=1 --useralloc=1
==24754== 
==24754== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24754==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24754==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24754==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24754==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24754==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24754==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24754==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24754==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24754==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24754==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24754==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24754==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24754==  Address 0x9f1835a is 410 bytes inside a block of size 4,176 alloc'd
==24754==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24754==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24754==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24754==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24754==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24754==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24754==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24754==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24754==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24754==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24754==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24754==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24754== 
==24754== 
==24754== HEAP SUMMARY:
==24754==     in use at exit: 0 bytes in 0 blocks
==24754==   total heap usage: 649,278 allocs, 649,278 frees, 84,514,327 bytes allocated
==24754== 
==24754== All heap blocks were freed -- no leaks are possible
==24754== 
==24754== For counts of detected and suppressed errors, rerun with: -v
==24754== Use --track-origins=yes to see where uninitialised values come from
==24754== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --fullcheck-backwards=1 --useralloc=1    
==24757== Memcheck, a memory error detector
==24757== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24757== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24757== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-backwards=1 --useralloc=1
==24757== 
==24757== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24757==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24757==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24757==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24757==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24757==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24757==  Address 0x9f02468 is 3,976 bytes inside a block of size 4,176 alloc'd
==24757==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24757==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24757==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24757== 
==24757== 
==24757== HEAP SUMMARY:
==24757==     in use at exit: 0 bytes in 0 blocks
==24757==   total heap usage: 205 allocs, 205 frees, 148,612,832 bytes allocated
==24757== 
==24757== All heap blocks were freed -- no leaks are possible
==24757== 
==24757== For counts of detected and suppressed errors, rerun with: -v
==24757== Use --track-origins=yes to see where uninitialised values come from
==24757== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --useralloc=1    
==24761== Memcheck, a memory error detector
==24761== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24761== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24761== Command: ./test ../../testfiles/1/45.tst --useralloc=1
==24761== 
==24761== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24761==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24761==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24761==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24761==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24761==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24761==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24761==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24761==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24761==    by 0x40210C: engine::flush() (engine.cpp:350)
==24761==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24761==    by 0x401E76: parser::process() (parser.cpp:44)
==24761==    by 0x403308: main (main.cpp:464)
==24761==  Address 0x9f0319e is 206 bytes inside a block of size 4,176 alloc'd
==24761==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24761==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24761==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24761==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24761==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24761==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24761==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24761==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24761==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24761==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24761==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24761==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24761== 
==24761== 
==24761== HEAP SUMMARY:
==24761==     in use at exit: 0 bytes in 0 blocks
==24761==   total heap usage: 3,346 allocs, 3,346 frees, 69,378,801 bytes allocated
==24761== 
==24761== All heap blocks were freed -- no leaks are possible
==24761== 
==24761== For counts of detected and suppressed errors, rerun with: -v
==24761== Use --track-origins=yes to see where uninitialised values come from
==24761== ERROR SUMMARY: 107 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --useralloc=1    
==24764== Memcheck, a memory error detector
==24764== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24764== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24764== Command: ./test ../../testfiles/1/220.tst --useralloc=1
==24764== 
==24764== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24764==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24764==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24764==  Address 0x9f16eb6 is 150 bytes inside a block of size 4,176 alloc'd
==24764==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24764==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24764==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24764==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24764== 
==24764== 
==24764== HEAP SUMMARY:
==24764==     in use at exit: 0 bytes in 0 blocks
==24764==   total heap usage: 4,050 allocs, 4,050 frees, 69,051,828 bytes allocated
==24764== 
==24764== All heap blocks were freed -- no leaks are possible
==24764== 
==24764== For counts of detected and suppressed errors, rerun with: -v
==24764== Use --track-origins=yes to see where uninitialised values come from
==24764== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --useralloc=1    
==24771== Memcheck, a memory error detector
==24771== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24771== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24771== Command: ./test ../../testfiles/1/ext_020.tst --useralloc=1
==24771== 
==24771== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24771==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24771==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24771==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24771==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24771==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24771==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24771==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24771==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24771==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24771==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24771==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24771==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24771==  Address 0x9f05a26 is 118 bytes inside a block of size 4,176 alloc'd
==24771==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24771==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24771==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24771==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24771==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24771==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24771==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24771==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24771==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24771==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24771==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24771==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24771== 
==24771== 
==24771== HEAP SUMMARY:
==24771==     in use at exit: 0 bytes in 0 blocks
==24771==   total heap usage: 620 allocs, 620 frees, 67,684,526 bytes allocated
==24771== 
==24771== All heap blocks were freed -- no leaks are possible
==24771== 
==24771== For counts of detected and suppressed errors, rerun with: -v
==24771== Use --track-origins=yes to see where uninitialised values come from
==24771== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --useralloc=1    
==24774== Memcheck, a memory error detector
==24774== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24774== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24774== Command: ./test ../../testfiles/2/ext_060.tst --useralloc=1
==24774== 
==24774== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24774==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24774==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24774==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24774==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24774==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24774==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24774==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24774==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24774==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24774==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24774==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24774==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24774==  Address 0x9f181fa is 410 bytes inside a block of size 4,176 alloc'd
==24774==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24774==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24774==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24774==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24774==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24774==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24774==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24774==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24774==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24774==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24774==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24774==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24774== 
==24774== 
==24774== HEAP SUMMARY:
==24774==     in use at exit: 0 bytes in 0 blocks
==24774==   total heap usage: 649,274 allocs, 649,274 frees, 84,514,258 bytes allocated
==24774== 
==24774== All heap blocks were freed -- no leaks are possible
==24774== 
==24774== For counts of detected and suppressed errors, rerun with: -v
==24774== Use --track-origins=yes to see where uninitialised values come from
==24774== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --useralloc=1    
==24777== Memcheck, a memory error detector
==24777== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24777== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24777== Command: ./test ../../testfiles/2/blb-001.tst --useralloc=1
==24777== 
==24777== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24777==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24777==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24777==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24777==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24777==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24777==  Address 0x9f02468 is 3,976 bytes inside a block of size 4,176 alloc'd
==24777==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24777==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24777==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24777== 
==24777== 
==24777== HEAP SUMMARY:
==24777==     in use at exit: 0 bytes in 0 blocks
==24777==   total heap usage: 205 allocs, 205 frees, 148,612,832 bytes allocated
==24777== 
==24777== All heap blocks were freed -- no leaks are possible
==24777== 
==24777== For counts of detected and suppressed errors, rerun with: -v
==24777== Use --track-origins=yes to see where uninitialised values come from
==24777== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==24781== Memcheck, a memory error detector
==24781== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24781== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24781== Command: ./test ../../testfiles/1/45.tst --disable-mmap=1 --overwrite=1 --reopen=1
==24781== 
==24781== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24781==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24781==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24781==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24781==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24781==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24781==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24781==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24781==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24781==    by 0x40210C: engine::flush() (engine.cpp:350)
==24781==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24781==    by 0x401E76: parser::process() (parser.cpp:44)
==24781==    by 0x403308: main (main.cpp:464)
==24781==  Address 0x5f0f4de is 206 bytes inside a block of size 4,176 alloc'd
==24781==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24781==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24781==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24781==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24781==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24781==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24781==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24781==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24781==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24781==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24781==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24781==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24781== 
==24781== 
==24781== HEAP SUMMARY:
==24781==     in use at exit: 0 bytes in 0 blocks
==24781==   total heap usage: 3,661 allocs, 3,661 frees, 4,704,412 bytes allocated
==24781== 
==24781== All heap blocks were freed -- no leaks are possible
==24781== 
==24781== For counts of detected and suppressed errors, rerun with: -v
==24781== Use --track-origins=yes to see where uninitialised values come from
==24781== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==24784== Memcheck, a memory error detector
==24784== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24784== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24784== Command: ./test ../../testfiles/1/220.tst --disable-mmap=1 --overwrite=1 --reopen=1
==24784== 
==24784== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24784==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24784==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24784==  Address 0x5fde9ea is 122 bytes inside a block of size 4,176 alloc'd
==24784==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24784==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24784==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24784==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24784== 
==24784== 
==24784== HEAP SUMMARY:
==24784==     in use at exit: 0 bytes in 0 blocks
==24784==   total heap usage: 3,862 allocs, 3,862 frees, 3,522,485 bytes allocated
==24784== 
==24784== All heap blocks were freed -- no leaks are possible
==24784== 
==24784== For counts of detected and suppressed errors, rerun with: -v
==24784== Use --track-origins=yes to see where uninitialised values come from
==24784== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==24787== Memcheck, a memory error detector
==24787== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24787== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24787== Command: ./test ../../testfiles/1/ext_020.tst --disable-mmap=1 --overwrite=1 --reopen=1
==24787== 
==24787== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24787==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24787==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24787==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24787==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24787==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24787==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24787==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24787==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24787==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24787==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24787==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24787==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24787==  Address 0x5f12ec6 is 118 bytes inside a block of size 4,176 alloc'd
==24787==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24787==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24787==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24787==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24787==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24787==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24787==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24787==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24787==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24787==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24787==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24787==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24787== 
==24787== 
==24787== HEAP SUMMARY:
==24787==     in use at exit: 0 bytes in 0 blocks
==24787==   total heap usage: 1,004 allocs, 1,004 frees, 1,118,618 bytes allocated
==24787== 
==24787== All heap blocks were freed -- no leaks are possible
==24787== 
==24787== For counts of detected and suppressed errors, rerun with: -v
==24787== Use --track-origins=yes to see where uninitialised values come from
==24787== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==24790== Memcheck, a memory error detector
==24790== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24790== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24790== Command: ./test ../../testfiles/2/ext_060.tst --disable-mmap=1 --overwrite=1 --reopen=1
==24790== 
==24790== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24790==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24790==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24790==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24790==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24790==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24790==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24790==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24790==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24790==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24790==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24790==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24790==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24790==  Address 0x5f290de is 414 bytes inside a block of size 4,176 alloc'd
==24790==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24790==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24790==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24790==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24790==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24790==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24790==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24790==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24790==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24790==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24790==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24790==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24790== 
==24790== 
==24790== HEAP SUMMARY:
==24790==     in use at exit: 0 bytes in 0 blocks
==24790==   total heap usage: 911,490 allocs, 911,490 frees, 24,712,099 bytes allocated
==24790== 
==24790== All heap blocks were freed -- no leaks are possible
==24790== 
==24790== For counts of detected and suppressed errors, rerun with: -v
==24790== Use --track-origins=yes to see where uninitialised values come from
==24790== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==24793== Memcheck, a memory error detector
==24793== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24793== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24793== Command: ./test ../../testfiles/2/blb-001.tst --disable-mmap=1 --overwrite=1 --reopen=1
==24793== 
==24793== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24793==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24793==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24793==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24793==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24793==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24793==  Address 0x5f3658c is 3,580 bytes inside a block of size 4,176 alloc'd
==24793==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24793==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24793==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24793== 
==24793== 
==24793== HEAP SUMMARY:
==24793==     in use at exit: 0 bytes in 0 blocks
==24793==   total heap usage: 379 allocs, 379 frees, 46,310,039 bytes allocated
==24793== 
==24793== All heap blocks were freed -- no leaks are possible
==24793== 
==24793== For counts of detected and suppressed errors, rerun with: -v
==24793== Use --track-origins=yes to see where uninitialised values come from
==24793== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --keysize=8 --overwrite=1 --reopen=1    
==24797== Memcheck, a memory error detector
==24797== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24797== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24797== Command: ./test ../../testfiles/1/45.tst --keysize=8 --overwrite=1 --reopen=1
==24797== 
==24797== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24797==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24797==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24797==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24797==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24797==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24797==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24797==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24797==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24797==    by 0x40210C: engine::flush() (engine.cpp:350)
==24797==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24797==    by 0x401E76: parser::process() (parser.cpp:44)
==24797==    by 0x403308: main (main.cpp:464)
==24797==  Address 0x5f0341e is 206 bytes inside a block of size 4,176 alloc'd
==24797==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24797==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24797==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24797==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24797==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24797==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24797==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24797==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24797==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24797==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24797==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24797==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24797== 
==24797== 
==24797== HEAP SUMMARY:
==24797==     in use at exit: 0 bytes in 0 blocks
==24797==   total heap usage: 3,711 allocs, 3,711 frees, 2,769,108 bytes allocated
==24797== 
==24797== All heap blocks were freed -- no leaks are possible
==24797== 
==24797== For counts of detected and suppressed errors, rerun with: -v
==24797== Use --track-origins=yes to see where uninitialised values come from
==24797== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --keysize=8 --overwrite=1 --reopen=1    
==24800== Memcheck, a memory error detector
==24800== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24800== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24800== Command: ./test ../../testfiles/1/220.tst --keysize=8 --overwrite=1 --reopen=1
==24800== 
==24800== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24800==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24800==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24800==  Address 0x5fb676a is 122 bytes inside a block of size 4,176 alloc'd
==24800==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24800==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24800==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24800==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24800== 
==24800== 
==24800== HEAP SUMMARY:
==24800==     in use at exit: 0 bytes in 0 blocks
==24800==   total heap usage: 4,593 allocs, 4,593 frees, 2,509,257 bytes allocated
==24800== 
==24800== All heap blocks were freed -- no leaks are possible
==24800== 
==24800== For counts of detected and suppressed errors, rerun with: -v
==24800== Use --track-origins=yes to see where uninitialised values come from
==24800== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --keysize=8 --overwrite=1 --reopen=1    
==24803== Memcheck, a memory error detector
==24803== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24803== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24803== Command: ./test ../../testfiles/1/ext_020.tst --keysize=8 --overwrite=1 --reopen=1
==24803== 
==24803== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24803==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24803==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24803==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24803==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24803==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24803==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24803==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24803==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24803==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24803==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24803==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24803==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24803==  Address 0x5f06e06 is 118 bytes inside a block of size 4,176 alloc'd
==24803==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24803==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24803==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24803==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24803==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24803==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24803==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24803==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24803==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24803==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24803==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24803==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24803== 
==24803== 
==24803== HEAP SUMMARY:
==24803==     in use at exit: 0 bytes in 0 blocks
==24803==   total heap usage: 996 allocs, 996 frees, 987,546 bytes allocated
==24803== 
==24803== All heap blocks were freed -- no leaks are possible
==24803== 
==24803== For counts of detected and suppressed errors, rerun with: -v
==24803== Use --track-origins=yes to see where uninitialised values come from
==24803== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --keysize=8 --overwrite=1 --reopen=1    
==24806== Memcheck, a memory error detector
==24806== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24806== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24806== Command: ./test ../../testfiles/2/ext_060.tst --keysize=8 --overwrite=1 --reopen=1
==24806== 
==24806== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24806==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24806==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24806==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24806==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24806==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24806==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24806==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24806==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24806==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24806==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24806==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24806==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24806==  Address 0x5f3f8be is 414 bytes inside a block of size 4,176 alloc'd
==24806==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24806==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24806==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24806==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24806==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24806==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24806==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24806==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24806==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24806==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24806==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24806==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24806== 
==24806== 
==24806== HEAP SUMMARY:
==24806==     in use at exit: 0 bytes in 0 blocks
==24806==   total heap usage: 2,205,239 allocs, 2,205,239 frees, 44,113,011 bytes allocated
==24806== 
==24806== All heap blocks were freed -- no leaks are possible
==24806== 
==24806== For counts of detected and suppressed errors, rerun with: -v
==24806== Use --track-origins=yes to see where uninitialised values come from
==24806== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --keysize=8 --overwrite=1 --reopen=1    
==24809== Memcheck, a memory error detector
==24809== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24809== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24809== Command: ./test ../../testfiles/2/blb-001.tst --keysize=8 --overwrite=1 --reopen=1
==24809== 
==24809== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24809==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24809==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24809==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24809==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24809==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24809==  Address 0x5f0224c is 3,580 bytes inside a block of size 4,176 alloc'd
==24809==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24809==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24809==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24809== 
==24809== 
==24809== HEAP SUMMARY:
==24809==     in use at exit: 0 bytes in 0 blocks
==24809==   total heap usage: 342 allocs, 342 frees, 45,703,831 bytes allocated
==24809== 
==24809== All heap blocks were freed -- no leaks are possible
==24809== 
==24809== For counts of detected and suppressed errors, rerun with: -v
==24809== Use --track-origins=yes to see where uninitialised values come from
==24809== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --keysize=12 --overwrite=1 --reopen=1    
==24813== Memcheck, a memory error detector
==24813== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24813== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24813== Command: ./test ../../testfiles/1/45.tst --keysize=12 --overwrite=1 --reopen=1
==24813== 
==24813== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24813==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24813==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24813==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24813==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24813==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24813==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24813==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24813==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24813==    by 0x40210C: engine::flush() (engine.cpp:350)
==24813==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24813==    by 0x401E76: parser::process() (parser.cpp:44)
==24813==    by 0x403308: main (main.cpp:464)
==24813==  Address 0x5f0341e is 206 bytes inside a block of size 4,176 alloc'd
==24813==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24813==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24813==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24813==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24813==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24813==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24813==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24813==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24813==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24813==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24813==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24813==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24813== 
==24813== 
==24813== HEAP SUMMARY:
==24813==     in use at exit: 0 bytes in 0 blocks
==24813==   total heap usage: 3,629 allocs, 3,629 frees, 2,769,668 bytes allocated
==24813== 
==24813== All heap blocks were freed -- no leaks are possible
==24813== 
==24813== For counts of detected and suppressed errors, rerun with: -v
==24813== Use --track-origins=yes to see where uninitialised values come from
==24813== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --keysize=12 --overwrite=1 --reopen=1    
==24816== Memcheck, a memory error detector
==24816== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24816== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24816== Command: ./test ../../testfiles/1/220.tst --keysize=12 --overwrite=1 --reopen=1
==24816== 
==24816== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24816==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24816==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24816==  Address 0x5fb676a is 122 bytes inside a block of size 4,176 alloc'd
==24816==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24816==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24816==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24816==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24816== 
==24816== 
==24816== HEAP SUMMARY:
==24816==     in use at exit: 0 bytes in 0 blocks
==24816==   total heap usage: 4,593 allocs, 4,593 frees, 2,509,257 bytes allocated
==24816== 
==24816== All heap blocks were freed -- no leaks are possible
==24816== 
==24816== For counts of detected and suppressed errors, rerun with: -v
==24816== Use --track-origins=yes to see where uninitialised values come from
==24816== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --keysize=12 --overwrite=1 --reopen=1    
==24821== Memcheck, a memory error detector
==24821== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24821== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24821== Command: ./test ../../testfiles/1/ext_020.tst --keysize=12 --overwrite=1 --reopen=1
==24821== 
==24821== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24821==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24821==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24821==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24821==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24821==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24821==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24821==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24821==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24821==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24821==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24821==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24821==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24821==  Address 0x5f06e06 is 118 bytes inside a block of size 4,176 alloc'd
==24821==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24821==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24821==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24821==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24821==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24821==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24821==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24821==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24821==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24821==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24821==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24821==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24821== 
==24821== 
==24821== HEAP SUMMARY:
==24821==     in use at exit: 0 bytes in 0 blocks
==24821==   total heap usage: 996 allocs, 996 frees, 987,546 bytes allocated
==24821== 
==24821== All heap blocks were freed -- no leaks are possible
==24821== 
==24821== For counts of detected and suppressed errors, rerun with: -v
==24821== Use --track-origins=yes to see where uninitialised values come from
==24821== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --keysize=12 --overwrite=1 --reopen=1    
==24824== Memcheck, a memory error detector
==24824== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24824== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24824== Command: ./test ../../testfiles/2/ext_060.tst --keysize=12 --overwrite=1 --reopen=1
==24824== 
==24824== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24824==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24824==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24824==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24824==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24824==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24824==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24824==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24824==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24824==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24824==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24824==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24824==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24824==  Address 0x5f381ce is 414 bytes inside a block of size 4,176 alloc'd
==24824==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24824==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24824==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24824==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24824==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24824==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24824==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24824==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24824==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24824==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24824==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24824==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24824== 
==24824== 
==24824== HEAP SUMMARY:
==24824==     in use at exit: 0 bytes in 0 blocks
==24824==   total heap usage: 1,813,375 allocs, 1,813,375 frees, 39,979,413 bytes allocated
==24824== 
==24824== All heap blocks were freed -- no leaks are possible
==24824== 
==24824== For counts of detected and suppressed errors, rerun with: -v
==24824== Use --track-origins=yes to see where uninitialised values come from
==24824== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --keysize=12 --overwrite=1 --reopen=1    
==24828== Memcheck, a memory error detector
==24828== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24828== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24828== Command: ./test ../../testfiles/2/blb-001.tst --keysize=12 --overwrite=1 --reopen=1
==24828== 
==24828== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24828==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24828==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24828==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24828==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24828==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24828==  Address 0x5f0224c is 3,580 bytes inside a block of size 4,176 alloc'd
==24828==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24828==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24828==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24828== 
==24828== 
==24828== HEAP SUMMARY:
==24828==     in use at exit: 0 bytes in 0 blocks
==24828==   total heap usage: 342 allocs, 342 frees, 45,703,831 bytes allocated
==24828== 
==24828== All heap blocks were freed -- no leaks are possible
==24828== 
==24828== For counts of detected and suppressed errors, rerun with: -v
==24828== Use --track-origins=yes to see where uninitialised values come from
==24828== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --keysize=33 --overwrite=1 --reopen=1    
==24832== Memcheck, a memory error detector
==24832== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24832== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24832== Command: ./test ../../testfiles/1/45.tst --keysize=33 --overwrite=1 --reopen=1
==24832== 
==24832== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24832==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24832==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24832==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24832==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24832==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24832==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24832==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24832==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24832==    by 0x40210C: engine::flush() (engine.cpp:350)
==24832==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24832==    by 0x401E76: parser::process() (parser.cpp:44)
==24832==    by 0x403308: main (main.cpp:464)
==24832==  Address 0x5f0341e is 206 bytes inside a block of size 4,176 alloc'd
==24832==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24832==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24832==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24832==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24832==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24832==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24832==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24832==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24832==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24832==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24832==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24832==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24832== 
==24832== 
==24832== HEAP SUMMARY:
==24832==     in use at exit: 0 bytes in 0 blocks
==24832==   total heap usage: 3,490 allocs, 3,490 frees, 2,773,552 bytes allocated
==24832== 
==24832== All heap blocks were freed -- no leaks are possible
==24832== 
==24832== For counts of detected and suppressed errors, rerun with: -v
==24832== Use --track-origins=yes to see where uninitialised values come from
==24832== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --keysize=33 --overwrite=1 --reopen=1    
==24835== Memcheck, a memory error detector
==24835== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24835== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24835== Command: ./test ../../testfiles/1/220.tst --keysize=33 --overwrite=1 --reopen=1
==24835== 
==24835== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24835==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24835==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24835==  Address 0x5fb676a is 122 bytes inside a block of size 4,176 alloc'd
==24835==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24835==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24835==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24835==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24835== 
==24835== 
==24835== HEAP SUMMARY:
==24835==     in use at exit: 0 bytes in 0 blocks
==24835==   total heap usage: 3,389 allocs, 3,389 frees, 2,505,033 bytes allocated
==24835== 
==24835== All heap blocks were freed -- no leaks are possible
==24835== 
==24835== For counts of detected and suppressed errors, rerun with: -v
==24835== Use --track-origins=yes to see where uninitialised values come from
==24835== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --keysize=33 --overwrite=1 --reopen=1    
==24838== Memcheck, a memory error detector
==24838== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24838== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24838== Command: ./test ../../testfiles/1/ext_020.tst --keysize=33 --overwrite=1 --reopen=1
==24838== 
==24838== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24838==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24838==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24838==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24838==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24838==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24838==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24838==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24838==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24838==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24838==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24838==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24838==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24838==  Address 0x5f069c6 is 118 bytes inside a block of size 4,176 alloc'd
==24838==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24838==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24838==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24838==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24838==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24838==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24838==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24838==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24838==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24838==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24838==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24838==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24838== 
==24838== 
==24838== HEAP SUMMARY:
==24838==     in use at exit: 0 bytes in 0 blocks
==24838==   total heap usage: 933 allocs, 933 frees, 985,468 bytes allocated
==24838== 
==24838== All heap blocks were freed -- no leaks are possible
==24838== 
==24838== For counts of detected and suppressed errors, rerun with: -v
==24838== Use --track-origins=yes to see where uninitialised values come from
==24838== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --keysize=33 --overwrite=1 --reopen=1    
==24841== Memcheck, a memory error detector
==24841== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24841== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24841== Command: ./test ../../testfiles/2/ext_060.tst --keysize=33 --overwrite=1 --reopen=1
==24841== 
==24841== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24841==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24841==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24841==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24841==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24841==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24841==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24841==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24841==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24841==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24841==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24841==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24841==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24841==  Address 0x5f0616e is 414 bytes inside a block of size 4,176 alloc'd
==24841==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24841==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24841==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24841==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24841==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24841==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24841==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24841==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24841==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24841==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24841==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24841==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24841== 
==24841== 
==24841== HEAP SUMMARY:
==24841==     in use at exit: 0 bytes in 0 blocks
==24841==   total heap usage: 17,676 allocs, 17,676 frees, 1,274,256 bytes allocated
==24841== 
==24841== All heap blocks were freed -- no leaks are possible
==24841== 
==24841== For counts of detected and suppressed errors, rerun with: -v
==24841== Use --track-origins=yes to see where uninitialised values come from
==24841== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --keysize=33 --overwrite=1 --reopen=1    
==24844== Memcheck, a memory error detector
==24844== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24844== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24844== Command: ./test ../../testfiles/2/blb-001.tst --keysize=33 --overwrite=1 --reopen=1
==24844== 
==24844== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24844==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24844==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24844==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24844==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24844==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24844==  Address 0x5f0224c is 3,580 bytes inside a block of size 4,176 alloc'd
==24844==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24844==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24844==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24844== 
==24844== 
==24844== HEAP SUMMARY:
==24844==     in use at exit: 0 bytes in 0 blocks
==24844==   total heap usage: 342 allocs, 342 frees, 45,703,831 bytes allocated
==24844== 
==24844== All heap blocks were freed -- no leaks are possible
==24844== 
==24844== For counts of detected and suppressed errors, rerun with: -v
==24844== Use --track-origins=yes to see where uninitialised values come from
==24844== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --keysize=680 --overwrite=1 --reopen=1    
==24848== Memcheck, a memory error detector
==24848== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24848== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24848== Command: ./test ../../testfiles/1/45.tst --keysize=680 --overwrite=1 --reopen=1
==24848== 
==24848== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24848==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24848==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24848==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24848==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24848==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24848==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24848==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24848==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24848==    by 0x40210C: engine::flush() (engine.cpp:350)
==24848==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24848==    by 0x401E76: parser::process() (parser.cpp:44)
==24848==    by 0x403308: main (main.cpp:464)
==24848==  Address 0x5f0343e is 206 bytes inside a block of size 4,176 alloc'd
==24848==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24848==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24848==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24848==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24848==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24848==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24848==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24848==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24848==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24848==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24848==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24848==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24848== 
==24848== 
==24848== HEAP SUMMARY:
==24848==     in use at exit: 0 bytes in 0 blocks
==24848==   total heap usage: 83,185 allocs, 83,185 frees, 15,106,836 bytes allocated
==24848== 
==24848== All heap blocks were freed -- no leaks are possible
==24848== 
==24848== For counts of detected and suppressed errors, rerun with: -v
==24848== Use --track-origins=yes to see where uninitialised values come from
==24848== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --keysize=680 --overwrite=1 --reopen=1    
==24851== Memcheck, a memory error detector
==24851== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24851== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24851== Command: ./test ../../testfiles/1/220.tst --keysize=680 --overwrite=1 --reopen=1
==24851== 
==24851== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24851==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24851==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24851==  Address 0x5fadd9a is 122 bytes inside a block of size 4,176 alloc'd
==24851==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24851==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24851==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24851==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24851== 
==24851== 
==24851== HEAP SUMMARY:
==24851==     in use at exit: 0 bytes in 0 blocks
==24851==   total heap usage: 1,388 allocs, 1,388 frees, 2,510,053 bytes allocated
==24851== 
==24851== All heap blocks were freed -- no leaks are possible
==24851== 
==24851== For counts of detected and suppressed errors, rerun with: -v
==24851== Use --track-origins=yes to see where uninitialised values come from
==24851== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --keysize=680 --overwrite=1 --reopen=1    
==24854== Memcheck, a memory error detector
==24854== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24854== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24854== Command: ./test ../../testfiles/1/ext_020.tst --keysize=680 --overwrite=1 --reopen=1
==24854== 
==24854== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24854==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24854==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24854==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24854==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24854==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24854==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24854==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24854==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24854==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24854==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24854==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24854==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24854==  Address 0x5f037c6 is 118 bytes inside a block of size 4,176 alloc'd
==24854==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24854==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24854==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24854==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24854==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24854==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24854==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24854==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24854==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24854==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24854==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24854==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24854== 
==24854== 
==24854== HEAP SUMMARY:
==24854==     in use at exit: 0 bytes in 0 blocks
==24854==   total heap usage: 432 allocs, 432 frees, 827,571 bytes allocated
==24854== 
==24854== All heap blocks were freed -- no leaks are possible
==24854== 
==24854== For counts of detected and suppressed errors, rerun with: -v
==24854== Use --track-origins=yes to see where uninitialised values come from
==24854== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --keysize=680 --overwrite=1 --reopen=1    
==24857== Memcheck, a memory error detector
==24857== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24857== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24857== Command: ./test ../../testfiles/2/ext_060.tst --keysize=680 --overwrite=1 --reopen=1
==24857== 
==24857== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24857==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24857==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24857==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24857==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24857==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24857==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24857==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24857==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24857==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24857==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24857==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24857==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24857==  Address 0x5f0507e is 414 bytes inside a block of size 4,176 alloc'd
==24857==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24857==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24857==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24857==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24857==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24857==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24857==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24857==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24857==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24857==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24857==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24857==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24857== 
==24857== 
==24857== HEAP SUMMARY:
==24857==     in use at exit: 0 bytes in 0 blocks
==24857==   total heap usage: 4,989 allocs, 4,989 frees, 1,168,098 bytes allocated
==24857== 
==24857== All heap blocks were freed -- no leaks are possible
==24857== 
==24857== For counts of detected and suppressed errors, rerun with: -v
==24857== Use --track-origins=yes to see where uninitialised values come from
==24857== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --keysize=680 --overwrite=1 --reopen=1    
==24860== Memcheck, a memory error detector
==24860== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24860== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24860== Command: ./test ../../testfiles/2/blb-001.tst --keysize=680 --overwrite=1 --reopen=1
==24860== 
==24860== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24860==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24860==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24860==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24860==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24860==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24860==  Address 0x5f0224c is 3,580 bytes inside a block of size 4,176 alloc'd
==24860==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24860==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24860==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24860== 
==24860== 
==24860== HEAP SUMMARY:
==24860==     in use at exit: 0 bytes in 0 blocks
==24860==   total heap usage: 342 allocs, 342 frees, 45,703,831 bytes allocated
==24860== 
==24860== All heap blocks were freed -- no leaks are possible
==24860== 
==24860== For counts of detected and suppressed errors, rerun with: -v
==24860== Use --track-origins=yes to see where uninitialised values come from
==24860== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --pagesize=1024 --overwrite=1 --reopen=1    
==24864== Memcheck, a memory error detector
==24864== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24864== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24864== Command: ./test ../../testfiles/1/45.tst --pagesize=1024 --overwrite=1 --reopen=1
==24864== 
==24864== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24864==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24864==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24864==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24864==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24864==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24864==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24864==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24864==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24864==    by 0x40210C: engine::flush() (engine.cpp:350)
==24864==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24864==    by 0x401E76: parser::process() (parser.cpp:44)
==24864==    by 0x403308: main (main.cpp:464)
==24864==  Address 0x5f0693e is 206 bytes inside a block of size 4,176 alloc'd
==24864==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24864==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24864==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24864==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24864==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24864==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24864==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24864==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24864==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24864==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24864==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24864==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24864== 
==24864== 
==24864== HEAP SUMMARY:
==24864==     in use at exit: 0 bytes in 0 blocks
==24864==   total heap usage: 5,793 allocs, 5,793 frees, 5,075,744 bytes allocated
==24864== 
==24864== All heap blocks were freed -- no leaks are possible
==24864== 
==24864== For counts of detected and suppressed errors, rerun with: -v
==24864== Use --track-origins=yes to see where uninitialised values come from
==24864== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --pagesize=1024 --overwrite=1 --reopen=1    
==24867== Memcheck, a memory error detector
==24867== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24867== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24867== Command: ./test ../../testfiles/1/220.tst --pagesize=1024 --overwrite=1 --reopen=1
==24867== 
==24867== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24867==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24867==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24867==  Address 0x5fde19a is 122 bytes inside a block of size 4,176 alloc'd
==24867==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24867==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24867==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24867==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24867== 
==24867== 
==24867== HEAP SUMMARY:
==24867==     in use at exit: 0 bytes in 0 blocks
==24867==   total heap usage: 3,122 allocs, 3,122 frees, 3,570,933 bytes allocated
==24867== 
==24867== All heap blocks were freed -- no leaks are possible
==24867== 
==24867== For counts of detected and suppressed errors, rerun with: -v
==24867== Use --track-origins=yes to see where uninitialised values come from
==24867== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --pagesize=1024 --overwrite=1 --reopen=1    
==24870== Memcheck, a memory error detector
==24870== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24870== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24870== Command: ./test ../../testfiles/1/ext_020.tst --pagesize=1024 --overwrite=1 --reopen=1
==24870== 
==24870== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24870==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24870==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24870==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24870==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24870==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24870==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24870==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24870==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24870==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24870==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24870==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24870==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24870==  Address 0x5f08f46 is 118 bytes inside a block of size 4,176 alloc'd
==24870==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24870==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24870==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24870==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24870==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24870==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24870==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24870==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24870==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24870==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24870==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24870==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24870== 
==24870== 
==24870== HEAP SUMMARY:
==24870==     in use at exit: 0 bytes in 0 blocks
==24870==   total heap usage: 1,092 allocs, 1,092 frees, 1,047,482 bytes allocated
==24870== 
==24870== All heap blocks were freed -- no leaks are possible
==24870== 
==24870== For counts of detected and suppressed errors, rerun with: -v
==24870== Use --track-origins=yes to see where uninitialised values come from
==24870== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --pagesize=1024 --overwrite=1 --reopen=1    
==24873== Memcheck, a memory error detector
==24873== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24873== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24873== Command: ./test ../../testfiles/2/ext_060.tst --pagesize=1024 --overwrite=1 --reopen=1
==24873== 
==24873== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24873==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24873==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24873==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24873==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24873==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24873==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24873==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24873==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24873==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24873==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24873==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24873==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24873==  Address 0x5f20a2e is 414 bytes inside a block of size 4,176 alloc'd
==24873==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24873==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24873==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24873==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24873==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24873==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24873==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24873==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24873==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24873==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24873==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24873==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24873== 
==24873== 
==24873== HEAP SUMMARY:
==24873==     in use at exit: 0 bytes in 0 blocks
==24873==   total heap usage: 937,185 allocs, 937,185 frees, 25,521,389 bytes allocated
==24873== 
==24873== All heap blocks were freed -- no leaks are possible
==24873== 
==24873== For counts of detected and suppressed errors, rerun with: -v
==24873== Use --track-origins=yes to see where uninitialised values come from
==24873== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --pagesize=1024 --overwrite=1 --reopen=1    
==24876== Memcheck, a memory error detector
==24876== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24876== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24876== Command: ./test ../../testfiles/2/blb-001.tst --pagesize=1024 --overwrite=1 --reopen=1
==24876== 
==24876== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24876==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24876==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24876==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24876==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24876==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24876==  Address 0x5f797ec is 3,580 bytes inside a block of size 4,176 alloc'd
==24876==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24876==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24876==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24876== 
==24876== 
==24876== HEAP SUMMARY:
==24876==     in use at exit: 0 bytes in 0 blocks
==24876==   total heap usage: 968 allocs, 968 frees, 46,337,895 bytes allocated
==24876== 
==24876== All heap blocks were freed -- no leaks are possible
==24876== 
==24876== For counts of detected and suppressed errors, rerun with: -v
==24876== Use --track-origins=yes to see where uninitialised values come from
==24876== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --pagesize=8192 --overwrite=1 --reopen=1    
==24880== Memcheck, a memory error detector
==24880== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24880== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24880== Command: ./test ../../testfiles/1/45.tst --pagesize=8192 --overwrite=1 --reopen=1
==24880== 
==24880== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24880==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24880==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24880==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24880==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24880==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24880==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24880==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24880==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24880==    by 0x40210C: engine::flush() (engine.cpp:350)
==24880==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24880==    by 0x401E76: parser::process() (parser.cpp:44)
==24880==    by 0x403308: main (main.cpp:464)
==24880==  Address 0x5f0341e is 206 bytes inside a block of size 4,176 alloc'd
==24880==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24880==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24880==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24880==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24880==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24880==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24880==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24880==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24880==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24880==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24880==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24880==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24880== 
==24880== 
==24880== HEAP SUMMARY:
==24880==     in use at exit: 0 bytes in 0 blocks
==24880==   total heap usage: 3,536 allocs, 3,536 frees, 2,787,944 bytes allocated
==24880== 
==24880== All heap blocks were freed -- no leaks are possible
==24880== 
==24880== For counts of detected and suppressed errors, rerun with: -v
==24880== Use --track-origins=yes to see where uninitialised values come from
==24880== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --pagesize=8192 --overwrite=1 --reopen=1    
==24884== Memcheck, a memory error detector
==24884== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24884== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24884== Command: ./test ../../testfiles/1/220.tst --pagesize=8192 --overwrite=1 --reopen=1
==24884== 
==24884== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24884==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24884==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24884==  Address 0x5fb6e6a is 122 bytes inside a block of size 4,176 alloc'd
==24884==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24884==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24884==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24884==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24884== 
==24884== 
==24884== HEAP SUMMARY:
==24884==     in use at exit: 0 bytes in 0 blocks
==24884==   total heap usage: 2,805 allocs, 2,805 frees, 2,511,281 bytes allocated
==24884== 
==24884== All heap blocks were freed -- no leaks are possible
==24884== 
==24884== For counts of detected and suppressed errors, rerun with: -v
==24884== Use --track-origins=yes to see where uninitialised values come from
==24884== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --pagesize=8192 --overwrite=1 --reopen=1    
==24887== Memcheck, a memory error detector
==24887== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24887== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24887== Command: ./test ../../testfiles/1/ext_020.tst --pagesize=8192 --overwrite=1 --reopen=1
==24887== 
==24887== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24887==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24887==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24887==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24887==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24887==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24887==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24887==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24887==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24887==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24887==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24887==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24887==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24887==  Address 0x5f06e06 is 118 bytes inside a block of size 4,176 alloc'd
==24887==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24887==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24887==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24887==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24887==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24887==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24887==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24887==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24887==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24887==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24887==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24887==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24887== 
==24887== 
==24887== HEAP SUMMARY:
==24887==     in use at exit: 0 bytes in 0 blocks
==24887==   total heap usage: 998 allocs, 998 frees, 987,850 bytes allocated
==24887== 
==24887== All heap blocks were freed -- no leaks are possible
==24887== 
==24887== For counts of detected and suppressed errors, rerun with: -v
==24887== Use --track-origins=yes to see where uninitialised values come from
==24887== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --pagesize=8192 --overwrite=1 --reopen=1    
==24890== Memcheck, a memory error detector
==24890== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24890== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24890== Command: ./test ../../testfiles/2/ext_060.tst --pagesize=8192 --overwrite=1 --reopen=1
==24890== 
==24890== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24890==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24890==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24890==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24890==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24890==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24890==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24890==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24890==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24890==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24890==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24890==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24890==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24890==  Address 0x5f1d01e is 414 bytes inside a block of size 4,176 alloc'd
==24890==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24890==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24890==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24890==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24890==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24890==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24890==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24890==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24890==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24890==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24890==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24890==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24890== 
==24890== 
==24890== HEAP SUMMARY:
==24890==     in use at exit: 0 bytes in 0 blocks
==24890==   total heap usage: 910,383 allocs, 910,383 frees, 24,630,041 bytes allocated
==24890== 
==24890== All heap blocks were freed -- no leaks are possible
==24890== 
==24890== For counts of detected and suppressed errors, rerun with: -v
==24890== Use --track-origins=yes to see where uninitialised values come from
==24890== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --pagesize=8192 --overwrite=1 --reopen=1    
==24893== Memcheck, a memory error detector
==24893== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24893== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24893== Command: ./test ../../testfiles/2/blb-001.tst --pagesize=8192 --overwrite=1 --reopen=1
==24893== 
==24893== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24893==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24893==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24893==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24893==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24893==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24893==  Address 0x5f03f2c is 3,580 bytes inside a block of size 4,176 alloc'd
==24893==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24893==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24893==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24893== 
==24893== 
==24893== HEAP SUMMARY:
==24893==     in use at exit: 0 bytes in 0 blocks
==24893==   total heap usage: 364 allocs, 364 frees, 45,712,103 bytes allocated
==24893== 
==24893== All heap blocks were freed -- no leaks are possible
==24893== 
==24893== For counts of detected and suppressed errors, rerun with: -v
==24893== Use --track-origins=yes to see where uninitialised values come from
==24893== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --pagesize=131072 --overwrite=1 --reopen=1    
==24897== Memcheck, a memory error detector
==24897== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24897== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24897== Command: ./test ../../testfiles/1/45.tst --pagesize=131072 --overwrite=1 --reopen=1
==24897== 
==24897== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24897==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24897==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24897==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24897==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24897==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24897==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24897==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24897==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24897==    by 0x40210C: engine::flush() (engine.cpp:350)
==24897==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24897==    by 0x401E76: parser::process() (parser.cpp:44)
==24897==    by 0x403308: main (main.cpp:464)
==24897==  Address 0x5f0341e is 206 bytes inside a block of size 4,176 alloc'd
==24897==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24897==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24897==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24897==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24897==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24897==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24897==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24897==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24897==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24897==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24897==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24897==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24897== 
==24897== 
==24897== HEAP SUMMARY:
==24897==     in use at exit: 0 bytes in 0 blocks
==24897==   total heap usage: 5,223 allocs, 5,223 frees, 2,763,020 bytes allocated
==24897== 
==24897== All heap blocks were freed -- no leaks are possible
==24897== 
==24897== For counts of detected and suppressed errors, rerun with: -v
==24897== Use --track-origins=yes to see where uninitialised values come from
==24897== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --pagesize=131072 --overwrite=1 --reopen=1    
==24900== Memcheck, a memory error detector
==24900== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24900== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24900== Command: ./test ../../testfiles/1/220.tst --pagesize=131072 --overwrite=1 --reopen=1
==24900== 
==24900== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24900==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24900==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24900==  Address 0x5fb614a is 122 bytes inside a block of size 4,176 alloc'd
==24900==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24900==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24900==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24900==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24900== 
==24900== 
==24900== HEAP SUMMARY:
==24900==     in use at exit: 0 bytes in 0 blocks
==24900==   total heap usage: 4,547 allocs, 4,547 frees, 2,502,265 bytes allocated
==24900== 
==24900== All heap blocks were freed -- no leaks are possible
==24900== 
==24900== For counts of detected and suppressed errors, rerun with: -v
==24900== Use --track-origins=yes to see where uninitialised values come from
==24900== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --pagesize=131072 --overwrite=1 --reopen=1    
==24903== Memcheck, a memory error detector
==24903== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24903== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24903== Command: ./test ../../testfiles/1/ext_020.tst --pagesize=131072 --overwrite=1 --reopen=1
==24903== 
==24903== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24903==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24903==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24903==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24903==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24903==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24903==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24903==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24903==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24903==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24903==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24903==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24903==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24903==  Address 0x5f06e06 is 118 bytes inside a block of size 4,176 alloc'd
==24903==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24903==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24903==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24903==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24903==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24903==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24903==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24903==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24903==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24903==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24903==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24903==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24903== 
==24903== 
==24903== HEAP SUMMARY:
==24903==     in use at exit: 0 bytes in 0 blocks
==24903==   total heap usage: 994 allocs, 994 frees, 987,242 bytes allocated
==24903== 
==24903== All heap blocks were freed -- no leaks are possible
==24903== 
==24903== For counts of detected and suppressed errors, rerun with: -v
==24903== Use --track-origins=yes to see where uninitialised values come from
==24903== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --pagesize=131072 --overwrite=1 --reopen=1    
==24906== Memcheck, a memory error detector
==24906== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24906== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24906== Command: ./test ../../testfiles/2/ext_060.tst --pagesize=131072 --overwrite=1 --reopen=1
==24906== 
==24906== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24906==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24906==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24906==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24906==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24906==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24906==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24906==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24906==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24906==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24906==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24906==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24906==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24906==  Address 0x5f1d01e is 414 bytes inside a block of size 4,176 alloc'd
==24906==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24906==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24906==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24906==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24906==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24906==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24906==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24906==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24906==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24906==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24906==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24906==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24906== 
==24906== 
==24906== HEAP SUMMARY:
==24906==     in use at exit: 0 bytes in 0 blocks
==24906==   total heap usage: 911,480 allocs, 911,480 frees, 24,580,723 bytes allocated
==24906== 
==24906== All heap blocks were freed -- no leaks are possible
==24906== 
==24906== For counts of detected and suppressed errors, rerun with: -v
==24906== Use --track-origins=yes to see where uninitialised values come from
==24906== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --pagesize=131072 --overwrite=1 --reopen=1    
==24909== Memcheck, a memory error detector
==24909== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24909== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24909== Command: ./test ../../testfiles/2/blb-001.tst --pagesize=131072 --overwrite=1 --reopen=1
==24909== 
==24909== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24909==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24909==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24909==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24909==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24909==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24909==  Address 0x5f00dec is 3,580 bytes inside a block of size 4,176 alloc'd
==24909==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24909==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24909==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24909== 
==24909== 
==24909== HEAP SUMMARY:
==24909==     in use at exit: 0 bytes in 0 blocks
==24909==   total heap usage: 331 allocs, 331 frees, 45,698,575 bytes allocated
==24909== 
==24909== All heap blocks were freed -- no leaks are possible
==24909== 
==24909== For counts of detected and suppressed errors, rerun with: -v
==24909== Use --track-origins=yes to see where uninitialised values come from
==24909== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --cachesize=0 --overwrite=1 --reopen=1    
==24913== Memcheck, a memory error detector
==24913== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24913== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24913== Command: ./test ../../testfiles/1/45.tst --cachesize=0 --overwrite=1 --reopen=1
==24913== 
==24913== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24913==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24913==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24913==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24913==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24913==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24913==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24913==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24913==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24913==    by 0x40210C: engine::flush() (engine.cpp:350)
==24913==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24913==    by 0x401E76: parser::process() (parser.cpp:44)
==24913==    by 0x403308: main (main.cpp:464)
==24913==  Address 0x5f0341e is 206 bytes inside a block of size 4,176 alloc'd
==24913==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24913==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24913==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24913==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24913==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24913==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24913==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24913==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24913==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24913==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24913==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24913==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24913== 
==24913== 
==24913== HEAP SUMMARY:
==24913==     in use at exit: 0 bytes in 0 blocks
==24913==   total heap usage: 3,543 allocs, 3,543 frees, 2,771,100 bytes allocated
==24913== 
==24913== All heap blocks were freed -- no leaks are possible
==24913== 
==24913== For counts of detected and suppressed errors, rerun with: -v
==24913== Use --track-origins=yes to see where uninitialised values come from
==24913== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --cachesize=0 --overwrite=1 --reopen=1    
==24916== Memcheck, a memory error detector
==24916== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24916== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24916== Command: ./test ../../testfiles/1/220.tst --cachesize=0 --overwrite=1 --reopen=1
==24916== 
==24916== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24916==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24916==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24916==  Address 0x5fb676a is 122 bytes inside a block of size 4,176 alloc'd
==24916==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24916==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24916==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24916==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24916== 
==24916== 
==24916== HEAP SUMMARY:
==24916==     in use at exit: 0 bytes in 0 blocks
==24916==   total heap usage: 3,800 allocs, 3,800 frees, 2,506,677 bytes allocated
==24916== 
==24916== All heap blocks were freed -- no leaks are possible
==24916== 
==24916== For counts of detected and suppressed errors, rerun with: -v
==24916== Use --track-origins=yes to see where uninitialised values come from
==24916== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --cachesize=0 --overwrite=1 --reopen=1    
==24919== Memcheck, a memory error detector
==24919== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24919== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24919== Command: ./test ../../testfiles/1/ext_020.tst --cachesize=0 --overwrite=1 --reopen=1
==24919== 
==24919== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24919==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24919==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24919==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24919==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24919==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24919==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24919==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24919==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24919==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24919==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24919==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24919==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24919==  Address 0x5f06e06 is 118 bytes inside a block of size 4,176 alloc'd
==24919==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24919==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24919==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24919==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24919==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24919==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24919==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24919==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24919==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24919==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24919==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24919==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24919== 
==24919== 
==24919== HEAP SUMMARY:
==24919==     in use at exit: 0 bytes in 0 blocks
==24919==   total heap usage: 996 allocs, 996 frees, 987,546 bytes allocated
==24919== 
==24919== All heap blocks were freed -- no leaks are possible
==24919== 
==24919== For counts of detected and suppressed errors, rerun with: -v
==24919== Use --track-origins=yes to see where uninitialised values come from
==24919== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --cachesize=0 --overwrite=1 --reopen=1    
==24922== Memcheck, a memory error detector
==24922== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24922== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24922== Command: ./test ../../testfiles/2/ext_060.tst --cachesize=0 --overwrite=1 --reopen=1
==24922== 
==24922== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24922==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24922==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24922==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24922==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24922==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24922==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24922==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24922==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24922==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24922==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24922==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24922==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24922==  Address 0x5f1d01e is 414 bytes inside a block of size 4,176 alloc'd
==24922==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24922==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24922==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24922==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24922==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24922==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24922==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24922==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24922==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24922==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24922==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24922==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24922== 
==24922== 
==24922== HEAP SUMMARY:
==24922==     in use at exit: 0 bytes in 0 blocks
==24922==   total heap usage: 911,482 allocs, 911,482 frees, 24,581,027 bytes allocated
==24922== 
==24922== All heap blocks were freed -- no leaks are possible
==24922== 
==24922== For counts of detected and suppressed errors, rerun with: -v
==24922== Use --track-origins=yes to see where uninitialised values come from
==24922== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --cachesize=0 --overwrite=1 --reopen=1    
==24925== Memcheck, a memory error detector
==24925== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24925== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24925== Command: ./test ../../testfiles/2/blb-001.tst --cachesize=0 --overwrite=1 --reopen=1
==24925== 
==24925== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24925==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24925==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24925==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24925==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24925==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24925==  Address 0x5f0224c is 3,580 bytes inside a block of size 4,176 alloc'd
==24925==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24925==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24925==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24925== 
==24925== 
==24925== HEAP SUMMARY:
==24925==     in use at exit: 0 bytes in 0 blocks
==24925==   total heap usage: 342 allocs, 342 frees, 45,703,831 bytes allocated
==24925== 
==24925== All heap blocks were freed -- no leaks are possible
==24925== 
==24925== For counts of detected and suppressed errors, rerun with: -v
==24925== Use --track-origins=yes to see where uninitialised values come from
==24925== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --use-aes=1 --reopen=1    
==24929== Memcheck, a memory error detector
==24929== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24929== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24929== Command: ./test ../../testfiles/1/45.tst --use-aes=1 --reopen=1
==24929== 
==24929== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24929==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24929==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24929==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24929==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24929==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24929==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24929==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24929==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24929==    by 0x40210C: engine::flush() (engine.cpp:350)
==24929==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24929==    by 0x401E76: parser::process() (parser.cpp:44)
==24929==    by 0x403308: main (main.cpp:464)
==24929==  Address 0x5f0341e is 206 bytes inside a block of size 4,176 alloc'd
==24929==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24929==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24929==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24929==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24929==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24929==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24929==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24929==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24929==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24929==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24929==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24929==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24929== 
==24929== 
==24929== HEAP SUMMARY:
==24929==     in use at exit: 0 bytes in 0 blocks
==24929==   total heap usage: 3,543 allocs, 3,543 frees, 2,771,100 bytes allocated
==24929== 
==24929== All heap blocks were freed -- no leaks are possible
==24929== 
==24929== For counts of detected and suppressed errors, rerun with: -v
==24929== Use --track-origins=yes to see where uninitialised values come from
==24929== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --use-aes=1 --reopen=1    
==24932== Memcheck, a memory error detector
==24932== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24932== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24932== Command: ./test ../../testfiles/1/220.tst --use-aes=1 --reopen=1
==24932== 
==24932== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24932==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24932==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24932==  Address 0x5fb98ea is 122 bytes inside a block of size 4,176 alloc'd
==24932==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24932==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24932==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24932==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24932== 
==24932== 
==24932== HEAP SUMMARY:
==24932==     in use at exit: 0 bytes in 0 blocks
==24932==   total heap usage: 4,224 allocs, 4,224 frees, 2,456,530 bytes allocated
==24932== 
==24932== All heap blocks were freed -- no leaks are possible
==24932== 
==24932== For counts of detected and suppressed errors, rerun with: -v
==24932== Use --track-origins=yes to see where uninitialised values come from
==24932== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --use-aes=1 --reopen=1    
==24935== Memcheck, a memory error detector
==24935== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24935== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24935== Command: ./test ../../testfiles/1/ext_020.tst --use-aes=1 --reopen=1
==24935== 
==24935== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24935==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24935==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24935==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24935==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24935==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24935==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24935==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24935==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24935==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24935==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24935==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24935==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24935==  Address 0x5f06e06 is 118 bytes inside a block of size 4,176 alloc'd
==24935==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24935==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24935==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24935==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24935==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24935==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24935==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24935==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24935==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24935==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24935==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24935==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24935== 
==24935== 
==24935== HEAP SUMMARY:
==24935==     in use at exit: 0 bytes in 0 blocks
==24935==   total heap usage: 996 allocs, 996 frees, 987,546 bytes allocated
==24935== 
==24935== All heap blocks were freed -- no leaks are possible
==24935== 
==24935== For counts of detected and suppressed errors, rerun with: -v
==24935== Use --track-origins=yes to see where uninitialised values come from
==24935== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --use-aes=1 --reopen=1    
==24938== Memcheck, a memory error detector
==24938== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24938== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24938== Command: ./test ../../testfiles/2/ext_060.tst --use-aes=1 --reopen=1
==24938== 
==24938== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24938==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24938==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24938==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24938==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24938==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24938==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24938==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24938==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24938==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24938==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24938==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24938==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24938==  Address 0x5f1ceda is 410 bytes inside a block of size 4,176 alloc'd
==24938==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24938==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24938==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24938==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24938==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24938==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24938==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24938==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24938==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24938==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24938==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24938==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24938== 
==24938== 
==24938== HEAP SUMMARY:
==24938==     in use at exit: 0 bytes in 0 blocks
==24938==   total heap usage: 920,403 allocs, 920,403 frees, 24,716,473 bytes allocated
==24938== 
==24938== All heap blocks were freed -- no leaks are possible
==24938== 
==24938== For counts of detected and suppressed errors, rerun with: -v
==24938== Use --track-origins=yes to see where uninitialised values come from
==24938== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --use-aes=1 --reopen=1    
==24941== Memcheck, a memory error detector
==24941== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24941== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24941== Command: ./test ../../testfiles/2/blb-001.tst --use-aes=1 --reopen=1
==24941== 
==24941== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24941==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24941==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24941==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24941==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24941==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24941==  Address 0x5f023d8 is 3,976 bytes inside a block of size 4,176 alloc'd
==24941==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24941==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24941==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24941== 
==24941== 
==24941== HEAP SUMMARY:
==24941==     in use at exit: 0 bytes in 0 blocks
==24941==   total heap usage: 356 allocs, 356 frees, 203,455,483 bytes allocated
==24941== 
==24941== All heap blocks were freed -- no leaks are possible
==24941== 
==24941== For counts of detected and suppressed errors, rerun with: -v
==24941== Use --track-origins=yes to see where uninitialised values come from
==24941== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --use-recovery=1 --reopen=1    
==24945== Memcheck, a memory error detector
==24945== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24945== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24945== Command: ./test ../../testfiles/1/45.tst --use-recovery=1 --reopen=1
==24945== 
==24945== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24945==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24945==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24945==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24945==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24945==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24945==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24945==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24945==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24945==    by 0x40210C: engine::flush() (engine.cpp:350)
==24945==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24945==    by 0x401E76: parser::process() (parser.cpp:44)
==24945==    by 0x403308: main (main.cpp:464)
==24945==  Address 0x609a0ee is 206 bytes inside a block of size 4,176 alloc'd
==24945==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24945==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24945==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24945==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24945==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24945==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24945==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24945==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24945==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24945==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24945==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24945==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24945== 
==24945== 
==24945== HEAP SUMMARY:
==24945==     in use at exit: 0 bytes in 0 blocks
==24945==   total heap usage: 15,009 allocs, 15,009 frees, 191,072,348 bytes allocated
==24945== 
==24945== All heap blocks were freed -- no leaks are possible
==24945== 
==24945== For counts of detected and suppressed errors, rerun with: -v
==24945== Use --track-origins=yes to see where uninitialised values come from
==24945== ERROR SUMMARY: 107 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --use-recovery=1 --reopen=1    
==24948== Memcheck, a memory error detector
==24948== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24948== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24948== Command: ./test ../../testfiles/1/220.tst --use-recovery=1 --reopen=1
==24948== 
==24948== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24948==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24948==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24948==  Address 0x614bd06 is 150 bytes inside a block of size 4,176 alloc'd
==24948==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24948==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24948==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24948==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24948== 
==24948== 
==24948== HEAP SUMMARY:
==24948==     in use at exit: 0 bytes in 0 blocks
==24948==   total heap usage: 14,550 allocs, 14,550 frees, 171,858,418 bytes allocated
==24948== 
==24948== All heap blocks were freed -- no leaks are possible
==24948== 
==24948== For counts of detected and suppressed errors, rerun with: -v
==24948== Use --track-origins=yes to see where uninitialised values come from
==24948== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --use-recovery=1 --reopen=1    
==24951== Memcheck, a memory error detector
==24951== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24951== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24951== Command: ./test ../../testfiles/1/ext_020.tst --use-recovery=1 --reopen=1
==24951== 
==24951== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24951==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24951==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24951==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24951==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24951==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24951==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24951==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24951==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24951==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24951==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24951==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24951==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24951==  Address 0x5f3f4c6 is 118 bytes inside a block of size 4,176 alloc'd
==24951==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24951==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24951==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24951==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24951==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24951==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24951==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24951==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24951==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24951==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24951==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24951==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24951== 
==24951== 
==24951== HEAP SUMMARY:
==24951==     in use at exit: 0 bytes in 0 blocks
==24951==   total heap usage: 1,041 allocs, 1,041 frees, 1,710,290 bytes allocated
==24951== 
==24951== All heap blocks were freed -- no leaks are possible
==24951== 
==24951== For counts of detected and suppressed errors, rerun with: -v
==24951== Use --track-origins=yes to see where uninitialised values come from
==24951== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --use-recovery=1 --reopen=1    
==24954== Memcheck, a memory error detector
==24954== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24954== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24954== Command: ./test ../../testfiles/2/ext_060.tst --use-recovery=1 --reopen=1
==24954== 
==24954== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24954==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24954==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24954==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24954==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24954==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24954==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24954==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24954==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24954==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24954==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24954==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24954==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24954==  Address 0x63c36da is 410 bytes inside a block of size 4,176 alloc'd
==24954==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24954==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24954==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24954==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24954==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24954==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24954==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24954==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24954==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24954==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24954==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24954==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24954== 
==24954== 
==24954== HEAP SUMMARY:
==24954==     in use at exit: 0 bytes in 0 blocks
==24954==   total heap usage: 952,137 allocs, 952,137 frees, 545,238,513 bytes allocated
==24954== 
==24954== All heap blocks were freed -- no leaks are possible
==24954== 
==24954== For counts of detected and suppressed errors, rerun with: -v
==24954== Use --track-origins=yes to see where uninitialised values come from
==24954== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --use-recovery=1 --reopen=1    
==24957== Memcheck, a memory error detector
==24957== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24957== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24957== Command: ./test ../../testfiles/2/blb-001.tst --use-recovery=1 --reopen=1
==24957== 
==24957== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24957==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24957==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24957==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24957==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24957==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24957==  Address 0x5f872e8 is 3,976 bytes inside a block of size 4,176 alloc'd
==24957==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24957==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24957==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24957== 
==24957== 
==24957== HEAP SUMMARY:
==24957==     in use at exit: 0 bytes in 0 blocks
==24957==   total heap usage: 454 allocs, 454 frees, 205,048,659 bytes allocated
==24957== 
==24957== All heap blocks were freed -- no leaks are possible
==24957== 
==24957== For counts of detected and suppressed errors, rerun with: -v
==24957== Use --track-origins=yes to see where uninitialised values come from
==24957== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --cacheunlimited=1    
==24961== Memcheck, a memory error detector
==24961== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24961== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24961== Command: ./test ../../testfiles/1/45.tst --cacheunlimited=1
==24961== 
==24961== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24961==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24961==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24961==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24961==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24961==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24961==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24961==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24961==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24961==    by 0x40210C: engine::flush() (engine.cpp:350)
==24961==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24961==    by 0x401E76: parser::process() (parser.cpp:44)
==24961==    by 0x403308: main (main.cpp:464)
==24961==  Address 0x5f0341e is 206 bytes inside a block of size 4,176 alloc'd
==24961==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24961==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24961==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24961==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24961==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24961==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24961==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24961==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24961==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24961==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24961==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24961==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24961== 
==24961== 
==24961== HEAP SUMMARY:
==24961==     in use at exit: 0 bytes in 0 blocks
==24961==   total heap usage: 3,350 allocs, 3,350 frees, 2,270,373 bytes allocated
==24961== 
==24961== All heap blocks were freed -- no leaks are possible
==24961== 
==24961== For counts of detected and suppressed errors, rerun with: -v
==24961== Use --track-origins=yes to see where uninitialised values come from
==24961== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --cacheunlimited=1    
==24964== Memcheck, a memory error detector
==24964== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24964== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24964== Command: ./test ../../testfiles/1/220.tst --cacheunlimited=1
==24964== 
==24964== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24964==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24964==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24964==  Address 0x5fb98ea is 122 bytes inside a block of size 4,176 alloc'd
==24964==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24964==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24964==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24964==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24964== 
==24964== 
==24964== HEAP SUMMARY:
==24964==     in use at exit: 0 bytes in 0 blocks
==24964==   total heap usage: 4,059 allocs, 4,059 frees, 1,951,005 bytes allocated
==24964== 
==24964== All heap blocks were freed -- no leaks are possible
==24964== 
==24964== For counts of detected and suppressed errors, rerun with: -v
==24964== Use --track-origins=yes to see where uninitialised values come from
==24964== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --cacheunlimited=1    
==24967== Memcheck, a memory error detector
==24967== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24967== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24967== Command: ./test ../../testfiles/1/ext_020.tst --cacheunlimited=1
==24967== 
==24967== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24967==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24967==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24967==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24967==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24967==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24967==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24967==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24967==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24967==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24967==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24967==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24967==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24967==  Address 0x5f06e06 is 118 bytes inside a block of size 4,176 alloc'd
==24967==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24967==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24967==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24967==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24967==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24967==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24967==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24967==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24967==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24967==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24967==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24967==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24967== 
==24967== 
==24967== HEAP SUMMARY:
==24967==     in use at exit: 0 bytes in 0 blocks
==24967==   total heap usage: 831 allocs, 831 frees, 665,399 bytes allocated
==24967== 
==24967== All heap blocks were freed -- no leaks are possible
==24967== 
==24967== For counts of detected and suppressed errors, rerun with: -v
==24967== Use --track-origins=yes to see where uninitialised values come from
==24967== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --cacheunlimited=1    
==24972== Memcheck, a memory error detector
==24972== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24972== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24972== Command: ./test ../../testfiles/2/ext_060.tst --cacheunlimited=1
==24972== 
==24972== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24972==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24972==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24972==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24972==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24972==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24972==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24972==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24972==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24972==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24972==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24972==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24972==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24972==  Address 0x5f1ceda is 410 bytes inside a block of size 4,176 alloc'd
==24972==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24972==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24972==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24972==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24972==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24972==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24972==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24972==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24972==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24972==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24972==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24972==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24972== 
==24972== 
==24972== HEAP SUMMARY:
==24972==     in use at exit: 0 bytes in 0 blocks
==24972==   total heap usage: 919,984 allocs, 919,984 frees, 24,441,515 bytes allocated
==24972== 
==24972== All heap blocks were freed -- no leaks are possible
==24972== 
==24972== For counts of detected and suppressed errors, rerun with: -v
==24972== Use --track-origins=yes to see where uninitialised values come from
==24972== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --cacheunlimited=1    
==24975== Memcheck, a memory error detector
==24975== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24975== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24975== Command: ./test ../../testfiles/2/blb-001.tst --cacheunlimited=1
==24975== 
==24975== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24975==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24975==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24975==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24975==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24975==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24975==  Address 0x5f023d8 is 3,976 bytes inside a block of size 4,176 alloc'd
==24975==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24975==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24975==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24975== 
==24975== 
==24975== HEAP SUMMARY:
==24975==     in use at exit: 0 bytes in 0 blocks
==24975==   total heap usage: 206 allocs, 206 frees, 121,989,732 bytes allocated
==24975== 
==24975== All heap blocks were freed -- no leaks are possible
==24975== 
==24975== For counts of detected and suppressed errors, rerun with: -v
==24975== Use --track-origins=yes to see where uninitialised values come from
==24975== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==24980== Memcheck, a memory error detector
==24980== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24980== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24980== Command: ./test ../../testfiles/1/45.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==24980== 
==24980== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24980==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24980==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24980==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24980==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24980==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24980==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24980==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24980==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24980==    by 0x40210C: engine::flush() (engine.cpp:350)
==24980==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24980==    by 0x401E76: parser::process() (parser.cpp:44)
==24980==    by 0x403308: main (main.cpp:464)
==24980==  Address 0x5f0341e is 206 bytes inside a block of size 4,176 alloc'd
==24980==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24980==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24980==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24980==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24980==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24980==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24980==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24980==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24980==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24980==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24980==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24980==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24980== 
==24980== 
==24980== HEAP SUMMARY:
==24980==     in use at exit: 0 bytes in 0 blocks
==24980==   total heap usage: 3,543 allocs, 3,543 frees, 2,771,100 bytes allocated
==24980== 
==24980== All heap blocks were freed -- no leaks are possible
==24980== 
==24980== For counts of detected and suppressed errors, rerun with: -v
==24980== Use --track-origins=yes to see where uninitialised values come from
==24980== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==24983== Memcheck, a memory error detector
==24983== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24983== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24983== Command: ./test ../../testfiles/1/220.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==24983== 
==24983== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24983==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24983==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24983==  Address 0x5fb98ea is 122 bytes inside a block of size 4,176 alloc'd
==24983==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24983==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24983==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24983==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24983== 
==24983== 
==24983== HEAP SUMMARY:
==24983==     in use at exit: 0 bytes in 0 blocks
==24983==   total heap usage: 4,224 allocs, 4,224 frees, 2,456,530 bytes allocated
==24983== 
==24983== All heap blocks were freed -- no leaks are possible
==24983== 
==24983== For counts of detected and suppressed errors, rerun with: -v
==24983== Use --track-origins=yes to see where uninitialised values come from
==24983== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==24986== Memcheck, a memory error detector
==24986== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24986== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24986== Command: ./test ../../testfiles/1/ext_020.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==24986== 
==24986== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24986==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24986==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24986==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24986==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24986==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24986==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24986==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24986==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24986==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24986==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24986==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24986==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24986==  Address 0x5f06da6 is 118 bytes inside a block of size 4,176 alloc'd
==24986==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24986==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24986==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24986==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24986==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24986==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24986==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24986==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24986==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24986==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24986==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24986==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24986== 
==24986== 
==24986== HEAP SUMMARY:
==24986==     in use at exit: 0 bytes in 0 blocks
==24986==   total heap usage: 995 allocs, 995 frees, 987,514 bytes allocated
==24986== 
==24986== All heap blocks were freed -- no leaks are possible
==24986== 
==24986== For counts of detected and suppressed errors, rerun with: -v
==24986== Use --track-origins=yes to see where uninitialised values come from
==24986== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==24989== Memcheck, a memory error detector
==24989== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24989== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24989== Command: ./test ../../testfiles/2/ext_060.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==24989== 
==24989== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24989==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24989==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24989==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24989==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24989==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24989==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24989==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24989==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24989==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24989==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24989==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24989==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24989==  Address 0x5f1ce1a is 410 bytes inside a block of size 4,176 alloc'd
==24989==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24989==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24989==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24989==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24989==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24989==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24989==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24989==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24989==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24989==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24989==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24989==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24989== 
==24989== 
==24989== HEAP SUMMARY:
==24989==     in use at exit: 0 bytes in 0 blocks
==24989==   total heap usage: 920,539 allocs, 920,539 frees, 24,720,064 bytes allocated
==24989== 
==24989== All heap blocks were freed -- no leaks are possible
==24989== 
==24989== For counts of detected and suppressed errors, rerun with: -v
==24989== Use --track-origins=yes to see where uninitialised values come from
==24989== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==24992== Memcheck, a memory error detector
==24992== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24992== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24992== Command: ./test ../../testfiles/2/blb-001.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==24992== 
==24992== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24992==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24992==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==24992==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==24992==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==24992==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==24992==  Address 0x5f023d8 is 3,976 bytes inside a block of size 4,176 alloc'd
==24992==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24992==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24992==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24992== 
==24992== 
==24992== HEAP SUMMARY:
==24992==     in use at exit: 0 bytes in 0 blocks
==24992==   total heap usage: 356 allocs, 356 frees, 203,455,483 bytes allocated
==24992== 
==24992== All heap blocks were freed -- no leaks are possible
==24992== 
==24992== For counts of detected and suppressed errors, rerun with: -v
==24992== Use --track-origins=yes to see where uninitialised values come from
==24992== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==24996== Memcheck, a memory error detector
==24996== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24996== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24996== Command: ./test ../../testfiles/1/45.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1
==24996== 
==24996== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24996==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24996==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24996==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24996==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24996==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==24996==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==24996==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==24996==    by 0x40503F: berkeleydb::flush() (berkeleydb.cpp:141)
==24996==    by 0x40210C: engine::flush() (engine.cpp:350)
==24996==    by 0x401DF5: parser::process_line(char*) (parser.cpp:107)
==24996==    by 0x401E76: parser::process() (parser.cpp:44)
==24996==    by 0x403308: main (main.cpp:464)
==24996==  Address 0x5f0341e is 206 bytes inside a block of size 4,176 alloc'd
==24996==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24996==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24996==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24996==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24996==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24996==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24996==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==24996==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24996==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24996==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24996==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24996==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24996== 
==24996== 
==24996== HEAP SUMMARY:
==24996==     in use at exit: 0 bytes in 0 blocks
==24996==   total heap usage: 3,543 allocs, 3,543 frees, 2,771,100 bytes allocated
==24996== 
==24996== All heap blocks were freed -- no leaks are possible
==24996== 
==24996== For counts of detected and suppressed errors, rerun with: -v
==24996== Use --track-origins=yes to see where uninitialised values come from
==24996== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==24999== Memcheck, a memory error detector
==24999== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==24999== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==24999== Command: ./test ../../testfiles/1/220.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1
==24999== 
==24999== Syscall param pwrite64(buf) points to uninitialised byte(s)
==24999==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==24999==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24999==  Address 0x5fb98ea is 122 bytes inside a block of size 4,176 alloc'd
==24999==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==24999==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==24999==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==24999==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==24999== 
==24999== 
==24999== HEAP SUMMARY:
==24999==     in use at exit: 0 bytes in 0 blocks
==24999==   total heap usage: 4,224 allocs, 4,224 frees, 2,456,530 bytes allocated
==24999== 
==24999== All heap blocks were freed -- no leaks are possible
==24999== 
==24999== For counts of detected and suppressed errors, rerun with: -v
==24999== Use --track-origins=yes to see where uninitialised values come from
==24999== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==25002== Memcheck, a memory error detector
==25002== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==25002== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==25002== Command: ./test ../../testfiles/1/ext_020.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1
==25002== 
==25002== Syscall param pwrite64(buf) points to uninitialised byte(s)
==25002==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==25002==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==25002==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==25002==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==25002==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==25002==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==25002==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==25002==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==25002==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==25002==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==25002==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==25002==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==25002==  Address 0x5f06e06 is 118 bytes inside a block of size 4,176 alloc'd
==25002==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==25002==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==25002==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==25002==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==25002==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==25002==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==25002==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==25002==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==25002==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==25002==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==25002==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==25002==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==25002== 
==25002== 
==25002== HEAP SUMMARY:
==25002==     in use at exit: 0 bytes in 0 blocks
==25002==   total heap usage: 996 allocs, 996 frees, 987,546 bytes allocated
==25002== 
==25002== All heap blocks were freed -- no leaks are possible
==25002== 
==25002== For counts of detected and suppressed errors, rerun with: -v
==25002== Use --track-origins=yes to see where uninitialised values come from
==25002== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==25005== Memcheck, a memory error detector
==25005== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==25005== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==25005== Command: ./test ../../testfiles/2/ext_060.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1
==25005== 
==25005== Syscall param pwrite64(buf) points to uninitialised byte(s)
==25005==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==25005==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==25005==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==25005==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==25005==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==25005==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==25005==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==25005==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==25005==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==25005==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==25005==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==25005==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==25005==  Address 0x5f1ceda is 410 bytes inside a block of size 4,176 alloc'd
==25005==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==25005==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==25005==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==25005==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==25005==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==25005==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==25005==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==25005==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==25005==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==25005==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==25005==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==25005==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==25005== 
==25005== 
==25005== HEAP SUMMARY:
==25005==     in use at exit: 0 bytes in 0 blocks
==25005==   total heap usage: 920,403 allocs, 920,403 frees, 24,716,473 bytes allocated
==25005== 
==25005== All heap blocks were freed -- no leaks are possible
==25005== 
==25005== For counts of detected and suppressed errors, rerun with: -v
==25005== Use --track-origins=yes to see where uninitialised values come from
==25005== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==25008== Memcheck, a memory error detector
==25008== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==25008== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==25008== Command: ./test ../../testfiles/2/blb-001.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1
==25008== 
==25008== Syscall param pwrite64(buf) points to uninitialised byte(s)
==25008==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==25008==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==25008==    by 0x405112: berkeleydb::close() (berkeleydb.cpp:128)
==25008==    by 0x4025D7: engine::close(bool) (engine.cpp:321)
==25008==    by 0x401E13: parser::process_line(char*) (parser.cpp:104)
==25008==  Address 0x5f023d8 is 3,976 bytes inside a block of size 4,176 alloc'd
==25008==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==25008==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==25008==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==25008== 
==25008== 
==25008== HEAP SUMMARY:
==25008==     in use at exit: 0 bytes in 0 blocks
==25008==   total heap usage: 356 allocs, 356 frees, 203,455,483 bytes allocated
==25008== 
==25008== All heap blocks were freed -- no leaks are possible
==25008== 
==25008== For counts of detected and suppressed errors, rerun with: -v
==25008== Use --track-origins=yes to see where uninitialised values come from
==25008== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --direct_access=1 --inmemorydb=1    
==25012== Memcheck, a memory error detector
==25012== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==25012== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==25012== Command: ./test ../../testfiles/1/45.tst --direct_access=1 --inmemorydb=1
==25012== 
==25012== Syscall param pwrite64(buf) points to uninitialised byte(s)
==25012==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==25012==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==25012==  Address 0x5fda066 is 518 bytes inside a block of size 8,272 alloc'd
==25012==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==25012==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==25012==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==25012==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==25012== 
==25012== 
==25012== HEAP SUMMARY:
==25012==     in use at exit: 0 bytes in 0 blocks
==25012==   total heap usage: 8,467 allocs, 8,467 frees, 3,156,855 bytes allocated
==25012== 
==25012== All heap blocks were freed -- no leaks are possible
==25012== 
==25012== For counts of detected and suppressed errors, rerun with: -v
==25012== Use --track-origins=yes to see where uninitialised values come from
==25012== ERROR SUMMARY: 51 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --direct_access=1 --inmemorydb=1    
==25015== Memcheck, a memory error detector
==25015== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==25015== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==25015== Command: ./test ../../testfiles/1/220.tst --direct_access=1 --inmemorydb=1
==25015== 
==25015== Syscall param pwrite64(buf) points to uninitialised byte(s)
==25015==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==25015==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==25015==  Address 0x5fe848e is 158 bytes inside a block of size 8,272 alloc'd
==25015==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==25015==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==25015==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==25015==    by 0x405486: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==25015== 
==25015== 
==25015== HEAP SUMMARY:
==25015==     in use at exit: 0 bytes in 0 blocks
==25015==   total heap usage: 5,774 allocs, 5,774 frees, 2,751,694 bytes allocated
==25015== 
==25015== All heap blocks were freed -- no leaks are possible
==25015== 
==25015== For counts of detected and suppressed errors, rerun with: -v
==25015== Use --track-origins=yes to see where uninitialised values come from
==25015== ERROR SUMMARY: 37 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --direct_access=1 --inmemorydb=1    
==25018== Memcheck, a memory error detector
==25018== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==25018== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==25018== Command: ./test ../../testfiles/1/ext_020.tst --direct_access=1 --inmemorydb=1
==25018== 
==25018== 
==25018== HEAP SUMMARY:
==25018==     in use at exit: 0 bytes in 0 blocks
==25018==   total heap usage: 815 allocs, 815 frees, 690,512 bytes allocated
==25018== 
==25018== All heap blocks were freed -- no leaks are possible
==25018== 
==25018== For counts of detected and suppressed errors, rerun with: -v
==25018== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --direct_access=1 --inmemorydb=1    
==25021== Memcheck, a memory error detector
==25021== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==25021== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==25021== Command: ./test ../../testfiles/2/ext_060.tst --direct_access=1 --inmemorydb=1
==25021== 
==25021== 
==25021== HEAP SUMMARY:
==25021==     in use at exit: 0 bytes in 0 blocks
==25021==   total heap usage: 924,096 allocs, 924,096 frees, 24,658,583 bytes allocated
==25021== 
==25021== All heap blocks were freed -- no leaks are possible
==25021== 
==25021== For counts of detected and suppressed errors, rerun with: -v
==25021== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --direct_access=1 --inmemorydb=1    
==25024== Memcheck, a memory error detector
==25024== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==25024== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==25024== Command: ./test ../../testfiles/2/blb-001.tst --direct_access=1 --inmemorydb=1
==25024== 
==25024== Syscall param pwrite64(buf) points to uninitialised byte(s)
==25024==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==25024==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==25024==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==25024==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==25024==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==25024==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==25024==    by 0x4F07938: __db_goff (in /usr/lib/libdb-4.7.so)
==25024==    by 0x4F1232B: __db_ret (in /usr/lib/libdb-4.7.so)
==25024==    by 0x4EF5695: __dbc_get (in /usr/lib/libdb-4.7.so)
==25024==    by 0x4EFE0EC: __dbc_get_pp (in /usr/lib/libdb-4.7.so)
==25024==    by 0x404DE0: berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:318)
==25024==    by 0x4024F1: engine::fullcheck() (engine.cpp:259)
==25024==  Address 0x5f05370 is 592 bytes inside a block of size 8,272 alloc'd
==25024==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==25024==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==25024==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==25024==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==25024==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==25024==    by 0x4E53C59: __bam_new_file (in /usr/lib/libdb-4.7.so)
==25024==    by 0x4F06A0D: __db_new_file (in /usr/lib/libdb-4.7.so)
==25024==    by 0x4F070F4: __db_open (in /usr/lib/libdb-4.7.so)
==25024==    by 0x4EFF855: __db_open_pp (in /usr/lib/libdb-4.7.so)
==25024==    by 0x40562D: berkeleydb::create() (berkeleydb.cpp:65)
==25024==    by 0x4021C9: engine::create(bool) (engine.cpp:42)
==25024==    by 0x401D23: parser::process_line(char*) (parser.cpp:69)
==25024== 
==25024== 
==25024== HEAP SUMMARY:
==25024==     in use at exit: 0 bytes in 0 blocks
==25024==   total heap usage: 132 allocs, 132 frees, 131,444,005 bytes allocated
==25024== 
==25024== All heap blocks were freed -- no leaks are possible
==25024== 
==25024== For counts of detected and suppressed errors, rerun with: -v
==25024== Use --track-origins=yes to see where uninitialised values come from
==25024== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)



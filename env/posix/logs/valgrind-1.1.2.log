running ../../testfiles/1/45.tst --reopen=1    
==3951== Memcheck, a memory error detector
==3951== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==3951== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==3951== Command: ./test ../../testfiles/1/45.tst --reopen=1
==3951== 
==3951== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3951==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==3951==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==3951==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==3951==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==3951==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==3951==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==3951==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==3951==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==3951==    by 0x40339B: engine::flush() (engine.cpp:350)
==3951==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==3951==    by 0x401C13: parser::process() (parser.cpp:44)
==3951==    by 0x403FC0: main (main.cpp:467)
==3951==  Address 0x5f01f0e is 206 bytes inside a block of size 4,176 alloc'd
==3951==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==3951==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==3951==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==3951==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==3951==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==3951==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==3951==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==3951==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==3951==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==3951==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==3951==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==3951==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==3951== 
==3951== 
==3951== HEAP SUMMARY:
==3951==     in use at exit: 0 bytes in 0 blocks
==3951==   total heap usage: 3,543 allocs, 3,543 frees, 2,760,332 bytes allocated
==3951== 
==3951== All heap blocks were freed -- no leaks are possible
==3951== 
==3951== For counts of detected and suppressed errors, rerun with: -v
==3951== Use --track-origins=yes to see where uninitialised values come from
==3951== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --reopen=1    
==3964== Memcheck, a memory error detector
==3964== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==3964== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==3964== Command: ./test ../../testfiles/1/220.tst --reopen=1
==3964== 
==3964== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3964==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==3964==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==3964==  Address 0x5f7feea is 138 bytes inside a block of size 4,176 alloc'd
==3964==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==3964==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==3964==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==3964==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==3964== 
==3964== 
==3964== HEAP SUMMARY:
==3964==     in use at exit: 0 bytes in 0 blocks
==3964==   total heap usage: 4,224 allocs, 4,224 frees, 2,445,762 bytes allocated
==3964== 
==3964== All heap blocks were freed -- no leaks are possible
==3964== 
==3964== For counts of detected and suppressed errors, rerun with: -v
==3964== Use --track-origins=yes to see where uninitialised values come from
==3964== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --reopen=1    
==3967== Memcheck, a memory error detector
==3967== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==3967== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==3967== Command: ./test ../../testfiles/1/ext_020.tst --reopen=1
==3967== 
==3967== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3967==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==3967==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==3967==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==3967==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==3967==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==3967==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==3967==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==3967==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==3967==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==3967==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==3967==    by 0x403208: engine::close(bool) (engine.cpp:321)
==3967==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==3967==  Address 0x5f058f6 is 118 bytes inside a block of size 4,176 alloc'd
==3967==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==3967==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==3967==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==3967==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==3967==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==3967==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==3967==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==3967==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==3967==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==3967==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==3967==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==3967==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==3967== 
==3967== 
==3967== HEAP SUMMARY:
==3967==     in use at exit: 0 bytes in 0 blocks
==3967==   total heap usage: 996 allocs, 996 frees, 976,778 bytes allocated
==3967== 
==3967== All heap blocks were freed -- no leaks are possible
==3967== 
==3967== For counts of detected and suppressed errors, rerun with: -v
==3967== Use --track-origins=yes to see where uninitialised values come from
==3967== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --reopen=1    
==3970== Memcheck, a memory error detector
==3970== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==3970== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==3970== Command: ./test ../../testfiles/2/ext_060.tst --reopen=1
==3970== 
==3970== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3970==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==3970==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==3970==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==3970==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==3970==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==3970==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==3970==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==3970==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==3970==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==3970==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==3970==    by 0x403208: engine::close(bool) (engine.cpp:321)
==3970==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==3970==  Address 0x5f1b9ca is 410 bytes inside a block of size 4,176 alloc'd
==3970==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==3970==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==3970==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==3970==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==3970==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==3970==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==3970==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==3970==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==3970==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==3970==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==3970==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==3970==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==3970== 
==3970== 
==3970== HEAP SUMMARY:
==3970==     in use at exit: 0 bytes in 0 blocks
==3970==   total heap usage: 920,403 allocs, 920,403 frees, 24,705,705 bytes allocated
==3970== 
==3970== All heap blocks were freed -- no leaks are possible
==3970== 
==3970== For counts of detected and suppressed errors, rerun with: -v
==3970== Use --track-origins=yes to see where uninitialised values come from
==3970== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --reopen=1    
==3998== Memcheck, a memory error detector
==3998== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==3998== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==3998== Command: ./test ../../testfiles/2/blb-001.tst --reopen=1
==3998== 
==3998== Syscall param pwrite64(buf) points to uninitialised byte(s)
==3998==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==3998==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==3998==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==3998==    by 0x403208: engine::close(bool) (engine.cpp:321)
==3998==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==3998==  Address 0x5f00ec8 is 3,976 bytes inside a block of size 4,176 alloc'd
==3998==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==3998==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==3998==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==3998== 
==3998== 
==3998== HEAP SUMMARY:
==3998==     in use at exit: 0 bytes in 0 blocks
==3998==   total heap usage: 356 allocs, 356 frees, 203,444,715 bytes allocated
==3998== 
==3998== All heap blocks were freed -- no leaks are possible
==3998== 
==3998== For counts of detected and suppressed errors, rerun with: -v
==3998== Use --track-origins=yes to see where uninitialised values come from
==3998== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --overwrite=1 --reopen=1    
==4003== Memcheck, a memory error detector
==4003== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4003== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4003== Command: ./test ../../testfiles/1/45.tst --overwrite=1 --reopen=1
==4003== 
==4003== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4003==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4003==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4003==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4003==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4003==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4003==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4003==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4003==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4003==    by 0x40339B: engine::flush() (engine.cpp:350)
==4003==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4003==    by 0x401C13: parser::process() (parser.cpp:44)
==4003==    by 0x403FC0: main (main.cpp:467)
==4003==  Address 0x5f01f0e is 206 bytes inside a block of size 4,176 alloc'd
==4003==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4003==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4003==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4003==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4003==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4003==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4003==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4003==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4003==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4003==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4003==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4003==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4003== 
==4003== 
==4003== HEAP SUMMARY:
==4003==     in use at exit: 0 bytes in 0 blocks
==4003==   total heap usage: 3,543 allocs, 3,543 frees, 2,760,332 bytes allocated
==4003== 
==4003== All heap blocks were freed -- no leaks are possible
==4003== 
==4003== For counts of detected and suppressed errors, rerun with: -v
==4003== Use --track-origins=yes to see where uninitialised values come from
==4003== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --overwrite=1 --reopen=1    
==4006== Memcheck, a memory error detector
==4006== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4006== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4006== Command: ./test ../../testfiles/1/220.tst --overwrite=1 --reopen=1
==4006== 
==4006== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4006==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4006==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4006==  Address 0x5f83362 is 114 bytes inside a block of size 4,176 alloc'd
==4006==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4006==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4006==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4006==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4006== 
==4006== 
==4006== HEAP SUMMARY:
==4006==     in use at exit: 0 bytes in 0 blocks
==4006==   total heap usage: 3,800 allocs, 3,800 frees, 2,495,909 bytes allocated
==4006== 
==4006== All heap blocks were freed -- no leaks are possible
==4006== 
==4006== For counts of detected and suppressed errors, rerun with: -v
==4006== Use --track-origins=yes to see where uninitialised values come from
==4006== ERROR SUMMARY: 116 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --overwrite=1 --reopen=1    
==4009== Memcheck, a memory error detector
==4009== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4009== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4009== Command: ./test ../../testfiles/1/ext_020.tst --overwrite=1 --reopen=1
==4009== 
==4009== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4009==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4009==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4009==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4009==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4009==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4009==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4009==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4009==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4009==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4009==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4009==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4009==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4009==  Address 0x5f058f6 is 118 bytes inside a block of size 4,176 alloc'd
==4009==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4009==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4009==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4009==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4009==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4009==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4009==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4009==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4009==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4009==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4009==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4009==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4009== 
==4009== 
==4009== HEAP SUMMARY:
==4009==     in use at exit: 0 bytes in 0 blocks
==4009==   total heap usage: 996 allocs, 996 frees, 976,778 bytes allocated
==4009== 
==4009== All heap blocks were freed -- no leaks are possible
==4009== 
==4009== For counts of detected and suppressed errors, rerun with: -v
==4009== Use --track-origins=yes to see where uninitialised values come from
==4009== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --overwrite=1 --reopen=1    
==4012== Memcheck, a memory error detector
==4012== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4012== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4012== Command: ./test ../../testfiles/2/ext_060.tst --overwrite=1 --reopen=1
==4012== 
==4012== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4012==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4012==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4012==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4012==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4012==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4012==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4012==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4012==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4012==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4012==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4012==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4012==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4012==  Address 0x5f1bb0e is 414 bytes inside a block of size 4,176 alloc'd
==4012==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4012==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4012==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4012==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4012==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4012==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4012==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4012==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4012==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4012==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4012==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4012==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4012== 
==4012== 
==4012== HEAP SUMMARY:
==4012==     in use at exit: 0 bytes in 0 blocks
==4012==   total heap usage: 911,482 allocs, 911,482 frees, 24,570,259 bytes allocated
==4012== 
==4012== All heap blocks were freed -- no leaks are possible
==4012== 
==4012== For counts of detected and suppressed errors, rerun with: -v
==4012== Use --track-origins=yes to see where uninitialised values come from
==4012== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --overwrite=1 --reopen=1    
==4015== Memcheck, a memory error detector
==4015== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4015== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4015== Command: ./test ../../testfiles/2/blb-001.tst --overwrite=1 --reopen=1
==4015== 
==4015== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4015==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4015==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4015==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4015==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4015==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4015==  Address 0x5f00d3c is 3,580 bytes inside a block of size 4,176 alloc'd
==4015==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4015==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4015==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4015== 
==4015== 
==4015== HEAP SUMMARY:
==4015==     in use at exit: 0 bytes in 0 blocks
==4015==   total heap usage: 342 allocs, 342 frees, 45,693,063 bytes allocated
==4015== 
==4015== All heap blocks were freed -- no leaks are possible
==4015== 
==4015== For counts of detected and suppressed errors, rerun with: -v
==4015== Use --track-origins=yes to see where uninitialised values come from
==4015== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --duplicate=1 --reopen=1    
==4019== Memcheck, a memory error detector
==4019== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4019== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4019== Command: ./test ../../testfiles/1/45.tst --duplicate=1 --reopen=1
==4019== 
==4019== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4019==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4019==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4019==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4019==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4019==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4019==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4019==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4019==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4019==    by 0x40339B: engine::flush() (engine.cpp:350)
==4019==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4019==    by 0x401C13: parser::process() (parser.cpp:44)
==4019==    by 0x403FC0: main (main.cpp:467)
==4019==  Address 0x5f01f0e is 206 bytes inside a block of size 4,176 alloc'd
==4019==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4019==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4019==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4019==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4019==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4019==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4019==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4019==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4019==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4019==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4019==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4019==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4019== 
==4019== 
==4019== HEAP SUMMARY:
==4019==     in use at exit: 0 bytes in 0 blocks
==4019==   total heap usage: 3,543 allocs, 3,543 frees, 2,760,332 bytes allocated
==4019== 
==4019== All heap blocks were freed -- no leaks are possible
==4019== 
==4019== For counts of detected and suppressed errors, rerun with: -v
==4019== Use --track-origins=yes to see where uninitialised values come from
==4019== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --duplicate=1 --reopen=1    
==4022== Memcheck, a memory error detector
==4022== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4022== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4022== Command: ./test ../../testfiles/1/220.tst --duplicate=1 --reopen=1
==4022== 
==4022== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4022==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4022==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4022==  Address 0x5f73fe0 is 112 bytes inside a block of size 4,176 alloc'd
==4022==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4022==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4022==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4022==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4022== 
==4022== 
==4022== HEAP SUMMARY:
==4022==     in use at exit: 0 bytes in 0 blocks
==4022==   total heap usage: 7,070 allocs, 7,070 frees, 3,199,471 bytes allocated
==4022== 
==4022== All heap blocks were freed -- no leaks are possible
==4022== 
==4022== For counts of detected and suppressed errors, rerun with: -v
==4022== Use --track-origins=yes to see where uninitialised values come from
==4022== ERROR SUMMARY: 604 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --duplicate=1 --reopen=1    
==4026== Memcheck, a memory error detector
==4026== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4026== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4026== Command: ./test ../../testfiles/1/ext_020.tst --duplicate=1 --reopen=1
==4026== 
==4026== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4026==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4026==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4026==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4026==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4026==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4026==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4026==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4026==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4026==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4026==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4026==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4026==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4026==  Address 0x5f058f6 is 118 bytes inside a block of size 4,176 alloc'd
==4026==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4026==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4026==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4026==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4026==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4026==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4026==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4026==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4026==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4026==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4026==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4026==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4026== 
==4026== 
==4026== HEAP SUMMARY:
==4026==     in use at exit: 0 bytes in 0 blocks
==4026==   total heap usage: 996 allocs, 996 frees, 976,778 bytes allocated
==4026== 
==4026== All heap blocks were freed -- no leaks are possible
==4026== 
==4026== For counts of detected and suppressed errors, rerun with: -v
==4026== Use --track-origins=yes to see where uninitialised values come from
==4026== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --duplicate=1 --reopen=1    
==4029== Memcheck, a memory error detector
==4029== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4029== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4029== Command: ./test ../../testfiles/2/ext_060.tst --duplicate=1 --reopen=1
==4029== 
==4029== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4029==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4029==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4029==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4029==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4029==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4029==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4029==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4029==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4029==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4029==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4029==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4029==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4029==  Address 0x5f154d6 is 614 bytes inside a block of size 4,176 alloc'd
==4029==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4029==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4029==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4029==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4029==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4029==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4029==    by 0x4E619E2: __bam_split (in /usr/lib/libdb-4.7.so)
==4029==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4029==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4029==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4029==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4029==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4029== 
==4029== 
==4029== HEAP SUMMARY:
==4029==     in use at exit: 0 bytes in 0 blocks
==4029==   total heap usage: 1,448,274 allocs, 1,448,274 frees, 44,135,966 bytes allocated
==4029== 
==4029== All heap blocks were freed -- no leaks are possible
==4029== 
==4029== For counts of detected and suppressed errors, rerun with: -v
==4029== Use --track-origins=yes to see where uninitialised values come from
==4029== ERROR SUMMARY: 15 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --duplicate=1 --reopen=1    
==4034== Memcheck, a memory error detector
==4034== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4034== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4034== Command: ./test ../../testfiles/2/blb-001.tst --duplicate=1 --reopen=1
==4034== 
==4034== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4034==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4034==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4034==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4034==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4034==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4034==  Address 0x5f00d30 is 3,568 bytes inside a block of size 4,176 alloc'd
==4034==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4034==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4034==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4034== 
==4034== 
==4034== HEAP SUMMARY:
==4034==     in use at exit: 0 bytes in 0 blocks
==4034==   total heap usage: 358 allocs, 358 frees, 203,444,855 bytes allocated
==4034== 
==4034== All heap blocks were freed -- no leaks are possible
==4034== 
==4034== For counts of detected and suppressed errors, rerun with: -v
==4034== Use --track-origins=yes to see where uninitialised values come from
==4034== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==4039== Memcheck, a memory error detector
==4039== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4039== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4039== Command: ./test ../../testfiles/1/45.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==4039== 
==4039== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4039==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4039==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4039==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4039==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4039==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4039==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4039==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4039==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4039==    by 0x40339B: engine::flush() (engine.cpp:350)
==4039==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4039==    by 0x401C13: parser::process() (parser.cpp:44)
==4039==    by 0x403FC0: main (main.cpp:467)
==4039==  Address 0x5f01f0e is 206 bytes inside a block of size 4,176 alloc'd
==4039==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4039==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4039==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4039==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4039==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4039==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4039==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4039==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4039==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4039==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4039==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4039==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4039== 
==4039== 
==4039== HEAP SUMMARY:
==4039==     in use at exit: 0 bytes in 0 blocks
==4039==   total heap usage: 3,543 allocs, 3,543 frees, 2,760,332 bytes allocated
==4039== 
==4039== All heap blocks were freed -- no leaks are possible
==4039== 
==4039== For counts of detected and suppressed errors, rerun with: -v
==4039== Use --track-origins=yes to see where uninitialised values come from
==4039== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==4042== Memcheck, a memory error detector
==4042== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4042== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4042== Command: ./test ../../testfiles/1/220.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==4042== 
==4042== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4042==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4042==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4042==  Address 0x5f755b0 is 112 bytes inside a block of size 4,176 alloc'd
==4042==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4042==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4042==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4042==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4042== 
==4042== 
==4042== HEAP SUMMARY:
==4042==     in use at exit: 0 bytes in 0 blocks
==4042==   total heap usage: 7,118 allocs, 7,118 frees, 3,239,883 bytes allocated
==4042== 
==4042== All heap blocks were freed -- no leaks are possible
==4042== 
==4042== For counts of detected and suppressed errors, rerun with: -v
==4042== Use --track-origins=yes to see where uninitialised values come from
==4042== ERROR SUMMARY: 604 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==4045== Memcheck, a memory error detector
==4045== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4045== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4045== Command: ./test ../../testfiles/1/ext_020.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==4045== 
==4045== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4045==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4045==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4045==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4045==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4045==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4045==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4045==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4045==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4045==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4045==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4045==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4045==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4045==  Address 0x5f058f6 is 118 bytes inside a block of size 4,176 alloc'd
==4045==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4045==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4045==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4045==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4045==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4045==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4045==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4045==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4045==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4045==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4045==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4045==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4045== 
==4045== 
==4045== HEAP SUMMARY:
==4045==     in use at exit: 0 bytes in 0 blocks
==4045==   total heap usage: 996 allocs, 996 frees, 976,778 bytes allocated
==4045== 
==4045== All heap blocks were freed -- no leaks are possible
==4045== 
==4045== For counts of detected and suppressed errors, rerun with: -v
==4045== Use --track-origins=yes to see where uninitialised values come from
==4045== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==4048== Memcheck, a memory error detector
==4048== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4048== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4048== Command: ./test ../../testfiles/2/ext_060.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==4048== 
==4048== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4048==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4048==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4048==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4048==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4048==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4048==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4048==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4048==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4048==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4048==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4048==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4048==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4048==  Address 0x5f15466 is 614 bytes inside a block of size 4,176 alloc'd
==4048==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4048==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4048==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4048==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4048==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4048==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4048==    by 0x4E619E2: __bam_split (in /usr/lib/libdb-4.7.so)
==4048==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4048==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4048==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4048==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4048==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4048== 
==4048== 
==4048== HEAP SUMMARY:
==4048==     in use at exit: 0 bytes in 0 blocks
==4048==   total heap usage: 1,447,854 allocs, 1,447,854 frees, 44,029,157 bytes allocated
==4048== 
==4048== All heap blocks were freed -- no leaks are possible
==4048== 
==4048== For counts of detected and suppressed errors, rerun with: -v
==4048== Use --track-origins=yes to see where uninitialised values come from
==4048== ERROR SUMMARY: 15 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --duplicate=1 --sort-duplicates=1 --reopen=1    
==4051== Memcheck, a memory error detector
==4051== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4051== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4051== Command: ./test ../../testfiles/2/blb-001.tst --duplicate=1 --sort-duplicates=1 --reopen=1
==4051== 
==4051== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4051==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4051==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4051==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4051==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4051==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4051==  Address 0x5f00d30 is 3,568 bytes inside a block of size 4,176 alloc'd
==4051==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4051==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4051==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4051== 
==4051== 
==4051== HEAP SUMMARY:
==4051==     in use at exit: 0 bytes in 0 blocks
==4051==   total heap usage: 358 allocs, 358 frees, 203,444,855 bytes allocated
==4051== 
==4051== All heap blocks were freed -- no leaks are possible
==4051== 
==4051== For counts of detected and suppressed errors, rerun with: -v
==4051== Use --track-origins=yes to see where uninitialised values come from
==4051== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==4055== Memcheck, a memory error detector
==4055== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4055== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4055== Command: ./test ../../testfiles/1/45.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==4055== 
==4055== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4055==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4055==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4055==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4055==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4055==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4055==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4055==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4055==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4055==    by 0x40339B: engine::flush() (engine.cpp:350)
==4055==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4055==    by 0x401C13: parser::process() (parser.cpp:44)
==4055==    by 0x403FC0: main (main.cpp:467)
==4055==  Address 0x5f02a0e is 206 bytes inside a block of size 4,176 alloc'd
==4055==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4055==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4055==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4055==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4055==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4055==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4055==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4055==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4055==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4055==    by 0x4EFD790: __dbc_put_pp (in /usr/lib/libdb-4.7.so)
==4055==    by 0x4064D7: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:167)
==4055==    by 0x402860: engine::insert(char*, char*) (engine.cpp:127)
==4055== 
==4055== 
==4055== HEAP SUMMARY:
==4055==     in use at exit: 0 bytes in 0 blocks
==4055==   total heap usage: 3,923 allocs, 3,923 frees, 2,765,652 bytes allocated
==4055== 
==4055== All heap blocks were freed -- no leaks are possible
==4055== 
==4055== For counts of detected and suppressed errors, rerun with: -v
==4055== Use --track-origins=yes to see where uninitialised values come from
==4055== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==4058== Memcheck, a memory error detector
==4058== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4058== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4058== Command: ./test ../../testfiles/1/220.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==4058== 
==4058== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4058==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4058==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4EFD790: __dbc_put_pp (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4064D7: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:167)
==4058==  Address 0x5f7a750 is 112 bytes inside a block of size 4,176 alloc'd
==4058==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4058==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4EFD790: __dbc_put_pp (in /usr/lib/libdb-4.7.so)
==4058==    by 0x4064D7: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:167)
==4058==    by 0x402860: engine::insert(char*, char*) (engine.cpp:127)
==4058== 
==4058== 
==4058== HEAP SUMMARY:
==4058==     in use at exit: 0 bytes in 0 blocks
==4058==   total heap usage: 21,901 allocs, 21,901 frees, 4,935,589 bytes allocated
==4058== 
==4058== All heap blocks were freed -- no leaks are possible
==4058== 
==4058== For counts of detected and suppressed errors, rerun with: -v
==4058== Use --track-origins=yes to see where uninitialised values come from
==4058== ERROR SUMMARY: 594 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==4061== Memcheck, a memory error detector
==4061== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4061== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4061== Command: ./test ../../testfiles/1/ext_020.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==4061== 
==4061== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4061==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4061==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4061==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4061==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4061==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4061==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4061==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4061==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4061==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4061==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4061==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4061==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4061==  Address 0x5f05be6 is 118 bytes inside a block of size 4,176 alloc'd
==4061==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4061==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4061==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4061==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4061==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4061==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4061==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4061==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4061==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4061==    by 0x4EFD790: __dbc_put_pp (in /usr/lib/libdb-4.7.so)
==4061==    by 0x4064D7: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:167)
==4061==    by 0x402860: engine::insert(char*, char*) (engine.cpp:127)
==4061== 
==4061== 
==4061== HEAP SUMMARY:
==4061==     in use at exit: 0 bytes in 0 blocks
==4061==   total heap usage: 1,016 allocs, 1,016 frees, 982,660 bytes allocated
==4061== 
==4061== All heap blocks were freed -- no leaks are possible
==4061== 
==4061== For counts of detected and suppressed errors, rerun with: -v
==4061== Use --track-origins=yes to see where uninitialised values come from
==4061== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==4064== Memcheck, a memory error detector
==4064== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4064== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4064== Command: ./test ../../testfiles/2/ext_060.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==4064== 
==4064== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4064==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4064==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4EFD790: __dbc_put_pp (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4064D7: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:167)
==4064==  Address 0x800fa3e is 606 bytes inside a block of size 4,176 alloc'd
==4064==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4064==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4EFD790: __dbc_put_pp (in /usr/lib/libdb-4.7.so)
==4064==    by 0x4064D7: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:167)
==4064==    by 0x402860: engine::insert(char*, char*) (engine.cpp:127)
==4064== 
==4064== 
==4064== HEAP SUMMARY:
==4064==     in use at exit: 0 bytes in 0 blocks
==4064==   total heap usage: 5,074,940 allocs, 5,074,940 frees, 135,756,004 bytes allocated
==4064== 
==4064== All heap blocks were freed -- no leaks are possible
==4064== 
==4064== For counts of detected and suppressed errors, rerun with: -v
==4064== Use --track-origins=yes to see where uninitialised values come from
==4064== ERROR SUMMARY: 83 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --use-cursors=1 --duplicate-first=1 --reopen=1    
==4069== Memcheck, a memory error detector
==4069== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4069== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4069== Command: ./test ../../testfiles/2/blb-001.tst --use-cursors=1 --duplicate-first=1 --reopen=1
==4069== 
==4069== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4069==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4069==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4069==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4069==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4069==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4069==  Address 0x5f00d30 is 3,568 bytes inside a block of size 4,176 alloc'd
==4069==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4069==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4EFD790: __dbc_put_pp (in /usr/lib/libdb-4.7.so)
==4069==    by 0x4064D7: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:167)
==4069== 
==4069== 
==4069== HEAP SUMMARY:
==4069==     in use at exit: 0 bytes in 0 blocks
==4069==   total heap usage: 362 allocs, 362 frees, 203,446,471 bytes allocated
==4069== 
==4069== All heap blocks were freed -- no leaks are possible
==4069== 
==4069== For counts of detected and suppressed errors, rerun with: -v
==4069== Use --track-origins=yes to see where uninitialised values come from
==4069== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --inmemorydb=1    
==4077== Memcheck, a memory error detector
==4077== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4077== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4077== Command: ./test ../../testfiles/1/45.tst --inmemorydb=1
==4077== 
==4077== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4077==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4077==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4077==  Address 0x5f48d12 is 530 bytes inside a block of size 8,272 alloc'd
==4077==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4077==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4077==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4077==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4077== 
==4077== 
==4077== HEAP SUMMARY:
==4077==     in use at exit: 0 bytes in 0 blocks
==4077==   total heap usage: 8,468 allocs, 8,468 frees, 3,151,885 bytes allocated
==4077== 
==4077== All heap blocks were freed -- no leaks are possible
==4077== 
==4077== For counts of detected and suppressed errors, rerun with: -v
==4077== Use --track-origins=yes to see where uninitialised values come from
==4077== ERROR SUMMARY: 51 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --inmemorydb=1    
==4080== Memcheck, a memory error detector
==4080== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4080== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4080== Command: ./test ../../testfiles/1/220.tst --inmemorydb=1
==4080== 
==4080== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4080==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4080==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4080==  Address 0x5f4232a is 186 bytes inside a block of size 8,272 alloc'd
==4080==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4080==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4080==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4080==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4080== 
==4080== 
==4080== HEAP SUMMARY:
==4080==     in use at exit: 0 bytes in 0 blocks
==4080==   total heap usage: 5,781 allocs, 5,781 frees, 2,754,334 bytes allocated
==4080== 
==4080== All heap blocks were freed -- no leaks are possible
==4080== 
==4080== For counts of detected and suppressed errors, rerun with: -v
==4080== Use --track-origins=yes to see where uninitialised values come from
==4080== ERROR SUMMARY: 35 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --inmemorydb=1    
==4083== Memcheck, a memory error detector
==4083== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4083== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4083== Command: ./test ../../testfiles/1/ext_020.tst --inmemorydb=1
==4083== 
==4083== 
==4083== HEAP SUMMARY:
==4083==     in use at exit: 0 bytes in 0 blocks
==4083==   total heap usage: 817 allocs, 817 frees, 686,415 bytes allocated
==4083== 
==4083== All heap blocks were freed -- no leaks are possible
==4083== 
==4083== For counts of detected and suppressed errors, rerun with: -v
==4083== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --inmemorydb=1    
==4086== Memcheck, a memory error detector
==4086== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4086== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4086== Command: ./test ../../testfiles/2/ext_060.tst --inmemorydb=1
==4086== 
==4086== 
==4086== HEAP SUMMARY:
==4086==     in use at exit: 0 bytes in 0 blocks
==4086==   total heap usage: 924,099 allocs, 924,099 frees, 24,653,391 bytes allocated
==4086== 
==4086== All heap blocks were freed -- no leaks are possible
==4086== 
==4086== For counts of detected and suppressed errors, rerun with: -v
==4086== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --inmemorydb=1    
==4089== Memcheck, a memory error detector
==4089== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4089== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4089== Command: ./test ../../testfiles/2/blb-001.tst --inmemorydb=1
==4089== 
==4089== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4089==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4089==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4089==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4089==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4089==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4089==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4089==    by 0x4F07938: __db_goff (in /usr/lib/libdb-4.7.so)
==4089==    by 0x4F1232B: __db_ret (in /usr/lib/libdb-4.7.so)
==4089==    by 0x4EF5695: __dbc_get (in /usr/lib/libdb-4.7.so)
==4089==    by 0x4EFE0EC: __dbc_get_pp (in /usr/lib/libdb-4.7.so)
==4089==    by 0x406CDB: berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:318)
==4089==    by 0x402F18: engine::fullcheck() (engine.cpp:259)
==4089==  Address 0x5f03e60 is 592 bytes inside a block of size 8,272 alloc'd
==4089==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4089==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4089==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4089==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4089==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4089==    by 0x4E53C59: __bam_new_file (in /usr/lib/libdb-4.7.so)
==4089==    by 0x4F06A0D: __db_new_file (in /usr/lib/libdb-4.7.so)
==4089==    by 0x4F070F4: __db_open (in /usr/lib/libdb-4.7.so)
==4089==    by 0x4EFF855: __db_open_pp (in /usr/lib/libdb-4.7.so)
==4089==    by 0x405ECB: berkeleydb::create() (berkeleydb.cpp:65)
==4089==    by 0x402514: engine::create(bool) (engine.cpp:42)
==4089==    by 0x401D36: parser::process_line(char*) (parser.cpp:69)
==4089== 
==4089== 
==4089== HEAP SUMMARY:
==4089==     in use at exit: 0 bytes in 0 blocks
==4089==   total heap usage: 133 allocs, 133 frees, 171,924,381 bytes allocated
==4089== 
==4089== All heap blocks were freed -- no leaks are possible
==4089== 
==4089== For counts of detected and suppressed errors, rerun with: -v
==4089== Use --track-origins=yes to see where uninitialised values come from
==4089== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --inmemorydb=1 --duplicate=1    
==4093== Memcheck, a memory error detector
==4093== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4093== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4093== Command: ./test ../../testfiles/1/45.tst --inmemorydb=1 --duplicate=1
==4093== 
==4093== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4093==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4093==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4093==  Address 0x5f48d12 is 530 bytes inside a block of size 8,272 alloc'd
==4093==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4093==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4093==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4093==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4093== 
==4093== 
==4093== HEAP SUMMARY:
==4093==     in use at exit: 0 bytes in 0 blocks
==4093==   total heap usage: 8,468 allocs, 8,468 frees, 3,151,885 bytes allocated
==4093== 
==4093== All heap blocks were freed -- no leaks are possible
==4093== 
==4093== For counts of detected and suppressed errors, rerun with: -v
==4093== Use --track-origins=yes to see where uninitialised values come from
==4093== ERROR SUMMARY: 51 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --inmemorydb=1 --duplicate=1    
==4096== Memcheck, a memory error detector
==4096== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4096== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4096== Command: ./test ../../testfiles/1/220.tst --inmemorydb=1 --duplicate=1
==4096== 
==4096== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4096==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4096==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4096==  Address 0x5f4cb0e is 174 bytes inside a block of size 8,272 alloc'd
==4096==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4096==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4096==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4096==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4096== 
==4096== 
==4096== HEAP SUMMARY:
==4096==     in use at exit: 0 bytes in 0 blocks
==4096==   total heap usage: 9,627 allocs, 9,627 frees, 5,093,091 bytes allocated
==4096== 
==4096== All heap blocks were freed -- no leaks are possible
==4096== 
==4096== For counts of detected and suppressed errors, rerun with: -v
==4096== Use --track-origins=yes to see where uninitialised values come from
==4096== ERROR SUMMARY: 146 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --inmemorydb=1 --duplicate=1    
==4099== Memcheck, a memory error detector
==4099== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4099== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4099== Command: ./test ../../testfiles/1/ext_020.tst --inmemorydb=1 --duplicate=1
==4099== 
==4099== 
==4099== HEAP SUMMARY:
==4099==     in use at exit: 0 bytes in 0 blocks
==4099==   total heap usage: 817 allocs, 817 frees, 686,415 bytes allocated
==4099== 
==4099== All heap blocks were freed -- no leaks are possible
==4099== 
==4099== For counts of detected and suppressed errors, rerun with: -v
==4099== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --inmemorydb=1 --duplicate=1    
==4102== Memcheck, a memory error detector
==4102== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4102== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4102== Command: ./test ../../testfiles/2/ext_060.tst --inmemorydb=1 --duplicate=1
==4102== 
==4102== 
==4102== HEAP SUMMARY:
==4102==     in use at exit: 0 bytes in 0 blocks
==4102==   total heap usage: 1,432,561 allocs, 1,432,561 frees, 39,511,957 bytes allocated
==4102== 
==4102== All heap blocks were freed -- no leaks are possible
==4102== 
==4102== For counts of detected and suppressed errors, rerun with: -v
==4102== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --inmemorydb=1 --duplicate=1    
==4105== Memcheck, a memory error detector
==4105== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4105== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4105== Command: ./test ../../testfiles/2/blb-001.tst --inmemorydb=1 --duplicate=1
==4105== 
==4105== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4105==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4105==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4105==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4105==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4105==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4105==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4105==    by 0x4F07938: __db_goff (in /usr/lib/libdb-4.7.so)
==4105==    by 0x4F1232B: __db_ret (in /usr/lib/libdb-4.7.so)
==4105==    by 0x4EF5695: __dbc_get (in /usr/lib/libdb-4.7.so)
==4105==    by 0x4EFE0EC: __dbc_get_pp (in /usr/lib/libdb-4.7.so)
==4105==    by 0x406CDB: berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:318)
==4105==    by 0x402F18: engine::fullcheck() (engine.cpp:259)
==4105==  Address 0x5f03e60 is 592 bytes inside a block of size 8,272 alloc'd
==4105==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4105==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4105==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4105==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4105==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4105==    by 0x4E53C59: __bam_new_file (in /usr/lib/libdb-4.7.so)
==4105==    by 0x4F06A0D: __db_new_file (in /usr/lib/libdb-4.7.so)
==4105==    by 0x4F070F4: __db_open (in /usr/lib/libdb-4.7.so)
==4105==    by 0x4EFF855: __db_open_pp (in /usr/lib/libdb-4.7.so)
==4105==    by 0x405ECB: berkeleydb::create() (berkeleydb.cpp:65)
==4105==    by 0x402514: engine::create(bool) (engine.cpp:42)
==4105==    by 0x401D36: parser::process_line(char*) (parser.cpp:69)
==4105== 
==4105== 
==4105== HEAP SUMMARY:
==4105==     in use at exit: 0 bytes in 0 blocks
==4105==   total heap usage: 138 allocs, 138 frees, 171,925,253 bytes allocated
==4105== 
==4105== All heap blocks were freed -- no leaks are possible
==4105== 
==4105== For counts of detected and suppressed errors, rerun with: -v
==4105== Use --track-origins=yes to see where uninitialised values come from
==4105== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==4109== Memcheck, a memory error detector
==4109== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4109== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4109== Command: ./test ../../testfiles/1/45.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==4109== 
==4109== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4109==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4109==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4109==  Address 0x5f48d12 is 530 bytes inside a block of size 8,272 alloc'd
==4109==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4109==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4109==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4109==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4109== 
==4109== 
==4109== HEAP SUMMARY:
==4109==     in use at exit: 0 bytes in 0 blocks
==4109==   total heap usage: 8,468 allocs, 8,468 frees, 3,151,885 bytes allocated
==4109== 
==4109== All heap blocks were freed -- no leaks are possible
==4109== 
==4109== For counts of detected and suppressed errors, rerun with: -v
==4109== Use --track-origins=yes to see where uninitialised values come from
==4109== ERROR SUMMARY: 51 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==4112== Memcheck, a memory error detector
==4112== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4112== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4112== Command: ./test ../../testfiles/1/220.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==4112== 
==4112== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4112==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4112==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4112==  Address 0x5f4cb0e is 174 bytes inside a block of size 8,272 alloc'd
==4112==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4112==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4112==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4112==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4112== 
==4112== 
==4112== HEAP SUMMARY:
==4112==     in use at exit: 0 bytes in 0 blocks
==4112==   total heap usage: 9,672 allocs, 9,672 frees, 5,130,868 bytes allocated
==4112== 
==4112== All heap blocks were freed -- no leaks are possible
==4112== 
==4112== For counts of detected and suppressed errors, rerun with: -v
==4112== Use --track-origins=yes to see where uninitialised values come from
==4112== ERROR SUMMARY: 146 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==4115== Memcheck, a memory error detector
==4115== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4115== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4115== Command: ./test ../../testfiles/1/ext_020.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==4115== 
==4115== 
==4115== HEAP SUMMARY:
==4115==     in use at exit: 0 bytes in 0 blocks
==4115==   total heap usage: 817 allocs, 817 frees, 686,415 bytes allocated
==4115== 
==4115== All heap blocks were freed -- no leaks are possible
==4115== 
==4115== For counts of detected and suppressed errors, rerun with: -v
==4115== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==4118== Memcheck, a memory error detector
==4118== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4118== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4118== Command: ./test ../../testfiles/2/ext_060.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==4118== 
==4118== 
==4118== HEAP SUMMARY:
==4118==     in use at exit: 0 bytes in 0 blocks
==4118==   total heap usage: 1,432,560 allocs, 1,432,560 frees, 39,511,924 bytes allocated
==4118== 
==4118== All heap blocks were freed -- no leaks are possible
==4118== 
==4118== For counts of detected and suppressed errors, rerun with: -v
==4118== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1    
==4121== Memcheck, a memory error detector
==4121== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4121== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4121== Command: ./test ../../testfiles/2/blb-001.tst --inmemorydb=1 --duplicate=1 --sort-duplicates=1
==4121== 
==4121== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4121==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4121==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4121==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4121==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4121==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4121==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4121==    by 0x4F07938: __db_goff (in /usr/lib/libdb-4.7.so)
==4121==    by 0x4F1232B: __db_ret (in /usr/lib/libdb-4.7.so)
==4121==    by 0x4EF5695: __dbc_get (in /usr/lib/libdb-4.7.so)
==4121==    by 0x4EFE0EC: __dbc_get_pp (in /usr/lib/libdb-4.7.so)
==4121==    by 0x406CDB: berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:318)
==4121==    by 0x402F18: engine::fullcheck() (engine.cpp:259)
==4121==  Address 0x5f03e60 is 592 bytes inside a block of size 8,272 alloc'd
==4121==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4121==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4121==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4121==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4121==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4121==    by 0x4E53C59: __bam_new_file (in /usr/lib/libdb-4.7.so)
==4121==    by 0x4F06A0D: __db_new_file (in /usr/lib/libdb-4.7.so)
==4121==    by 0x4F070F4: __db_open (in /usr/lib/libdb-4.7.so)
==4121==    by 0x4EFF855: __db_open_pp (in /usr/lib/libdb-4.7.so)
==4121==    by 0x405ECB: berkeleydb::create() (berkeleydb.cpp:65)
==4121==    by 0x402514: engine::create(bool) (engine.cpp:42)
==4121==    by 0x401D36: parser::process_line(char*) (parser.cpp:69)
==4121== 
==4121== 
==4121== HEAP SUMMARY:
==4121==     in use at exit: 0 bytes in 0 blocks
==4121==   total heap usage: 138 allocs, 138 frees, 171,925,253 bytes allocated
==4121== 
==4121== All heap blocks were freed -- no leaks are possible
==4121== 
==4121== For counts of detected and suppressed errors, rerun with: -v
==4121== Use --track-origins=yes to see where uninitialised values come from
==4121== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --overwrite=1 --inmemorydb=1    
==4125== Memcheck, a memory error detector
==4125== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4125== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4125== Command: ./test ../../testfiles/1/45.tst --overwrite=1 --inmemorydb=1
==4125== 
==4125== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4125==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4125==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4125==  Address 0x5f48d12 is 530 bytes inside a block of size 8,272 alloc'd
==4125==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4125==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4125==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4125==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4125== 
==4125== 
==4125== HEAP SUMMARY:
==4125==     in use at exit: 0 bytes in 0 blocks
==4125==   total heap usage: 8,468 allocs, 8,468 frees, 3,151,885 bytes allocated
==4125== 
==4125== All heap blocks were freed -- no leaks are possible
==4125== 
==4125== For counts of detected and suppressed errors, rerun with: -v
==4125== Use --track-origins=yes to see where uninitialised values come from
==4125== ERROR SUMMARY: 51 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --overwrite=1 --inmemorydb=1    
==4130== Memcheck, a memory error detector
==4130== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4130== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4130== Command: ./test ../../testfiles/1/220.tst --overwrite=1 --inmemorydb=1
==4130== 
==4130== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4130==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4130==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4130==  Address 0x5f41d96 is 182 bytes inside a block of size 8,272 alloc'd
==4130==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4130==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4130==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4130==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4130== 
==4130== 
==4130== HEAP SUMMARY:
==4130==     in use at exit: 0 bytes in 0 blocks
==4130==   total heap usage: 6,833 allocs, 6,833 frees, 3,678,898 bytes allocated
==4130== 
==4130== All heap blocks were freed -- no leaks are possible
==4130== 
==4130== For counts of detected and suppressed errors, rerun with: -v
==4130== Use --track-origins=yes to see where uninitialised values come from
==4130== ERROR SUMMARY: 36 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --overwrite=1 --inmemorydb=1    
==4133== Memcheck, a memory error detector
==4133== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4133== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4133== Command: ./test ../../testfiles/1/ext_020.tst --overwrite=1 --inmemorydb=1
==4133== 
==4133== 
==4133== HEAP SUMMARY:
==4133==     in use at exit: 0 bytes in 0 blocks
==4133==   total heap usage: 817 allocs, 817 frees, 686,415 bytes allocated
==4133== 
==4133== All heap blocks were freed -- no leaks are possible
==4133== 
==4133== For counts of detected and suppressed errors, rerun with: -v
==4133== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --overwrite=1 --inmemorydb=1    
==4136== Memcheck, a memory error detector
==4136== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4136== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4136== Command: ./test ../../testfiles/2/ext_060.tst --overwrite=1 --inmemorydb=1
==4136== 
==4136== 
==4136== HEAP SUMMARY:
==4136==     in use at exit: 0 bytes in 0 blocks
==4136==   total heap usage: 922,843 allocs, 922,843 frees, 24,972,471 bytes allocated
==4136== 
==4136== All heap blocks were freed -- no leaks are possible
==4136== 
==4136== For counts of detected and suppressed errors, rerun with: -v
==4136== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --overwrite=1 --inmemorydb=1    
==4139== Memcheck, a memory error detector
==4139== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4139== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4139== Command: ./test ../../testfiles/2/blb-001.tst --overwrite=1 --inmemorydb=1
==4139== 
==4139== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4139==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4139==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4139==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4139==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4139==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4139==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4139==    by 0x4F07938: __db_goff (in /usr/lib/libdb-4.7.so)
==4139==    by 0x4F1232B: __db_ret (in /usr/lib/libdb-4.7.so)
==4139==    by 0x4EF5695: __dbc_get (in /usr/lib/libdb-4.7.so)
==4139==    by 0x4EFE0EC: __dbc_get_pp (in /usr/lib/libdb-4.7.so)
==4139==    by 0x406CDB: berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:318)
==4139==    by 0x402F18: engine::fullcheck() (engine.cpp:259)
==4139==  Address 0x5f03e60 is 592 bytes inside a block of size 8,272 alloc'd
==4139==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4139==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4139==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4139==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4139==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4139==    by 0x4E53C59: __bam_new_file (in /usr/lib/libdb-4.7.so)
==4139==    by 0x4F06A0D: __db_new_file (in /usr/lib/libdb-4.7.so)
==4139==    by 0x4F070F4: __db_open (in /usr/lib/libdb-4.7.so)
==4139==    by 0x4EFF855: __db_open_pp (in /usr/lib/libdb-4.7.so)
==4139==    by 0x405ECB: berkeleydb::create() (berkeleydb.cpp:65)
==4139==    by 0x402514: engine::create(bool) (engine.cpp:42)
==4139==    by 0x401D36: parser::process_line(char*) (parser.cpp:69)
==4139== 
==4139== 
==4139== HEAP SUMMARY:
==4139==     in use at exit: 0 bytes in 0 blocks
==4139==   total heap usage: 138 allocs, 138 frees, 93,059,529 bytes allocated
==4139== 
==4139== All heap blocks were freed -- no leaks are possible
==4139== 
==4139== For counts of detected and suppressed errors, rerun with: -v
==4139== Use --track-origins=yes to see where uninitialised values come from
==4139== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --reopen=1 --use-cursors=1    
==4143== Memcheck, a memory error detector
==4143== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4143== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4143== Command: ./test ../../testfiles/1/45.tst --reopen=1 --use-cursors=1
==4143== 
==4143== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4143==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4143==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4143==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4143==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4143==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4143==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4143==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4143==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4143==    by 0x40339B: engine::flush() (engine.cpp:350)
==4143==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4143==    by 0x401C13: parser::process() (parser.cpp:44)
==4143==    by 0x403FC0: main (main.cpp:467)
==4143==  Address 0x5f02a0e is 206 bytes inside a block of size 4,176 alloc'd
==4143==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4143==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4143==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4143==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4143==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4143==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4143==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4143==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4143==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4143==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4143==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4143==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4143== 
==4143== 
==4143== HEAP SUMMARY:
==4143==     in use at exit: 0 bytes in 0 blocks
==4143==   total heap usage: 3,923 allocs, 3,923 frees, 2,765,652 bytes allocated
==4143== 
==4143== All heap blocks were freed -- no leaks are possible
==4143== 
==4143== For counts of detected and suppressed errors, rerun with: -v
==4143== Use --track-origins=yes to see where uninitialised values come from
==4143== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --reopen=1 --use-cursors=1    
==4146== Memcheck, a memory error detector
==4146== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4146== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4146== Command: ./test ../../testfiles/1/220.tst --reopen=1 --use-cursors=1
==4146== 
==4146== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4146==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4146==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4146==  Address 0x5f8c21e is 142 bytes inside a block of size 4,176 alloc'd
==4146==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4146==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4146==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4146==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4146== 
==4146== 
==4146== HEAP SUMMARY:
==4146==     in use at exit: 0 bytes in 0 blocks
==4146==   total heap usage: 7,745 allocs, 7,745 frees, 2,442,239 bytes allocated
==4146== 
==4146== All heap blocks were freed -- no leaks are possible
==4146== 
==4146== For counts of detected and suppressed errors, rerun with: -v
==4146== Use --track-origins=yes to see where uninitialised values come from
==4146== ERROR SUMMARY: 91 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --reopen=1 --use-cursors=1    
==4149== Memcheck, a memory error detector
==4149== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4149== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4149== Command: ./test ../../testfiles/1/ext_020.tst --reopen=1 --use-cursors=1
==4149== 
==4149== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4149==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4149==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4149==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4149==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4149==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4149==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4149==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4149==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4149==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4149==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4149==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4149==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4149==  Address 0x5f05be6 is 118 bytes inside a block of size 4,176 alloc'd
==4149==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4149==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4149==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4149==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4149==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4149==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4149==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4149==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4149==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4149==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4149==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4149==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4149== 
==4149== 
==4149== HEAP SUMMARY:
==4149==     in use at exit: 0 bytes in 0 blocks
==4149==   total heap usage: 1,016 allocs, 1,016 frees, 982,660 bytes allocated
==4149== 
==4149== All heap blocks were freed -- no leaks are possible
==4149== 
==4149== For counts of detected and suppressed errors, rerun with: -v
==4149== Use --track-origins=yes to see where uninitialised values come from
==4149== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --reopen=1 --use-cursors=1    
==4152== Memcheck, a memory error detector
==4152== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4152== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4152== Command: ./test ../../testfiles/2/ext_060.tst --reopen=1 --use-cursors=1
==4152== 
==4152== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4152==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4152==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4152==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4152==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4152==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4152==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4152==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4152==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4152==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4152==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4152==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4152==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4152==  Address 0x5f1b04a is 410 bytes inside a block of size 4,176 alloc'd
==4152==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4152==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4152==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4152==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4152==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4152==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4152==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4152==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4152==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4152==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4152==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4152==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4152== 
==4152== 
==4152== HEAP SUMMARY:
==4152==     in use at exit: 0 bytes in 0 blocks
==4152==   total heap usage: 941,696 allocs, 941,696 frees, 25,177,518 bytes allocated
==4152== 
==4152== All heap blocks were freed -- no leaks are possible
==4152== 
==4152== For counts of detected and suppressed errors, rerun with: -v
==4152== Use --track-origins=yes to see where uninitialised values come from
==4152== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --reopen=1 --use-cursors=1    
==4155== Memcheck, a memory error detector
==4155== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4155== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4155== Command: ./test ../../testfiles/2/blb-001.tst --reopen=1 --use-cursors=1
==4155== 
==4155== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4155==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4155==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4155==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4155==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4155==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4155==  Address 0x5f00ec8 is 3,976 bytes inside a block of size 4,176 alloc'd
==4155==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4155==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4155==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4155== 
==4155== 
==4155== HEAP SUMMARY:
==4155==     in use at exit: 0 bytes in 0 blocks
==4155==   total heap usage: 356 allocs, 356 frees, 203,444,715 bytes allocated
==4155== 
==4155== All heap blocks were freed -- no leaks are possible
==4155== 
==4155== For counts of detected and suppressed errors, rerun with: -v
==4155== Use --track-origins=yes to see where uninitialised values come from
==4155== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --reopen=1 --use-cursors=1 --duplicate=1    
==4159== Memcheck, a memory error detector
==4159== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4159== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4159== Command: ./test ../../testfiles/1/45.tst --reopen=1 --use-cursors=1 --duplicate=1
==4159== 
==4159== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4159==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4159==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4159==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4159==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4159==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4159==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4159==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4159==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4159==    by 0x40339B: engine::flush() (engine.cpp:350)
==4159==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4159==    by 0x401C13: parser::process() (parser.cpp:44)
==4159==    by 0x403FC0: main (main.cpp:467)
==4159==  Address 0x5f02a0e is 206 bytes inside a block of size 4,176 alloc'd
==4159==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4159==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4159==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4159==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4159==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4159==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4159==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4159==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4159==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4159==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4159==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4159==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4159== 
==4159== 
==4159== HEAP SUMMARY:
==4159==     in use at exit: 0 bytes in 0 blocks
==4159==   total heap usage: 3,923 allocs, 3,923 frees, 2,765,652 bytes allocated
==4159== 
==4159== All heap blocks were freed -- no leaks are possible
==4159== 
==4159== For counts of detected and suppressed errors, rerun with: -v
==4159== Use --track-origins=yes to see where uninitialised values come from
==4159== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --reopen=1 --use-cursors=1 --duplicate=1    
==4162== Memcheck, a memory error detector
==4162== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4162== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4162== Command: ./test ../../testfiles/1/220.tst --reopen=1 --use-cursors=1 --duplicate=1
==4162== 
==4162== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4162==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4162==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4162==  Address 0x5f7a44e is 126 bytes inside a block of size 4,176 alloc'd
==4162==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4162==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4162==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4162==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4162== 
==4162== 
==4162== HEAP SUMMARY:
==4162==     in use at exit: 0 bytes in 0 blocks
==4162==   total heap usage: 23,626 allocs, 23,626 frees, 5,189,034 bytes allocated
==4162== 
==4162== All heap blocks were freed -- no leaks are possible
==4162== 
==4162== For counts of detected and suppressed errors, rerun with: -v
==4162== Use --track-origins=yes to see where uninitialised values come from
==4162== ERROR SUMMARY: 612 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --reopen=1 --use-cursors=1 --duplicate=1    
==4165== Memcheck, a memory error detector
==4165== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4165== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4165== Command: ./test ../../testfiles/1/ext_020.tst --reopen=1 --use-cursors=1 --duplicate=1
==4165== 
==4165== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4165==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4165==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4165==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4165==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4165==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4165==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4165==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4165==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4165==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4165==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4165==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4165==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4165==  Address 0x5f05be6 is 118 bytes inside a block of size 4,176 alloc'd
==4165==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4165==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4165==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4165==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4165==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4165==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4165==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4165==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4165==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4165==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4165==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4165==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4165== 
==4165== 
==4165== HEAP SUMMARY:
==4165==     in use at exit: 0 bytes in 0 blocks
==4165==   total heap usage: 1,016 allocs, 1,016 frees, 982,660 bytes allocated
==4165== 
==4165== All heap blocks were freed -- no leaks are possible
==4165== 
==4165== For counts of detected and suppressed errors, rerun with: -v
==4165== Use --track-origins=yes to see where uninitialised values come from
==4165== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --reopen=1 --use-cursors=1 --duplicate=1    
==4168== Memcheck, a memory error detector
==4168== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4168== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4168== Command: ./test ../../testfiles/2/ext_060.tst --reopen=1 --use-cursors=1 --duplicate=1
==4168== 
==4168== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4168==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4168==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4168==  Address 0x7f1a466 is 598 bytes inside a block of size 4,176 alloc'd
==4168==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4168==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4168==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4168==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4168== 
==4168== 
==4168== HEAP SUMMARY:
==4168==     in use at exit: 0 bytes in 0 blocks
==4168==   total heap usage: 5,074,941 allocs, 5,074,941 frees, 135,772,256 bytes allocated
==4168== 
==4168== All heap blocks were freed -- no leaks are possible
==4168== 
==4168== For counts of detected and suppressed errors, rerun with: -v
==4168== Use --track-origins=yes to see where uninitialised values come from
==4168== ERROR SUMMARY: 74 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --reopen=1 --use-cursors=1 --duplicate=1    
==4174== Memcheck, a memory error detector
==4174== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4174== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4174== Command: ./test ../../testfiles/2/blb-001.tst --reopen=1 --use-cursors=1 --duplicate=1
==4174== 
==4174== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4174==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4174==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4174==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4174==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4174==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4174==  Address 0x5f00d30 is 3,568 bytes inside a block of size 4,176 alloc'd
==4174==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4174==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4174==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4174== 
==4174== 
==4174== HEAP SUMMARY:
==4174==     in use at exit: 0 bytes in 0 blocks
==4174==   total heap usage: 358 allocs, 358 frees, 203,444,855 bytes allocated
==4174== 
==4174== All heap blocks were freed -- no leaks are possible
==4174== 
==4174== For counts of detected and suppressed errors, rerun with: -v
==4174== Use --track-origins=yes to see where uninitialised values come from
==4174== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --overwrite=1 --reopen=1 --use-cursors=1    
==4178== Memcheck, a memory error detector
==4178== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4178== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4178== Command: ./test ../../testfiles/1/45.tst --overwrite=1 --reopen=1 --use-cursors=1
==4178== 
==4178== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4178==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4178==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4178==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4178==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4178==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4178==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4178==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4178==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4178==    by 0x40339B: engine::flush() (engine.cpp:350)
==4178==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4178==    by 0x401C13: parser::process() (parser.cpp:44)
==4178==    by 0x403FC0: main (main.cpp:467)
==4178==  Address 0x5f02a0e is 206 bytes inside a block of size 4,176 alloc'd
==4178==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4178==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4178==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4178==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4178==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4178==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4178==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4178==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4178==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4178==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4178==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4178==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4178== 
==4178== 
==4178== HEAP SUMMARY:
==4178==     in use at exit: 0 bytes in 0 blocks
==4178==   total heap usage: 3,923 allocs, 3,923 frees, 2,765,652 bytes allocated
==4178== 
==4178== All heap blocks were freed -- no leaks are possible
==4178== 
==4178== For counts of detected and suppressed errors, rerun with: -v
==4178== Use --track-origins=yes to see where uninitialised values come from
==4178== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --overwrite=1 --reopen=1 --use-cursors=1    
==4181== Memcheck, a memory error detector
==4181== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4181== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4181== Command: ./test ../../testfiles/1/220.tst --overwrite=1 --reopen=1 --use-cursors=1
==4181== 
==4181== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4181==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4181==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4181==  Address 0x5f8880a is 138 bytes inside a block of size 4,176 alloc'd
==4181==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4181==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4181==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4181==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4181== 
==4181== 
==4181== HEAP SUMMARY:
==4181==     in use at exit: 0 bytes in 0 blocks
==4181==   total heap usage: 6,797 allocs, 6,797 frees, 2,624,794 bytes allocated
==4181== 
==4181== All heap blocks were freed -- no leaks are possible
==4181== 
==4181== For counts of detected and suppressed errors, rerun with: -v
==4181== Use --track-origins=yes to see where uninitialised values come from
==4181== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --overwrite=1 --reopen=1 --use-cursors=1    
==4184== Memcheck, a memory error detector
==4184== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4184== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4184== Command: ./test ../../testfiles/1/ext_020.tst --overwrite=1 --reopen=1 --use-cursors=1
==4184== 
==4184== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4184==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4184==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4184==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4184==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4184==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4184==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4184==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4184==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4184==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4184==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4184==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4184==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4184==  Address 0x5f05be6 is 118 bytes inside a block of size 4,176 alloc'd
==4184==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4184==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4184==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4184==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4184==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4184==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4184==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4184==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4184==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4184==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4184==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4184==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4184== 
==4184== 
==4184== HEAP SUMMARY:
==4184==     in use at exit: 0 bytes in 0 blocks
==4184==   total heap usage: 1,016 allocs, 1,016 frees, 982,660 bytes allocated
==4184== 
==4184== All heap blocks were freed -- no leaks are possible
==4184== 
==4184== For counts of detected and suppressed errors, rerun with: -v
==4184== Use --track-origins=yes to see where uninitialised values come from
==4184== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --overwrite=1 --reopen=1 --use-cursors=1    
==4187== Memcheck, a memory error detector
==4187== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4187== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4187== Command: ./test ../../testfiles/2/ext_060.tst --overwrite=1 --reopen=1 --use-cursors=1
==4187== 
==4187== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4187==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4187==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4187==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4187==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4187==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4187==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4187==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4187==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4187==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4187==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4187==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4187==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4187==  Address 0x5f1b04e is 414 bytes inside a block of size 4,176 alloc'd
==4187==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4187==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4187==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4187==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4187==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4187==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4187==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4187==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4187==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4187==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4187==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4187==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4187== 
==4187== 
==4187== HEAP SUMMARY:
==4187==     in use at exit: 0 bytes in 0 blocks
==4187==   total heap usage: 929,443 allocs, 929,443 frees, 25,011,780 bytes allocated
==4187== 
==4187== All heap blocks were freed -- no leaks are possible
==4187== 
==4187== For counts of detected and suppressed errors, rerun with: -v
==4187== Use --track-origins=yes to see where uninitialised values come from
==4187== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --overwrite=1 --reopen=1 --use-cursors=1    
==4190== Memcheck, a memory error detector
==4190== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4190== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4190== Command: ./test ../../testfiles/2/blb-001.tst --overwrite=1 --reopen=1 --use-cursors=1
==4190== 
==4190== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4190==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4190==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4190==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4190==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4190==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4190==  Address 0x5f00d3c is 3,580 bytes inside a block of size 4,176 alloc'd
==4190==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4190==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4190==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4190== 
==4190== 
==4190== HEAP SUMMARY:
==4190==     in use at exit: 0 bytes in 0 blocks
==4190==   total heap usage: 342 allocs, 342 frees, 45,693,063 bytes allocated
==4190== 
==4190== All heap blocks were freed -- no leaks are possible
==4190== 
==4190== For counts of detected and suppressed errors, rerun with: -v
==4190== Use --track-origins=yes to see where uninitialised values come from
==4190== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --inmemorydb=1 --use-cursors=1    
==4194== Memcheck, a memory error detector
==4194== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4194== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4194== Command: ./test ../../testfiles/1/45.tst --inmemorydb=1 --use-cursors=1
==4194== 
==4194== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4194==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4194==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4194==  Address 0x5f4e0f2 is 530 bytes inside a block of size 8,272 alloc'd
==4194==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4194==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4194==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4194==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4194== 
==4194== 
==4194== HEAP SUMMARY:
==4194==     in use at exit: 0 bytes in 0 blocks
==4194==   total heap usage: 8,848 allocs, 8,848 frees, 3,157,205 bytes allocated
==4194== 
==4194== All heap blocks were freed -- no leaks are possible
==4194== 
==4194== For counts of detected and suppressed errors, rerun with: -v
==4194== Use --track-origins=yes to see where uninitialised values come from
==4194== ERROR SUMMARY: 51 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --inmemorydb=1 --use-cursors=1    
==4201== Memcheck, a memory error detector
==4201== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4201== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4201== Command: ./test ../../testfiles/1/220.tst --inmemorydb=1 --use-cursors=1
==4201== 
==4201== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4201==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4201==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4201==  Address 0x5f5039e is 190 bytes inside a block of size 8,272 alloc'd
==4201==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4201==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4201==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4201==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4201== 
==4201== 
==4201== HEAP SUMMARY:
==4201==     in use at exit: 0 bytes in 0 blocks
==4201==   total heap usage: 9,311 allocs, 9,311 frees, 2,836,907 bytes allocated
==4201== 
==4201== All heap blocks were freed -- no leaks are possible
==4201== 
==4201== For counts of detected and suppressed errors, rerun with: -v
==4201== Use --track-origins=yes to see where uninitialised values come from
==4201== ERROR SUMMARY: 36 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --inmemorydb=1 --use-cursors=1    
==4204== Memcheck, a memory error detector
==4204== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4204== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4204== Command: ./test ../../testfiles/1/ext_020.tst --inmemorydb=1 --use-cursors=1
==4204== 
==4204== 
==4204== HEAP SUMMARY:
==4204==     in use at exit: 0 bytes in 0 blocks
==4204==   total heap usage: 837 allocs, 837 frees, 692,297 bytes allocated
==4204== 
==4204== All heap blocks were freed -- no leaks are possible
==4204== 
==4204== For counts of detected and suppressed errors, rerun with: -v
==4204== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --inmemorydb=1 --use-cursors=1    
==4207== Memcheck, a memory error detector
==4207== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4207== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4207== Command: ./test ../../testfiles/2/ext_060.tst --inmemorydb=1 --use-cursors=1
==4207== 
==4207== 
==4207== HEAP SUMMARY:
==4207==     in use at exit: 0 bytes in 0 blocks
==4207==   total heap usage: 945,392 allocs, 945,392 frees, 25,125,204 bytes allocated
==4207== 
==4207== All heap blocks were freed -- no leaks are possible
==4207== 
==4207== For counts of detected and suppressed errors, rerun with: -v
==4207== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --inmemorydb=1 --use-cursors=1    
==4210== Memcheck, a memory error detector
==4210== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4210== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4210== Command: ./test ../../testfiles/2/blb-001.tst --inmemorydb=1 --use-cursors=1
==4210== 
==4210== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4210==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4210==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4210==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4210==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4210==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4210==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4210==    by 0x4F07938: __db_goff (in /usr/lib/libdb-4.7.so)
==4210==    by 0x4F1232B: __db_ret (in /usr/lib/libdb-4.7.so)
==4210==    by 0x4EF5695: __dbc_get (in /usr/lib/libdb-4.7.so)
==4210==    by 0x4EFE0EC: __dbc_get_pp (in /usr/lib/libdb-4.7.so)
==4210==    by 0x406CDB: berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:318)
==4210==    by 0x402F18: engine::fullcheck() (engine.cpp:259)
==4210==  Address 0x5f03e60 is 592 bytes inside a block of size 8,272 alloc'd
==4210==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4210==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4210==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4210==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4210==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4210==    by 0x4E53C59: __bam_new_file (in /usr/lib/libdb-4.7.so)
==4210==    by 0x4F06A0D: __db_new_file (in /usr/lib/libdb-4.7.so)
==4210==    by 0x4F070F4: __db_open (in /usr/lib/libdb-4.7.so)
==4210==    by 0x4EFF855: __db_open_pp (in /usr/lib/libdb-4.7.so)
==4210==    by 0x405ECB: berkeleydb::create() (berkeleydb.cpp:65)
==4210==    by 0x402514: engine::create(bool) (engine.cpp:42)
==4210==    by 0x401D36: parser::process_line(char*) (parser.cpp:69)
==4210== 
==4210== 
==4210== HEAP SUMMARY:
==4210==     in use at exit: 0 bytes in 0 blocks
==4210==   total heap usage: 133 allocs, 133 frees, 171,924,381 bytes allocated
==4210== 
==4210== All heap blocks were freed -- no leaks are possible
==4210== 
==4210== For counts of detected and suppressed errors, rerun with: -v
==4210== Use --track-origins=yes to see where uninitialised values come from
==4210== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==4214== Memcheck, a memory error detector
==4214== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4214== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4214== Command: ./test ../../testfiles/1/45.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==4214== 
==4214== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4214==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4214==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4214==  Address 0x5f4e0f2 is 530 bytes inside a block of size 8,272 alloc'd
==4214==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4214==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4214==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4214==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4214== 
==4214== 
==4214== HEAP SUMMARY:
==4214==     in use at exit: 0 bytes in 0 blocks
==4214==   total heap usage: 8,848 allocs, 8,848 frees, 3,157,205 bytes allocated
==4214== 
==4214== All heap blocks were freed -- no leaks are possible
==4214== 
==4214== For counts of detected and suppressed errors, rerun with: -v
==4214== Use --track-origins=yes to see where uninitialised values come from
==4214== ERROR SUMMARY: 51 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==4217== Memcheck, a memory error detector
==4217== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4217== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4217== Command: ./test ../../testfiles/1/220.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==4217== 
==4217== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4217==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4217==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4217==  Address 0x5f5069e is 190 bytes inside a block of size 8,272 alloc'd
==4217==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4217==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4217==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4217==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4217== 
==4217== 
==4217== HEAP SUMMARY:
==4217==     in use at exit: 0 bytes in 0 blocks
==4217==   total heap usage: 9,820 allocs, 9,820 frees, 3,713,655 bytes allocated
==4217== 
==4217== All heap blocks were freed -- no leaks are possible
==4217== 
==4217== For counts of detected and suppressed errors, rerun with: -v
==4217== Use --track-origins=yes to see where uninitialised values come from
==4217== ERROR SUMMARY: 36 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==4220== Memcheck, a memory error detector
==4220== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4220== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4220== Command: ./test ../../testfiles/1/ext_020.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==4220== 
==4220== 
==4220== HEAP SUMMARY:
==4220==     in use at exit: 0 bytes in 0 blocks
==4220==   total heap usage: 837 allocs, 837 frees, 692,297 bytes allocated
==4220== 
==4220== All heap blocks were freed -- no leaks are possible
==4220== 
==4220== For counts of detected and suppressed errors, rerun with: -v
==4220== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==4223== Memcheck, a memory error detector
==4223== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4223== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4223== Command: ./test ../../testfiles/2/ext_060.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==4223== 
==4223== 
==4223== HEAP SUMMARY:
==4223==     in use at exit: 0 bytes in 0 blocks
==4223==   total heap usage: 940,804 allocs, 940,804 frees, 25,413,992 bytes allocated
==4223== 
==4223== All heap blocks were freed -- no leaks are possible
==4223== 
==4223== For counts of detected and suppressed errors, rerun with: -v
==4223== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --overwrite=1 --inmemorydb=1 --use-cursors=1    
==4226== Memcheck, a memory error detector
==4226== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4226== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4226== Command: ./test ../../testfiles/2/blb-001.tst --overwrite=1 --inmemorydb=1 --use-cursors=1
==4226== 
==4226== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4226==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4226==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4226==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4226==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4226==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4226==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4226==    by 0x4F07938: __db_goff (in /usr/lib/libdb-4.7.so)
==4226==    by 0x4F1232B: __db_ret (in /usr/lib/libdb-4.7.so)
==4226==    by 0x4EF5695: __dbc_get (in /usr/lib/libdb-4.7.so)
==4226==    by 0x4EFE0EC: __dbc_get_pp (in /usr/lib/libdb-4.7.so)
==4226==    by 0x406CDB: berkeleydb::get_next(void*, ham_key_t*, ham_record_t*, int) (berkeleydb.cpp:318)
==4226==    by 0x402F18: engine::fullcheck() (engine.cpp:259)
==4226==  Address 0x5f03e60 is 592 bytes inside a block of size 8,272 alloc'd
==4226==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4226==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4226==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4226==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4226==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4226==    by 0x4E53C59: __bam_new_file (in /usr/lib/libdb-4.7.so)
==4226==    by 0x4F06A0D: __db_new_file (in /usr/lib/libdb-4.7.so)
==4226==    by 0x4F070F4: __db_open (in /usr/lib/libdb-4.7.so)
==4226==    by 0x4EFF855: __db_open_pp (in /usr/lib/libdb-4.7.so)
==4226==    by 0x405ECB: berkeleydb::create() (berkeleydb.cpp:65)
==4226==    by 0x402514: engine::create(bool) (engine.cpp:42)
==4226==    by 0x401D36: parser::process_line(char*) (parser.cpp:69)
==4226== 
==4226== 
==4226== HEAP SUMMARY:
==4226==     in use at exit: 0 bytes in 0 blocks
==4226==   total heap usage: 138 allocs, 138 frees, 93,059,529 bytes allocated
==4226== 
==4226== All heap blocks were freed -- no leaks are possible
==4226== 
==4226== For counts of detected and suppressed errors, rerun with: -v
==4226== Use --track-origins=yes to see where uninitialised values come from
==4226== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --fullcheck-find=1    
==4230== Memcheck, a memory error detector
==4230== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4230== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4230== Command: ./test ../../testfiles/1/45.tst --fullcheck-find=1
==4230== 
==4230== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4230==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4230==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4230==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4230==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4230==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4230==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4230==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4230==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4230==    by 0x40339B: engine::flush() (engine.cpp:350)
==4230==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4230==    by 0x401C13: parser::process() (parser.cpp:44)
==4230==    by 0x403FC0: main (main.cpp:467)
==4230==  Address 0x5f01ffe is 206 bytes inside a block of size 4,176 alloc'd
==4230==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4230==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4230==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4230==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4230==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4230==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4230==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4230==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4230==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4230==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4230==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4230==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4230== 
==4230== 
==4230== HEAP SUMMARY:
==4230==     in use at exit: 0 bytes in 0 blocks
==4230==   total heap usage: 3,549 allocs, 3,549 frees, 2,265,785 bytes allocated
==4230== 
==4230== All heap blocks were freed -- no leaks are possible
==4230== 
==4230== For counts of detected and suppressed errors, rerun with: -v
==4230== Use --track-origins=yes to see where uninitialised values come from
==4230== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --fullcheck-find=1    
==4233== Memcheck, a memory error detector
==4233== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4233== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4233== Command: ./test ../../testfiles/1/220.tst --fullcheck-find=1
==4233== 
==4233== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4233==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4233==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4233==  Address 0x5f81a1a is 138 bytes inside a block of size 4,176 alloc'd
==4233==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4233==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4233==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4233==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4233== 
==4233== 
==4233== HEAP SUMMARY:
==4233==     in use at exit: 0 bytes in 0 blocks
==4233==   total heap usage: 4,799 allocs, 4,799 frees, 1,948,581 bytes allocated
==4233== 
==4233== All heap blocks were freed -- no leaks are possible
==4233== 
==4233== For counts of detected and suppressed errors, rerun with: -v
==4233== Use --track-origins=yes to see where uninitialised values come from
==4233== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --fullcheck-find=1    
==4236== Memcheck, a memory error detector
==4236== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4236== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4236== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-find=1
==4236== 
==4236== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4236==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4236==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4236==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4236==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4236==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4236==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4236==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4236==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4236==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4236==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4236==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4236==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4236==  Address 0x5f06df6 is 118 bytes inside a block of size 4,176 alloc'd
==4236==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4236==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4236==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4236==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4236==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4236==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4236==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4236==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4236==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4236==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4236==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4236==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4236== 
==4236== 
==4236== HEAP SUMMARY:
==4236==     in use at exit: 0 bytes in 0 blocks
==4236==   total heap usage: 1,320 allocs, 1,320 frees, 849,499 bytes allocated
==4236== 
==4236== All heap blocks were freed -- no leaks are possible
==4236== 
==4236== For counts of detected and suppressed errors, rerun with: -v
==4236== Use --track-origins=yes to see where uninitialised values come from
==4236== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --fullcheck-find=1    
==4239== Memcheck, a memory error detector
==4239== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4239== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4239== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-find=1
==4239== 
==4239== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4239==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4239==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4239==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4239==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4239==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4239==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4239==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4239==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4239==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4239==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4239==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4239==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4239==  Address 0x5f2b42a is 410 bytes inside a block of size 4,176 alloc'd
==4239==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4239==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4239==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4239==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4239==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4239==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4239==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4239==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4239==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4239==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4239==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4239==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4239== 
==4239== 
==4239== HEAP SUMMARY:
==4239==     in use at exit: 0 bytes in 0 blocks
==4239==   total heap usage: 2,525,134 allocs, 2,525,134 frees, 66,568,098 bytes allocated
==4239== 
==4239== All heap blocks were freed -- no leaks are possible
==4239== 
==4239== For counts of detected and suppressed errors, rerun with: -v
==4239== Use --track-origins=yes to see where uninitialised values come from
==4239== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --fullcheck-find=1    
==4242== Memcheck, a memory error detector
==4242== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4242== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4242== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-find=1
==4242== 
==4242== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4242==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4242==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4242==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4242==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4242==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4242==  Address 0x5f00ec8 is 3,976 bytes inside a block of size 4,176 alloc'd
==4242==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4242==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4242==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4242== 
==4242== 
==4242== HEAP SUMMARY:
==4242==     in use at exit: 0 bytes in 0 blocks
==4242==   total heap usage: 224 allocs, 224 frees, 121,984,420 bytes allocated
==4242== 
==4242== All heap blocks were freed -- no leaks are possible
==4242== 
==4242== For counts of detected and suppressed errors, rerun with: -v
==4242== Use --track-origins=yes to see where uninitialised values come from
==4242== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --fullcheck-find=1 --duplicate=1    
==4246== Memcheck, a memory error detector
==4246== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4246== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4246== Command: ./test ../../testfiles/1/45.tst --fullcheck-find=1 --duplicate=1
==4246== 
==4246== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4246==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4246==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4246==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4246==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4246==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4246==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4246==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4246==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4246==    by 0x40339B: engine::flush() (engine.cpp:350)
==4246==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4246==    by 0x401C13: parser::process() (parser.cpp:44)
==4246==    by 0x403FC0: main (main.cpp:467)
==4246==  Address 0x5f01ffe is 206 bytes inside a block of size 4,176 alloc'd
==4246==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4246==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4246==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4246==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4246==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4246==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4246==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4246==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4246==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4246==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4246==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4246==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4246== 
==4246== 
==4246== HEAP SUMMARY:
==4246==     in use at exit: 0 bytes in 0 blocks
==4246==   total heap usage: 3,549 allocs, 3,549 frees, 2,265,785 bytes allocated
==4246== 
==4246== All heap blocks were freed -- no leaks are possible
==4246== 
==4246== For counts of detected and suppressed errors, rerun with: -v
==4246== Use --track-origins=yes to see where uninitialised values come from
==4246== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --fullcheck-find=1 --duplicate=1    
==4249== Memcheck, a memory error detector
==4249== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4249== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4249== Command: ./test ../../testfiles/1/220.tst --fullcheck-find=1 --duplicate=1
==4249== 
==4249== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4249==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4249==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4249==  Address 0x5f74c10 is 112 bytes inside a block of size 4,176 alloc'd
==4249==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4249==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4249==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4249==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4249== 
==4249== 
==4249== HEAP SUMMARY:
==4249==     in use at exit: 0 bytes in 0 blocks
==4249==   total heap usage: 6,341 allocs, 6,341 frees, 2,516,769 bytes allocated
==4249== 
==4249== All heap blocks were freed -- no leaks are possible
==4249== 
==4249== For counts of detected and suppressed errors, rerun with: -v
==4249== Use --track-origins=yes to see where uninitialised values come from
==4249== ERROR SUMMARY: 601 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --fullcheck-find=1 --duplicate=1    
==4252== Memcheck, a memory error detector
==4252== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4252== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4252== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-find=1 --duplicate=1
==4252== 
==4252== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4252==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4252==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4252==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4252==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4252==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4252==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4252==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4252==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4252==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4252==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4252==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4252==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4252==  Address 0x5f06df6 is 118 bytes inside a block of size 4,176 alloc'd
==4252==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4252==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4252==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4252==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4252==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4252==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4252==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4252==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4252==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4252==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4252==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4252==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4252== 
==4252== 
==4252== HEAP SUMMARY:
==4252==     in use at exit: 0 bytes in 0 blocks
==4252==   total heap usage: 1,320 allocs, 1,320 frees, 849,499 bytes allocated
==4252== 
==4252== All heap blocks were freed -- no leaks are possible
==4252== 
==4252== For counts of detected and suppressed errors, rerun with: -v
==4252== Use --track-origins=yes to see where uninitialised values come from
==4252== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --fullcheck-find=1 --duplicate=1    
==4255== Memcheck, a memory error detector
==4255== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4255== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4255== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-find=1 --duplicate=1
==4255== 
==4255== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4255==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4255==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4255==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4255==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4255==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4255==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4255==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4255==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4255==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4255==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4255==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4255==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4255==  Address 0x5f1d546 is 614 bytes inside a block of size 4,176 alloc'd
==4255==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4255==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4255==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4255==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4255==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4255==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4255==    by 0x4E619E2: __bam_split (in /usr/lib/libdb-4.7.so)
==4255==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4255==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4255==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4255==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4255==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4255== 
==4255== 
==4255== HEAP SUMMARY:
==4255==     in use at exit: 0 bytes in 0 blocks
==4255==   total heap usage: 2,528,472 allocs, 2,528,472 frees, 68,446,093 bytes allocated
==4255== 
==4255== All heap blocks were freed -- no leaks are possible
==4255== 
==4255== For counts of detected and suppressed errors, rerun with: -v
==4255== Use --track-origins=yes to see where uninitialised values come from
==4255== ERROR SUMMARY: 15 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --fullcheck-find=1 --duplicate=1    
==4258== Memcheck, a memory error detector
==4258== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4258== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4258== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-find=1 --duplicate=1
==4258== 
==4258== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4258==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4258==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4258==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4258==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4258==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4258==  Address 0x5f00d30 is 3,568 bytes inside a block of size 4,176 alloc'd
==4258==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4258==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4258==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4258== 
==4258== 
==4258== HEAP SUMMARY:
==4258==     in use at exit: 0 bytes in 0 blocks
==4258==   total heap usage: 227 allocs, 227 frees, 121,984,564 bytes allocated
==4258== 
==4258== All heap blocks were freed -- no leaks are possible
==4258== 
==4258== For counts of detected and suppressed errors, rerun with: -v
==4258== Use --track-origins=yes to see where uninitialised values come from
==4258== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --fullcheck-find=1 --useralloc=1    
==4262== Memcheck, a memory error detector
==4262== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4262== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4262== Command: ./test ../../testfiles/1/45.tst --fullcheck-find=1 --useralloc=1
==4262== 
==4262== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4262==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4262==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4262==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4262==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4262==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4262==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4262==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4262==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4262==    by 0x40339B: engine::flush() (engine.cpp:350)
==4262==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4262==    by 0x401C13: parser::process() (parser.cpp:44)
==4262==    by 0x403FC0: main (main.cpp:467)
==4262==  Address 0x9f01dce is 206 bytes inside a block of size 4,176 alloc'd
==4262==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4262==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4262==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4262==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4262==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4262==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4262==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4262==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4262==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4262==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4262==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4262==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4262== 
==4262== 
==4262== HEAP SUMMARY:
==4262==     in use at exit: 0 bytes in 0 blocks
==4262==   total heap usage: 3,546 allocs, 3,546 frees, 69,374,217 bytes allocated
==4262== 
==4262== All heap blocks were freed -- no leaks are possible
==4262== 
==4262== For counts of detected and suppressed errors, rerun with: -v
==4262== Use --track-origins=yes to see where uninitialised values come from
==4262== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --fullcheck-find=1 --useralloc=1    
==4265== Memcheck, a memory error detector
==4265== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4265== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4265== Command: ./test ../../testfiles/1/220.tst --fullcheck-find=1 --useralloc=1
==4265== 
==4265== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4265==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4265==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4265==  Address 0x9fb8b5a is 122 bytes inside a block of size 4,176 alloc'd
==4265==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4265==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4265==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4265==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4265== 
==4265== 
==4265== HEAP SUMMARY:
==4265==     in use at exit: 0 bytes in 0 blocks
==4265==   total heap usage: 4,791 allocs, 4,791 frees, 69,049,408 bytes allocated
==4265== 
==4265== All heap blocks were freed -- no leaks are possible
==4265== 
==4265== For counts of detected and suppressed errors, rerun with: -v
==4265== Use --track-origins=yes to see where uninitialised values come from
==4265== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --fullcheck-find=1 --useralloc=1    
==4270== Memcheck, a memory error detector
==4270== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4270== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4270== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-find=1 --useralloc=1
==4270== 
==4270== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4270==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4270==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4270==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4270==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4270==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4270==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4270==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4270==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4270==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4270==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4270==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4270==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4270==  Address 0x9f068e6 is 118 bytes inside a block of size 4,176 alloc'd
==4270==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4270==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4270==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4270==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4270==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4270==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4270==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4270==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4270==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4270==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4270==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4270==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4270== 
==4270== 
==4270== HEAP SUMMARY:
==4270==     in use at exit: 0 bytes in 0 blocks
==4270==   total heap usage: 1,319 allocs, 1,319 frees, 67,957,076 bytes allocated
==4270== 
==4270== All heap blocks were freed -- no leaks are possible
==4270== 
==4270== For counts of detected and suppressed errors, rerun with: -v
==4270== Use --track-origins=yes to see where uninitialised values come from
==4270== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --fullcheck-find=1 --useralloc=1    
==4273== Memcheck, a memory error detector
==4273== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4273== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4273== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-find=1 --useralloc=1
==4273== 
==4273== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4273==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4273==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4273==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4273==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4273==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4273==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4273==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4273==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4273==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4273==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4273==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4273==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4273==  Address 0x9f2b3ca is 410 bytes inside a block of size 4,176 alloc'd
==4273==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4273==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4273==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4273==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4273==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4273==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4273==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4273==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4273==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4273==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4273==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4273==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4273== 
==4273== 
==4273== HEAP SUMMARY:
==4273==     in use at exit: 0 bytes in 0 blocks
==4273==   total heap usage: 2,525,137 allocs, 2,525,137 frees, 133,677,059 bytes allocated
==4273== 
==4273== All heap blocks were freed -- no leaks are possible
==4273== 
==4273== For counts of detected and suppressed errors, rerun with: -v
==4273== Use --track-origins=yes to see where uninitialised values come from
==4273== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --fullcheck-find=1 --useralloc=1    
==4276== Memcheck, a memory error detector
==4276== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4276== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4276== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-find=1 --useralloc=1
==4276== 
==4276== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4276==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4276==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4276==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4276==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4276==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4276==  Address 0x9f00f58 is 3,976 bytes inside a block of size 4,176 alloc'd
==4276==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4276==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4276==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4276== 
==4276== 
==4276== HEAP SUMMARY:
==4276==     in use at exit: 0 bytes in 0 blocks
==4276==   total heap usage: 224 allocs, 224 frees, 148,607,524 bytes allocated
==4276== 
==4276== All heap blocks were freed -- no leaks are possible
==4276== 
==4276== For counts of detected and suppressed errors, rerun with: -v
==4276== Use --track-origins=yes to see where uninitialised values come from
==4276== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --fullcheck-backwards=1    
==4280== Memcheck, a memory error detector
==4280== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4280== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4280== Command: ./test ../../testfiles/1/45.tst --fullcheck-backwards=1
==4280== 
==4280== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4280==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4280==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4280==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4280==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4280==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4280==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4280==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4280==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4280==    by 0x40339B: engine::flush() (engine.cpp:350)
==4280==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4280==    by 0x401C13: parser::process() (parser.cpp:44)
==4280==    by 0x403FC0: main (main.cpp:467)
==4280==  Address 0x5f01c0e is 206 bytes inside a block of size 4,176 alloc'd
==4280==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4280==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4280==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4280==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4280==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4280==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4280==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4280==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4280==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4280==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4280==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4280==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4280== 
==4280== 
==4280== HEAP SUMMARY:
==4280==     in use at exit: 0 bytes in 0 blocks
==4280==   total heap usage: 3,350 allocs, 3,350 frees, 2,264,792 bytes allocated
==4280== 
==4280== All heap blocks were freed -- no leaks are possible
==4280== 
==4280== For counts of detected and suppressed errors, rerun with: -v
==4280== Use --track-origins=yes to see where uninitialised values come from
==4280== ERROR SUMMARY: 108 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --fullcheck-backwards=1    
==4283== Memcheck, a memory error detector
==4283== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4283== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4283== Command: ./test ../../testfiles/1/220.tst --fullcheck-backwards=1
==4283== 
==4283== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4283==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4283==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4283==  Address 0x5f86faa is 138 bytes inside a block of size 4,176 alloc'd
==4283==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4283==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4283==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4283==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4283== 
==4283== 
==4283== HEAP SUMMARY:
==4283==     in use at exit: 0 bytes in 0 blocks
==4283==   total heap usage: 4,055 allocs, 4,055 frees, 1,943,311 bytes allocated
==4283== 
==4283== All heap blocks were freed -- no leaks are possible
==4283== 
==4283== For counts of detected and suppressed errors, rerun with: -v
==4283== Use --track-origins=yes to see where uninitialised values come from
==4283== ERROR SUMMARY: 89 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --fullcheck-backwards=1    
==4286== Memcheck, a memory error detector
==4286== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4286== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4286== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-backwards=1
==4286== 
==4286== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4286==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4286==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4286==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4286==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4286==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4286==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4286==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4286==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4286==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4286==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4286==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4286==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4286==  Address 0x5f058f6 is 118 bytes inside a block of size 4,176 alloc'd
==4286==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4286==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4286==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4286==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4286==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4286==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4286==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4286==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4286==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4286==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4286==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4286==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4286== 
==4286== 
==4286== HEAP SUMMARY:
==4286==     in use at exit: 0 bytes in 0 blocks
==4286==   total heap usage: 831 allocs, 831 frees, 660,015 bytes allocated
==4286== 
==4286== All heap blocks were freed -- no leaks are possible
==4286== 
==4286== For counts of detected and suppressed errors, rerun with: -v
==4286== Use --track-origins=yes to see where uninitialised values come from
==4286== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --fullcheck-backwards=1    
==4289== Memcheck, a memory error detector
==4289== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4289== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4289== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-backwards=1
==4289== 
==4289== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4289==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4289==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4289==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4289==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4289==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4289==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4289==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4289==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4289==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4289==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4289==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4289==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4289==  Address 0x5f1bbca is 410 bytes inside a block of size 4,176 alloc'd
==4289==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4289==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4289==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4289==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4289==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4289==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4289==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4289==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4289==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4289==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4289==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4289==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4289== 
==4289== 
==4289== HEAP SUMMARY:
==4289==     in use at exit: 0 bytes in 0 blocks
==4289==   total heap usage: 919,990 allocs, 919,990 frees, 24,436,215 bytes allocated
==4289== 
==4289== All heap blocks were freed -- no leaks are possible
==4289== 
==4289== For counts of detected and suppressed errors, rerun with: -v
==4289== Use --track-origins=yes to see where uninitialised values come from
==4289== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --fullcheck-backwards=1    
==4292== Memcheck, a memory error detector
==4292== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4292== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4292== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-backwards=1
==4292== 
==4292== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4292==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4292==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4292==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4292==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4292==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4292==  Address 0x5f00ec8 is 3,976 bytes inside a block of size 4,176 alloc'd
==4292==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4292==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4292==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4292== 
==4292== 
==4292== HEAP SUMMARY:
==4292==     in use at exit: 0 bytes in 0 blocks
==4292==   total heap usage: 206 allocs, 206 frees, 121,984,348 bytes allocated
==4292== 
==4292== All heap blocks were freed -- no leaks are possible
==4292== 
==4292== For counts of detected and suppressed errors, rerun with: -v
==4292== Use --track-origins=yes to see where uninitialised values come from
==4292== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --fullcheck-backwards=1 --duplicate=1    
==4296== Memcheck, a memory error detector
==4296== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4296== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4296== Command: ./test ../../testfiles/1/45.tst --fullcheck-backwards=1 --duplicate=1
==4296== 
==4296== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4296==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4296==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4296==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4296==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4296==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4296==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4296==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4296==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4296==    by 0x40339B: engine::flush() (engine.cpp:350)
==4296==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4296==    by 0x401C13: parser::process() (parser.cpp:44)
==4296==    by 0x403FC0: main (main.cpp:467)
==4296==  Address 0x5f01c0e is 206 bytes inside a block of size 4,176 alloc'd
==4296==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4296==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4296==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4296==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4296==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4296==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4296==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4296==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4296==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4296==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4296==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4296==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4296== 
==4296== 
==4296== HEAP SUMMARY:
==4296==     in use at exit: 0 bytes in 0 blocks
==4296==   total heap usage: 3,350 allocs, 3,350 frees, 2,264,792 bytes allocated
==4296== 
==4296== All heap blocks were freed -- no leaks are possible
==4296== 
==4296== For counts of detected and suppressed errors, rerun with: -v
==4296== Use --track-origins=yes to see where uninitialised values come from
==4296== ERROR SUMMARY: 108 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --fullcheck-backwards=1 --duplicate=1    
==4300== Memcheck, a memory error detector
==4300== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4300== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4300== Command: ./test ../../testfiles/1/220.tst --fullcheck-backwards=1 --duplicate=1
==4300== 
==4300== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4300==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4300==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4E5572B: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4300==  Address 0x5f75085 is 1,125 bytes inside a block of size 4,176 alloc'd
==4300==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4300==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4300==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4300== 
==4300== 
==4300== HEAP SUMMARY:
==4300==     in use at exit: 0 bytes in 0 blocks
==4300==   total heap usage: 6,854 allocs, 6,854 frees, 2,683,036 bytes allocated
==4300== 
==4300== All heap blocks were freed -- no leaks are possible
==4300== 
==4300== For counts of detected and suppressed errors, rerun with: -v
==4300== Use --track-origins=yes to see where uninitialised values come from
==4300== ERROR SUMMARY: 600 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --fullcheck-backwards=1 --duplicate=1    
==4303== Memcheck, a memory error detector
==4303== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4303== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4303== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-backwards=1 --duplicate=1
==4303== 
==4303== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4303==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4303==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4303==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4303==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4303==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4303==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4303==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4303==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4303==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4303==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4303==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4303==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4303==  Address 0x5f058f6 is 118 bytes inside a block of size 4,176 alloc'd
==4303==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4303==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4303==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4303==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4303==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4303==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4303==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4303==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4303==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4303==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4303==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4303==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4303== 
==4303== 
==4303== HEAP SUMMARY:
==4303==     in use at exit: 0 bytes in 0 blocks
==4303==   total heap usage: 831 allocs, 831 frees, 660,015 bytes allocated
==4303== 
==4303== All heap blocks were freed -- no leaks are possible
==4303== 
==4303== For counts of detected and suppressed errors, rerun with: -v
==4303== Use --track-origins=yes to see where uninitialised values come from
==4303== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --fullcheck-backwards=1 --duplicate=1    
==4306== Memcheck, a memory error detector
==4306== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4306== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4306== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-backwards=1 --duplicate=1
==4306== 
==4306== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4306==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4306==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4306==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4306==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4306==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4306==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4306==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4306==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4306==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4306==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4306==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4306==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4306==  Address 0x5f156d6 is 614 bytes inside a block of size 4,176 alloc'd
==4306==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4306==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4306==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4306==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4306==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4306==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4306==    by 0x4E619E2: __bam_split (in /usr/lib/libdb-4.7.so)
==4306==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4306==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4306==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4306==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4306==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4306== 
==4306== 
==4306== HEAP SUMMARY:
==4306==     in use at exit: 0 bytes in 0 blocks
==4306==   total heap usage: 1,447,686 allocs, 1,447,686 frees, 43,823,318 bytes allocated
==4306== 
==4306== All heap blocks were freed -- no leaks are possible
==4306== 
==4306== For counts of detected and suppressed errors, rerun with: -v
==4306== Use --track-origins=yes to see where uninitialised values come from
==4306== ERROR SUMMARY: 15 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --fullcheck-backwards=1 --duplicate=1    
==4309== Memcheck, a memory error detector
==4309== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4309== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4309== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-backwards=1 --duplicate=1
==4309== 
==4309== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4309==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4309==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4309==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4309==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4309==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4309==  Address 0x5f00d30 is 3,568 bytes inside a block of size 4,176 alloc'd
==4309==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4309==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4309==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4309== 
==4309== 
==4309== HEAP SUMMARY:
==4309==     in use at exit: 0 bytes in 0 blocks
==4309==   total heap usage: 210 allocs, 210 frees, 121,985,296 bytes allocated
==4309== 
==4309== All heap blocks were freed -- no leaks are possible
==4309== 
==4309== For counts of detected and suppressed errors, rerun with: -v
==4309== Use --track-origins=yes to see where uninitialised values come from
==4309== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --fullcheck-backwards=1 --useralloc=1    
==4313== Memcheck, a memory error detector
==4313== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4313== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4313== Command: ./test ../../testfiles/1/45.tst --fullcheck-backwards=1 --useralloc=1
==4313== 
==4313== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4313==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4313==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4313==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4313==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4313==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4313==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4313==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4313==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4313==    by 0x40339B: engine::flush() (engine.cpp:350)
==4313==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4313==    by 0x401C13: parser::process() (parser.cpp:44)
==4313==    by 0x403FC0: main (main.cpp:467)
==4313==  Address 0x9f01b0e is 206 bytes inside a block of size 4,176 alloc'd
==4313==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4313==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4313==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4313==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4313==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4313==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4313==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4313==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4313==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4313==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4313==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4313==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4313== 
==4313== 
==4313== HEAP SUMMARY:
==4313==     in use at exit: 0 bytes in 0 blocks
==4313==   total heap usage: 3,348 allocs, 3,348 frees, 69,373,461 bytes allocated
==4313== 
==4313== All heap blocks were freed -- no leaks are possible
==4313== 
==4313== For counts of detected and suppressed errors, rerun with: -v
==4313== Use --track-origins=yes to see where uninitialised values come from
==4313== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --fullcheck-backwards=1 --useralloc=1    
==4316== Memcheck, a memory error detector
==4316== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4316== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4316== Command: ./test ../../testfiles/1/220.tst --fullcheck-backwards=1 --useralloc=1
==4316== 
==4316== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4316==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4316==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4316==  Address 0x9fb73be is 1,118 bytes inside a block of size 4,176 alloc'd
==4316==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4316==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4316==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4316== 
==4316== 
==4316== HEAP SUMMARY:
==4316==     in use at exit: 0 bytes in 0 blocks
==4316==   total heap usage: 4,046 allocs, 4,046 frees, 69,043,994 bytes allocated
==4316== 
==4316== All heap blocks were freed -- no leaks are possible
==4316== 
==4316== For counts of detected and suppressed errors, rerun with: -v
==4316== Use --track-origins=yes to see where uninitialised values come from
==4316== ERROR SUMMARY: 94 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --fullcheck-backwards=1 --useralloc=1    
==4319== Memcheck, a memory error detector
==4319== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4319== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4319== Command: ./test ../../testfiles/1/ext_020.tst --fullcheck-backwards=1 --useralloc=1
==4319== 
==4319== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4319==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4319==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4319==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4319==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4319==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4319==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4319==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4319==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4319==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4319==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4319==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4319==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4319==  Address 0x9f04516 is 118 bytes inside a block of size 4,176 alloc'd
==4319==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4319==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4319==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4319==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4319==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4319==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4319==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4319==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4319==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4319==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4319==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4319==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4319== 
==4319== 
==4319== HEAP SUMMARY:
==4319==     in use at exit: 0 bytes in 0 blocks
==4319==   total heap usage: 620 allocs, 620 frees, 67,679,142 bytes allocated
==4319== 
==4319== All heap blocks were freed -- no leaks are possible
==4319== 
==4319== For counts of detected and suppressed errors, rerun with: -v
==4319== Use --track-origins=yes to see where uninitialised values come from
==4319== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --fullcheck-backwards=1 --useralloc=1    
==4322== Memcheck, a memory error detector
==4322== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4322== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4322== Command: ./test ../../testfiles/2/ext_060.tst --fullcheck-backwards=1 --useralloc=1
==4322== 
==4322== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4322==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4322==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4322==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4322==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4322==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4322==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4322==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4322==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4322==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4322==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4322==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4322==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4322==  Address 0x9f16e4a is 410 bytes inside a block of size 4,176 alloc'd
==4322==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4322==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4322==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4322==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4322==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4322==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4322==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4322==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4322==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4322==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4322==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4322==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4322== 
==4322== 
==4322== HEAP SUMMARY:
==4322==     in use at exit: 0 bytes in 0 blocks
==4322==   total heap usage: 649,278 allocs, 649,278 frees, 84,508,943 bytes allocated
==4322== 
==4322== All heap blocks were freed -- no leaks are possible
==4322== 
==4322== For counts of detected and suppressed errors, rerun with: -v
==4322== Use --track-origins=yes to see where uninitialised values come from
==4322== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --fullcheck-backwards=1 --useralloc=1    
==4325== Memcheck, a memory error detector
==4325== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4325== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4325== Command: ./test ../../testfiles/2/blb-001.tst --fullcheck-backwards=1 --useralloc=1
==4325== 
==4325== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4325==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4325==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4325==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4325==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4325==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4325==  Address 0x9f00f58 is 3,976 bytes inside a block of size 4,176 alloc'd
==4325==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4325==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4325==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4325== 
==4325== 
==4325== HEAP SUMMARY:
==4325==     in use at exit: 0 bytes in 0 blocks
==4325==   total heap usage: 205 allocs, 205 frees, 148,607,448 bytes allocated
==4325== 
==4325== All heap blocks were freed -- no leaks are possible
==4325== 
==4325== For counts of detected and suppressed errors, rerun with: -v
==4325== Use --track-origins=yes to see where uninitialised values come from
==4325== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --useralloc=1    
==4329== Memcheck, a memory error detector
==4329== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4329== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4329== Command: ./test ../../testfiles/1/45.tst --useralloc=1
==4329== 
==4329== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4329==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4329==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4329==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4329==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4329==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4329==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4329==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4329==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4329==    by 0x40339B: engine::flush() (engine.cpp:350)
==4329==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4329==    by 0x401C13: parser::process() (parser.cpp:44)
==4329==    by 0x403FC0: main (main.cpp:467)
==4329==  Address 0x9f01c8e is 206 bytes inside a block of size 4,176 alloc'd
==4329==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4329==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4329==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4329==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4329==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4329==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4329==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4329==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4329==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4329==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4329==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4329==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4329== 
==4329== 
==4329== HEAP SUMMARY:
==4329==     in use at exit: 0 bytes in 0 blocks
==4329==   total heap usage: 3,346 allocs, 3,346 frees, 69,373,417 bytes allocated
==4329== 
==4329== All heap blocks were freed -- no leaks are possible
==4329== 
==4329== For counts of detected and suppressed errors, rerun with: -v
==4329== Use --track-origins=yes to see where uninitialised values come from
==4329== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --useralloc=1    
==4332== Memcheck, a memory error detector
==4332== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4332== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4332== Command: ./test ../../testfiles/1/220.tst --useralloc=1
==4332== 
==4332== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4332==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4332==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4332==  Address 0x9fb667a is 122 bytes inside a block of size 4,176 alloc'd
==4332==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4332==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4332==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4332==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4332== 
==4332== 
==4332== HEAP SUMMARY:
==4332==     in use at exit: 0 bytes in 0 blocks
==4332==   total heap usage: 4,050 allocs, 4,050 frees, 69,046,444 bytes allocated
==4332== 
==4332== All heap blocks were freed -- no leaks are possible
==4332== 
==4332== For counts of detected and suppressed errors, rerun with: -v
==4332== Use --track-origins=yes to see where uninitialised values come from
==4332== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --useralloc=1    
==4335== Memcheck, a memory error detector
==4335== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4335== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4335== Command: ./test ../../testfiles/1/ext_020.tst --useralloc=1
==4335== 
==4335== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4335==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4335==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4335==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4335==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4335==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4335==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4335==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4335==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4335==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4335==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4335==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4335==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4335==  Address 0x9f04516 is 118 bytes inside a block of size 4,176 alloc'd
==4335==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4335==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4335==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4335==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4335==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4335==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4335==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4335==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4335==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4335==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4335==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4335==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4335== 
==4335== 
==4335== HEAP SUMMARY:
==4335==     in use at exit: 0 bytes in 0 blocks
==4335==   total heap usage: 620 allocs, 620 frees, 67,679,142 bytes allocated
==4335== 
==4335== All heap blocks were freed -- no leaks are possible
==4335== 
==4335== For counts of detected and suppressed errors, rerun with: -v
==4335== Use --track-origins=yes to see where uninitialised values come from
==4335== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --useralloc=1    
==4338== Memcheck, a memory error detector
==4338== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4338== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4338== Command: ./test ../../testfiles/2/ext_060.tst --useralloc=1
==4338== 
==4338== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4338==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4338==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4338==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4338==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4338==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4338==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4338==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4338==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4338==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4338==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4338==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4338==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4338==  Address 0x9f16cea is 410 bytes inside a block of size 4,176 alloc'd
==4338==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4338==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4338==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4338==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4338==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4338==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4338==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4338==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4338==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4338==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4338==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4338==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4338== 
==4338== 
==4338== HEAP SUMMARY:
==4338==     in use at exit: 0 bytes in 0 blocks
==4338==   total heap usage: 649,274 allocs, 649,274 frees, 84,508,874 bytes allocated
==4338== 
==4338== All heap blocks were freed -- no leaks are possible
==4338== 
==4338== For counts of detected and suppressed errors, rerun with: -v
==4338== Use --track-origins=yes to see where uninitialised values come from
==4338== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --useralloc=1    
==4341== Memcheck, a memory error detector
==4341== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4341== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4341== Command: ./test ../../testfiles/2/blb-001.tst --useralloc=1
==4341== 
==4341== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4341==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4341==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4341==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4341==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4341==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4341==  Address 0x9f00f58 is 3,976 bytes inside a block of size 4,176 alloc'd
==4341==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4341==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4341==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4341== 
==4341== 
==4341== HEAP SUMMARY:
==4341==     in use at exit: 0 bytes in 0 blocks
==4341==   total heap usage: 205 allocs, 205 frees, 148,607,448 bytes allocated
==4341== 
==4341== All heap blocks were freed -- no leaks are possible
==4341== 
==4341== For counts of detected and suppressed errors, rerun with: -v
==4341== Use --track-origins=yes to see where uninitialised values come from
==4341== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==4345== Memcheck, a memory error detector
==4345== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4345== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4345== Command: ./test ../../testfiles/1/45.tst --disable-mmap=1 --overwrite=1 --reopen=1
==4345== 
==4345== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4345==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4345==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4345==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4345==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4345==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4345==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4345==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4345==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4345==    by 0x40339B: engine::flush() (engine.cpp:350)
==4345==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4345==    by 0x401C13: parser::process() (parser.cpp:44)
==4345==    by 0x403FC0: main (main.cpp:467)
==4345==  Address 0x5f0dfce is 206 bytes inside a block of size 4,176 alloc'd
==4345==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4345==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4345==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4345==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4345==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4345==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4345==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4345==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4345==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4345==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4345==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4345==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4345== 
==4345== 
==4345== HEAP SUMMARY:
==4345==     in use at exit: 0 bytes in 0 blocks
==4345==   total heap usage: 3,661 allocs, 3,661 frees, 4,693,644 bytes allocated
==4345== 
==4345== All heap blocks were freed -- no leaks are possible
==4345== 
==4345== For counts of detected and suppressed errors, rerun with: -v
==4345== Use --track-origins=yes to see where uninitialised values come from
==4345== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==4348== Memcheck, a memory error detector
==4348== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4348== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4348== Command: ./test ../../testfiles/1/220.tst --disable-mmap=1 --overwrite=1 --reopen=1
==4348== 
==4348== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4348==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4348==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4348==  Address 0x5fa3562 is 114 bytes inside a block of size 4,176 alloc'd
==4348==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4348==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4348==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4348==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4348== 
==4348== 
==4348== HEAP SUMMARY:
==4348==     in use at exit: 0 bytes in 0 blocks
==4348==   total heap usage: 3,862 allocs, 3,862 frees, 3,511,717 bytes allocated
==4348== 
==4348== All heap blocks were freed -- no leaks are possible
==4348== 
==4348== For counts of detected and suppressed errors, rerun with: -v
==4348== Use --track-origins=yes to see where uninitialised values come from
==4348== ERROR SUMMARY: 116 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==4351== Memcheck, a memory error detector
==4351== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4351== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4351== Command: ./test ../../testfiles/1/ext_020.tst --disable-mmap=1 --overwrite=1 --reopen=1
==4351== 
==4351== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4351==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4351==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4351==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4351==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4351==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4351==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4351==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4351==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4351==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4351==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4351==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4351==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4351==  Address 0x5f119b6 is 118 bytes inside a block of size 4,176 alloc'd
==4351==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4351==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4351==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4351==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4351==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4351==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4351==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4351==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4351==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4351==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4351==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4351==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4351== 
==4351== 
==4351== HEAP SUMMARY:
==4351==     in use at exit: 0 bytes in 0 blocks
==4351==   total heap usage: 1,004 allocs, 1,004 frees, 1,107,850 bytes allocated
==4351== 
==4351== All heap blocks were freed -- no leaks are possible
==4351== 
==4351== For counts of detected and suppressed errors, rerun with: -v
==4351== Use --track-origins=yes to see where uninitialised values come from
==4351== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==4354== Memcheck, a memory error detector
==4354== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4354== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4354== Command: ./test ../../testfiles/2/ext_060.tst --disable-mmap=1 --overwrite=1 --reopen=1
==4354== 
==4354== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4354==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4354==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4354==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4354==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4354==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4354==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4354==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4354==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4354==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4354==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4354==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4354==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4354==  Address 0x5f27bce is 414 bytes inside a block of size 4,176 alloc'd
==4354==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4354==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4354==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4354==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4354==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4354==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4354==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4354==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4354==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4354==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4354==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4354==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4354== 
==4354== 
==4354== HEAP SUMMARY:
==4354==     in use at exit: 0 bytes in 0 blocks
==4354==   total heap usage: 911,490 allocs, 911,490 frees, 24,701,331 bytes allocated
==4354== 
==4354== All heap blocks were freed -- no leaks are possible
==4354== 
==4354== For counts of detected and suppressed errors, rerun with: -v
==4354== Use --track-origins=yes to see where uninitialised values come from
==4354== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --disable-mmap=1 --overwrite=1 --reopen=1    
==4357== Memcheck, a memory error detector
==4357== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4357== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4357== Command: ./test ../../testfiles/2/blb-001.tst --disable-mmap=1 --overwrite=1 --reopen=1
==4357== 
==4357== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4357==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4357==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4357==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4357==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4357==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4357==  Address 0x5f3507c is 3,580 bytes inside a block of size 4,176 alloc'd
==4357==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4357==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4357==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4357== 
==4357== 
==4357== HEAP SUMMARY:
==4357==     in use at exit: 0 bytes in 0 blocks
==4357==   total heap usage: 379 allocs, 379 frees, 46,299,271 bytes allocated
==4357== 
==4357== All heap blocks were freed -- no leaks are possible
==4357== 
==4357== For counts of detected and suppressed errors, rerun with: -v
==4357== Use --track-origins=yes to see where uninitialised values come from
==4357== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --keysize=8 --overwrite=1 --reopen=1    
==4361== Memcheck, a memory error detector
==4361== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4361== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4361== Command: ./test ../../testfiles/1/45.tst --keysize=8 --overwrite=1 --reopen=1
==4361== 
==4361== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4361==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4361==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4361==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4361==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4361==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4361==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4361==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4361==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4361==    by 0x40339B: engine::flush() (engine.cpp:350)
==4361==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4361==    by 0x401C13: parser::process() (parser.cpp:44)
==4361==    by 0x403FC0: main (main.cpp:467)
==4361==  Address 0x5f01f0e is 206 bytes inside a block of size 4,176 alloc'd
==4361==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4361==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4361==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4361==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4361==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4361==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4361==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4361==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4361==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4361==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4361==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4361==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4361== 
==4361== 
==4361== HEAP SUMMARY:
==4361==     in use at exit: 0 bytes in 0 blocks
==4361==   total heap usage: 3,711 allocs, 3,711 frees, 2,758,340 bytes allocated
==4361== 
==4361== All heap blocks were freed -- no leaks are possible
==4361== 
==4361== For counts of detected and suppressed errors, rerun with: -v
==4361== Use --track-origins=yes to see where uninitialised values come from
==4361== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --keysize=8 --overwrite=1 --reopen=1    
==4364== Memcheck, a memory error detector
==4364== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4364== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4364== Command: ./test ../../testfiles/1/220.tst --keysize=8 --overwrite=1 --reopen=1
==4364== 
==4364== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4364==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4364==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4364==  Address 0x5f83362 is 114 bytes inside a block of size 4,176 alloc'd
==4364==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4364==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4364==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4364==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4364== 
==4364== 
==4364== HEAP SUMMARY:
==4364==     in use at exit: 0 bytes in 0 blocks
==4364==   total heap usage: 4,593 allocs, 4,593 frees, 2,498,489 bytes allocated
==4364== 
==4364== All heap blocks were freed -- no leaks are possible
==4364== 
==4364== For counts of detected and suppressed errors, rerun with: -v
==4364== Use --track-origins=yes to see where uninitialised values come from
==4364== ERROR SUMMARY: 116 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --keysize=8 --overwrite=1 --reopen=1    
==4367== Memcheck, a memory error detector
==4367== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4367== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4367== Command: ./test ../../testfiles/1/ext_020.tst --keysize=8 --overwrite=1 --reopen=1
==4367== 
==4367== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4367==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4367==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4367==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4367==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4367==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4367==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4367==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4367==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4367==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4367==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4367==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4367==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4367==  Address 0x5f058f6 is 118 bytes inside a block of size 4,176 alloc'd
==4367==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4367==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4367==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4367==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4367==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4367==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4367==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4367==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4367==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4367==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4367==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4367==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4367== 
==4367== 
==4367== HEAP SUMMARY:
==4367==     in use at exit: 0 bytes in 0 blocks
==4367==   total heap usage: 996 allocs, 996 frees, 976,778 bytes allocated
==4367== 
==4367== All heap blocks were freed -- no leaks are possible
==4367== 
==4367== For counts of detected and suppressed errors, rerun with: -v
==4367== Use --track-origins=yes to see where uninitialised values come from
==4367== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --keysize=8 --overwrite=1 --reopen=1    
==4370== Memcheck, a memory error detector
==4370== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4370== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4370== Command: ./test ../../testfiles/2/ext_060.tst --keysize=8 --overwrite=1 --reopen=1
==4370== 
==4370== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4370==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4370==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4370==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4370==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4370==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4370==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4370==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4370==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4370==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4370==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4370==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4370==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4370==  Address 0x5f3e3ae is 414 bytes inside a block of size 4,176 alloc'd
==4370==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4370==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4370==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4370==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4370==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4370==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4370==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4370==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4370==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4370==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4370==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4370==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4370== 
==4370== 
==4370== HEAP SUMMARY:
==4370==     in use at exit: 0 bytes in 0 blocks
==4370==   total heap usage: 2,205,239 allocs, 2,205,239 frees, 44,102,243 bytes allocated
==4370== 
==4370== All heap blocks were freed -- no leaks are possible
==4370== 
==4370== For counts of detected and suppressed errors, rerun with: -v
==4370== Use --track-origins=yes to see where uninitialised values come from
==4370== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --keysize=8 --overwrite=1 --reopen=1    
==4375== Memcheck, a memory error detector
==4375== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4375== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4375== Command: ./test ../../testfiles/2/blb-001.tst --keysize=8 --overwrite=1 --reopen=1
==4375== 
==4375== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4375==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4375==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4375==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4375==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4375==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4375==  Address 0x5f00d3c is 3,580 bytes inside a block of size 4,176 alloc'd
==4375==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4375==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4375==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4375== 
==4375== 
==4375== HEAP SUMMARY:
==4375==     in use at exit: 0 bytes in 0 blocks
==4375==   total heap usage: 342 allocs, 342 frees, 45,693,063 bytes allocated
==4375== 
==4375== All heap blocks were freed -- no leaks are possible
==4375== 
==4375== For counts of detected and suppressed errors, rerun with: -v
==4375== Use --track-origins=yes to see where uninitialised values come from
==4375== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --keysize=12 --overwrite=1 --reopen=1    
==4379== Memcheck, a memory error detector
==4379== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4379== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4379== Command: ./test ../../testfiles/1/45.tst --keysize=12 --overwrite=1 --reopen=1
==4379== 
==4379== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4379==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4379==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4379==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4379==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4379==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4379==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4379==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4379==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4379==    by 0x40339B: engine::flush() (engine.cpp:350)
==4379==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4379==    by 0x401C13: parser::process() (parser.cpp:44)
==4379==    by 0x403FC0: main (main.cpp:467)
==4379==  Address 0x5f01f0e is 206 bytes inside a block of size 4,176 alloc'd
==4379==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4379==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4379==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4379==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4379==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4379==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4379==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4379==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4379==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4379==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4379==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4379==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4379== 
==4379== 
==4379== HEAP SUMMARY:
==4379==     in use at exit: 0 bytes in 0 blocks
==4379==   total heap usage: 3,629 allocs, 3,629 frees, 2,758,900 bytes allocated
==4379== 
==4379== All heap blocks were freed -- no leaks are possible
==4379== 
==4379== For counts of detected and suppressed errors, rerun with: -v
==4379== Use --track-origins=yes to see where uninitialised values come from
==4379== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --keysize=12 --overwrite=1 --reopen=1    
==4382== Memcheck, a memory error detector
==4382== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4382== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4382== Command: ./test ../../testfiles/1/220.tst --keysize=12 --overwrite=1 --reopen=1
==4382== 
==4382== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4382==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4382==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4382==  Address 0x5f83362 is 114 bytes inside a block of size 4,176 alloc'd
==4382==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4382==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4382==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4382==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4382== 
==4382== 
==4382== HEAP SUMMARY:
==4382==     in use at exit: 0 bytes in 0 blocks
==4382==   total heap usage: 4,593 allocs, 4,593 frees, 2,498,489 bytes allocated
==4382== 
==4382== All heap blocks were freed -- no leaks are possible
==4382== 
==4382== For counts of detected and suppressed errors, rerun with: -v
==4382== Use --track-origins=yes to see where uninitialised values come from
==4382== ERROR SUMMARY: 116 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --keysize=12 --overwrite=1 --reopen=1    
==4385== Memcheck, a memory error detector
==4385== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4385== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4385== Command: ./test ../../testfiles/1/ext_020.tst --keysize=12 --overwrite=1 --reopen=1
==4385== 
==4385== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4385==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4385==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4385==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4385==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4385==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4385==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4385==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4385==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4385==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4385==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4385==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4385==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4385==  Address 0x5f058f6 is 118 bytes inside a block of size 4,176 alloc'd
==4385==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4385==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4385==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4385==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4385==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4385==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4385==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4385==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4385==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4385==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4385==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4385==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4385== 
==4385== 
==4385== HEAP SUMMARY:
==4385==     in use at exit: 0 bytes in 0 blocks
==4385==   total heap usage: 996 allocs, 996 frees, 976,778 bytes allocated
==4385== 
==4385== All heap blocks were freed -- no leaks are possible
==4385== 
==4385== For counts of detected and suppressed errors, rerun with: -v
==4385== Use --track-origins=yes to see where uninitialised values come from
==4385== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --keysize=12 --overwrite=1 --reopen=1    
==4388== Memcheck, a memory error detector
==4388== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4388== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4388== Command: ./test ../../testfiles/2/ext_060.tst --keysize=12 --overwrite=1 --reopen=1
==4388== 
==4388== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4388==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4388==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4388==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4388==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4388==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4388==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4388==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4388==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4388==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4388==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4388==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4388==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4388==  Address 0x5f36cbe is 414 bytes inside a block of size 4,176 alloc'd
==4388==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4388==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4388==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4388==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4388==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4388==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4388==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4388==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4388==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4388==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4388==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4388==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4388== 
==4388== 
==4388== HEAP SUMMARY:
==4388==     in use at exit: 0 bytes in 0 blocks
==4388==   total heap usage: 1,813,375 allocs, 1,813,375 frees, 39,968,645 bytes allocated
==4388== 
==4388== All heap blocks were freed -- no leaks are possible
==4388== 
==4388== For counts of detected and suppressed errors, rerun with: -v
==4388== Use --track-origins=yes to see where uninitialised values come from
==4388== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --keysize=12 --overwrite=1 --reopen=1    
==4391== Memcheck, a memory error detector
==4391== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4391== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4391== Command: ./test ../../testfiles/2/blb-001.tst --keysize=12 --overwrite=1 --reopen=1
==4391== 
==4391== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4391==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4391==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4391==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4391==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4391==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4391==  Address 0x5f00d3c is 3,580 bytes inside a block of size 4,176 alloc'd
==4391==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4391==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4391==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4391== 
==4391== 
==4391== HEAP SUMMARY:
==4391==     in use at exit: 0 bytes in 0 blocks
==4391==   total heap usage: 342 allocs, 342 frees, 45,693,063 bytes allocated
==4391== 
==4391== All heap blocks were freed -- no leaks are possible
==4391== 
==4391== For counts of detected and suppressed errors, rerun with: -v
==4391== Use --track-origins=yes to see where uninitialised values come from
==4391== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --keysize=33 --overwrite=1 --reopen=1    
==4395== Memcheck, a memory error detector
==4395== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4395== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4395== Command: ./test ../../testfiles/1/45.tst --keysize=33 --overwrite=1 --reopen=1
==4395== 
==4395== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4395==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4395==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4395==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4395==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4395==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4395==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4395==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4395==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4395==    by 0x40339B: engine::flush() (engine.cpp:350)
==4395==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4395==    by 0x401C13: parser::process() (parser.cpp:44)
==4395==    by 0x403FC0: main (main.cpp:467)
==4395==  Address 0x5f01f0e is 206 bytes inside a block of size 4,176 alloc'd
==4395==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4395==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4395==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4395==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4395==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4395==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4395==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4395==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4395==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4395==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4395==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4395==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4395== 
==4395== 
==4395== HEAP SUMMARY:
==4395==     in use at exit: 0 bytes in 0 blocks
==4395==   total heap usage: 3,565 allocs, 3,565 frees, 2,774,184 bytes allocated
==4395== 
==4395== All heap blocks were freed -- no leaks are possible
==4395== 
==4395== For counts of detected and suppressed errors, rerun with: -v
==4395== Use --track-origins=yes to see where uninitialised values come from
==4395== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --keysize=33 --overwrite=1 --reopen=1    
==4398== Memcheck, a memory error detector
==4398== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4398== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4398== Command: ./test ../../testfiles/1/220.tst --keysize=33 --overwrite=1 --reopen=1
==4398== 
==4398== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4398==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4398==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4398==  Address 0x5f83362 is 114 bytes inside a block of size 4,176 alloc'd
==4398==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4398==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4398==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4398==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4398== 
==4398== 
==4398== HEAP SUMMARY:
==4398==     in use at exit: 0 bytes in 0 blocks
==4398==   total heap usage: 3,389 allocs, 3,389 frees, 2,494,265 bytes allocated
==4398== 
==4398== All heap blocks were freed -- no leaks are possible
==4398== 
==4398== For counts of detected and suppressed errors, rerun with: -v
==4398== Use --track-origins=yes to see where uninitialised values come from
==4398== ERROR SUMMARY: 116 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --keysize=33 --overwrite=1 --reopen=1    
==4401== Memcheck, a memory error detector
==4401== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4401== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4401== Command: ./test ../../testfiles/1/ext_020.tst --keysize=33 --overwrite=1 --reopen=1
==4401== 
==4401== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4401==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4401==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4401==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4401==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4401==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4401==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4401==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4401==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4401==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4401==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4401==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4401==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4401==  Address 0x5f054b6 is 118 bytes inside a block of size 4,176 alloc'd
==4401==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4401==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4401==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4401==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4401==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4401==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4401==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4401==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4401==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4401==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4401==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4401==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4401== 
==4401== 
==4401== HEAP SUMMARY:
==4401==     in use at exit: 0 bytes in 0 blocks
==4401==   total heap usage: 933 allocs, 933 frees, 974,700 bytes allocated
==4401== 
==4401== All heap blocks were freed -- no leaks are possible
==4401== 
==4401== For counts of detected and suppressed errors, rerun with: -v
==4401== Use --track-origins=yes to see where uninitialised values come from
==4401== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --keysize=33 --overwrite=1 --reopen=1    
==4404== Memcheck, a memory error detector
==4404== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4404== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4404== Command: ./test ../../testfiles/2/ext_060.tst --keysize=33 --overwrite=1 --reopen=1
==4404== 
==4404== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4404==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4404==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4404==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4404==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4404==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4404==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4404==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4404==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4404==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4404==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4404==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4404==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4404==  Address 0x5f04c5e is 414 bytes inside a block of size 4,176 alloc'd
==4404==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4404==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4404==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4404==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4404==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4404==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4404==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4404==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4404==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4404==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4404==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4404==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4404== 
==4404== 
==4404== HEAP SUMMARY:
==4404==     in use at exit: 0 bytes in 0 blocks
==4404==   total heap usage: 17,676 allocs, 17,676 frees, 1,263,488 bytes allocated
==4404== 
==4404== All heap blocks were freed -- no leaks are possible
==4404== 
==4404== For counts of detected and suppressed errors, rerun with: -v
==4404== Use --track-origins=yes to see where uninitialised values come from
==4404== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --keysize=33 --overwrite=1 --reopen=1    
==4407== Memcheck, a memory error detector
==4407== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4407== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4407== Command: ./test ../../testfiles/2/blb-001.tst --keysize=33 --overwrite=1 --reopen=1
==4407== 
==4407== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4407==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4407==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4407==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4407==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4407==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4407==  Address 0x5f00d3c is 3,580 bytes inside a block of size 4,176 alloc'd
==4407==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4407==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4407==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4407== 
==4407== 
==4407== HEAP SUMMARY:
==4407==     in use at exit: 0 bytes in 0 blocks
==4407==   total heap usage: 342 allocs, 342 frees, 45,693,063 bytes allocated
==4407== 
==4407== All heap blocks were freed -- no leaks are possible
==4407== 
==4407== For counts of detected and suppressed errors, rerun with: -v
==4407== Use --track-origins=yes to see where uninitialised values come from
==4407== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --keysize=680 --overwrite=1 --reopen=1    
==4411== Memcheck, a memory error detector
==4411== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4411== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4411== Command: ./test ../../testfiles/1/45.tst --keysize=680 --overwrite=1 --reopen=1
==4411== 
==4411== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4411==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4411==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4411==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4411==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4411==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4411==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4411==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4411==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4411==    by 0x40339B: engine::flush() (engine.cpp:350)
==4411==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4411==    by 0x401C13: parser::process() (parser.cpp:44)
==4411==    by 0x403FC0: main (main.cpp:467)
==4411==  Address 0x5f01f2e is 206 bytes inside a block of size 4,176 alloc'd
==4411==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4411==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4411==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4411==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4411==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4411==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4411==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4411==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4411==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4411==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4411==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4411==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4411== 
==4411== 
==4411== HEAP SUMMARY:
==4411==     in use at exit: 0 bytes in 0 blocks
==4411==   total heap usage: 87,155 allocs, 87,155 frees, 15,699,508 bytes allocated
==4411== 
==4411== All heap blocks were freed -- no leaks are possible
==4411== 
==4411== For counts of detected and suppressed errors, rerun with: -v
==4411== Use --track-origins=yes to see where uninitialised values come from
==4411== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --keysize=680 --overwrite=1 --reopen=1    
==4414== Memcheck, a memory error detector
==4414== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4414== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4414== Command: ./test ../../testfiles/1/220.tst --keysize=680 --overwrite=1 --reopen=1
==4414== 
==4414== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4414==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4414==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4414==  Address 0x5f7dea2 is 114 bytes inside a block of size 4,176 alloc'd
==4414==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4414==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4414==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4414==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4414== 
==4414== 
==4414== HEAP SUMMARY:
==4414==     in use at exit: 0 bytes in 0 blocks
==4414==   total heap usage: 5,189 allocs, 5,189 frees, 3,077,037 bytes allocated
==4414== 
==4414== All heap blocks were freed -- no leaks are possible
==4414== 
==4414== For counts of detected and suppressed errors, rerun with: -v
==4414== Use --track-origins=yes to see where uninitialised values come from
==4414== ERROR SUMMARY: 116 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --keysize=680 --overwrite=1 --reopen=1    
==4417== Memcheck, a memory error detector
==4417== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4417== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4417== Command: ./test ../../testfiles/1/ext_020.tst --keysize=680 --overwrite=1 --reopen=1
==4417== 
==4417== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4417==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4417==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4417==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4417==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4417==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4417==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4417==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4417==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4417==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4417==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4417==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4417==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4417==  Address 0x5f022b6 is 118 bytes inside a block of size 4,176 alloc'd
==4417==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4417==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4417==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4417==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4417==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4417==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4417==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4417==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4417==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4417==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4417==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4417==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4417== 
==4417== 
==4417== HEAP SUMMARY:
==4417==     in use at exit: 0 bytes in 0 blocks
==4417==   total heap usage: 432 allocs, 432 frees, 816,803 bytes allocated
==4417== 
==4417== All heap blocks were freed -- no leaks are possible
==4417== 
==4417== For counts of detected and suppressed errors, rerun with: -v
==4417== Use --track-origins=yes to see where uninitialised values come from
==4417== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --keysize=680 --overwrite=1 --reopen=1    
==4420== Memcheck, a memory error detector
==4420== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4420== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4420== Command: ./test ../../testfiles/2/ext_060.tst --keysize=680 --overwrite=1 --reopen=1
==4420== 
==4420== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4420==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4420==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4420==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4420==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4420==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4420==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4420==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4420==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4420==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4420==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4420==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4420==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4420==  Address 0x5f03b6e is 414 bytes inside a block of size 4,176 alloc'd
==4420==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4420==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4420==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4420==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4420==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4420==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4420==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4420==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4420==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4420==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4420==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4420==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4420== 
==4420== 
==4420== HEAP SUMMARY:
==4420==     in use at exit: 0 bytes in 0 blocks
==4420==   total heap usage: 4,989 allocs, 4,989 frees, 1,157,330 bytes allocated
==4420== 
==4420== All heap blocks were freed -- no leaks are possible
==4420== 
==4420== For counts of detected and suppressed errors, rerun with: -v
==4420== Use --track-origins=yes to see where uninitialised values come from
==4420== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --keysize=680 --overwrite=1 --reopen=1    
==4427== Memcheck, a memory error detector
==4427== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4427== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4427== Command: ./test ../../testfiles/2/blb-001.tst --keysize=680 --overwrite=1 --reopen=1
==4427== 
==4427== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4427==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4427==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4427==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4427==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4427==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4427==  Address 0x5f00d3c is 3,580 bytes inside a block of size 4,176 alloc'd
==4427==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4427==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4427==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4427== 
==4427== 
==4427== HEAP SUMMARY:
==4427==     in use at exit: 0 bytes in 0 blocks
==4427==   total heap usage: 342 allocs, 342 frees, 45,693,063 bytes allocated
==4427== 
==4427== All heap blocks were freed -- no leaks are possible
==4427== 
==4427== For counts of detected and suppressed errors, rerun with: -v
==4427== Use --track-origins=yes to see where uninitialised values come from
==4427== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --pagesize=1024 --overwrite=1 --reopen=1    
==4431== Memcheck, a memory error detector
==4431== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4431== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4431== Command: ./test ../../testfiles/1/45.tst --pagesize=1024 --overwrite=1 --reopen=1
==4431== 
==4431== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4431==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4431==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4431==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4431==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4431==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4431==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4431==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4431==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4431==    by 0x40339B: engine::flush() (engine.cpp:350)
==4431==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4431==    by 0x401C13: parser::process() (parser.cpp:44)
==4431==    by 0x403FC0: main (main.cpp:467)
==4431==  Address 0x5f0542e is 206 bytes inside a block of size 4,176 alloc'd
==4431==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4431==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4431==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4431==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4431==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4431==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4431==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4431==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4431==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4431==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4431==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4431==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4431== 
==4431== 
==4431== HEAP SUMMARY:
==4431==     in use at exit: 0 bytes in 0 blocks
==4431==   total heap usage: 303,745 allocs, 303,745 frees, 180,260,752 bytes allocated
==4431== 
==4431== All heap blocks were freed -- no leaks are possible
==4431== 
==4431== For counts of detected and suppressed errors, rerun with: -v
==4431== Use --track-origins=yes to see where uninitialised values come from
==4431== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --pagesize=1024 --overwrite=1 --reopen=1    
==4434== Memcheck, a memory error detector
==4434== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4434== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4434== Command: ./test ../../testfiles/1/220.tst --pagesize=1024 --overwrite=1 --reopen=1
==4434== 
==4434== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4434==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4434==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4434==  Address 0x62d4112 is 114 bytes inside a block of size 4,176 alloc'd
==4434==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4434==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4434==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4434==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4434== 
==4434== Invalid read of size 1
==4434==    at 0x41FF64: __freel_alloc_area32 (freelist.c:2576)
==4434==    by 0x421072: freel_alloc_area_ex (freelist.c:4807)
==4434==    by 0x416918: blob_allocate (blob.c:414)
==4434==    by 0x416D8F: blob_overwrite (blob.c:721)
==4434==    by 0x410D6A: key_set_record (keys.c:158)
==4434==    by 0x41B60E: my_insert_nosplit (btree_insert.c:748)
==4434==    by 0x41BD92: my_insert_in_page (btree_insert.c:604)
==4434==    by 0x41C03C: T.76 (btree_insert.c:503)
==4434==    by 0x41BFE3: T.76 (btree_insert.c:517)
==4434==    by 0x41C112: my_insert_cursor (btree_insert.c:351)
==4434==    by 0x41C487: btree_insert_cursor (btree_insert.c:458)
==4434==    by 0x40A02D: ham_insert (hamsterdb.c:3909)
==4434==  Address 0x632b5a1 is 1 bytes after a block of size 1,024 alloc'd
==4434==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4434==    by 0x413B3C: __f_read_page (device.c:171)
==4434==    by 0x41D0C4: db_fetch_page (db.c:979)
==4434==    by 0x41F292: __freel_mark_free32 (freelist.c:4359)
==4434==    by 0x416D05: blob_overwrite (blob.c:703)
==4434==    by 0x410D6A: key_set_record (keys.c:158)
==4434==    by 0x41B60E: my_insert_nosplit (btree_insert.c:748)
==4434==    by 0x41BD92: my_insert_in_page (btree_insert.c:604)
==4434==    by 0x41C03C: T.76 (btree_insert.c:503)
==4434==    by 0x41BFE3: T.76 (btree_insert.c:517)
==4434==    by 0x41C112: my_insert_cursor (btree_insert.c:351)
==4434==    by 0x41C487: btree_insert_cursor (btree_insert.c:458)
==4434== 
==4434== Invalid read of size 1
==4434==    at 0x41FF64: __freel_alloc_area32 (freelist.c:2576)
==4434==    by 0x421072: freel_alloc_area_ex (freelist.c:4807)
==4434==    by 0x416918: blob_allocate (blob.c:414)
==4434==    by 0x410BB0: key_set_record (keys.c:126)
==4434==    by 0x41B60E: my_insert_nosplit (btree_insert.c:748)
==4434==    by 0x41BD92: my_insert_in_page (btree_insert.c:604)
==4434==    by 0x41C03C: T.76 (btree_insert.c:503)
==4434==    by 0x41BFE3: T.76 (btree_insert.c:517)
==4434==    by 0x41C112: my_insert_cursor (btree_insert.c:351)
==4434==    by 0x41C487: btree_insert_cursor (btree_insert.c:458)
==4434==    by 0x40A02D: ham_insert (hamsterdb.c:3909)
==4434==    by 0x4054F2: hamsterdb::insert(ham_key_t*, ham_record_t*) (hamsterdb.cpp:277)
==4434==  Address 0x69cb8b1 is 1 bytes after a block of size 1,024 alloc'd
==4434==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4434==    by 0x413B3C: __f_read_page (device.c:171)
==4434==    by 0x41D0C4: db_fetch_page (db.c:979)
==4434==    by 0x41F292: __freel_mark_free32 (freelist.c:4359)
==4434==    by 0x416DB4: blob_overwrite (blob.c:725)
==4434==    by 0x410D6A: key_set_record (keys.c:158)
==4434==    by 0x41B60E: my_insert_nosplit (btree_insert.c:748)
==4434==    by 0x41BD92: my_insert_in_page (btree_insert.c:604)
==4434==    by 0x41C03C: T.76 (btree_insert.c:503)
==4434==    by 0x41BFE3: T.76 (btree_insert.c:517)
==4434==    by 0x41C112: my_insert_cursor (btree_insert.c:351)
==4434==    by 0x41C487: btree_insert_cursor (btree_insert.c:458)
==4434== 
==4434== 
==4434== HEAP SUMMARY:
==4434==     in use at exit: 0 bytes in 0 blocks
==4434==   total heap usage: 294,320 allocs, 294,320 frees, 174,784,589 bytes allocated
==4434== 
==4434== All heap blocks were freed -- no leaks are possible
==4434== 
==4434== For counts of detected and suppressed errors, rerun with: -v
==4434== Use --track-origins=yes to see where uninitialised values come from
==4434== ERROR SUMMARY: 121 errors from 3 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --pagesize=1024 --overwrite=1 --reopen=1    
==4437== Memcheck, a memory error detector
==4437== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4437== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4437== Command: ./test ../../testfiles/1/ext_020.tst --pagesize=1024 --overwrite=1 --reopen=1
==4437== 
==4437== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4437==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4437==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4437==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4437==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4437==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4437==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4437==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4437==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4437==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4437==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4437==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4437==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4437==  Address 0x5f07a36 is 118 bytes inside a block of size 4,176 alloc'd
==4437==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4437==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4437==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4437==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4437==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4437==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4437==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4437==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4437==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4437==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4437==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4437==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4437== 
==4437== 
==4437== HEAP SUMMARY:
==4437==     in use at exit: 0 bytes in 0 blocks
==4437==   total heap usage: 1,092 allocs, 1,092 frees, 1,036,714 bytes allocated
==4437== 
==4437== All heap blocks were freed -- no leaks are possible
==4437== 
==4437== For counts of detected and suppressed errors, rerun with: -v
==4437== Use --track-origins=yes to see where uninitialised values come from
==4437== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --pagesize=1024 --overwrite=1 --reopen=1    
==4440== Memcheck, a memory error detector
==4440== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4440== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4440== Command: ./test ../../testfiles/2/ext_060.tst --pagesize=1024 --overwrite=1 --reopen=1
==4440== 
==4440== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4440==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4440==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4440==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4440==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4440==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4440==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4440==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4440==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4440==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4440==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4440==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4440==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4440==  Address 0x5f1f51e is 414 bytes inside a block of size 4,176 alloc'd
==4440==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4440==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4440==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4440==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4440==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4440==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4440==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4440==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4440==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4440==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4440==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4440==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4440== 
==4440== 
==4440== HEAP SUMMARY:
==4440==     in use at exit: 0 bytes in 0 blocks
==4440==   total heap usage: 937,185 allocs, 937,185 frees, 25,510,621 bytes allocated
==4440== 
==4440== All heap blocks were freed -- no leaks are possible
==4440== 
==4440== For counts of detected and suppressed errors, rerun with: -v
==4440== Use --track-origins=yes to see where uninitialised values come from
==4440== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --pagesize=1024 --overwrite=1 --reopen=1    
==4444== Memcheck, a memory error detector
==4444== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4444== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4444== Command: ./test ../../testfiles/2/blb-001.tst --pagesize=1024 --overwrite=1 --reopen=1
==4444== 
==4444== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4444==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4444==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4444==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4444==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4444==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4444==  Address 0x5f782dc is 3,580 bytes inside a block of size 4,176 alloc'd
==4444==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4444==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4444==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4444== 
==4444== 
==4444== HEAP SUMMARY:
==4444==     in use at exit: 0 bytes in 0 blocks
==4444==   total heap usage: 2,218 allocs, 2,218 frees, 47,062,127 bytes allocated
==4444== 
==4444== All heap blocks were freed -- no leaks are possible
==4444== 
==4444== For counts of detected and suppressed errors, rerun with: -v
==4444== Use --track-origins=yes to see where uninitialised values come from
==4444== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --pagesize=8192 --overwrite=1 --reopen=1    
==4448== Memcheck, a memory error detector
==4448== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4448== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4448== Command: ./test ../../testfiles/1/45.tst --pagesize=8192 --overwrite=1 --reopen=1
==4448== 
==4448== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4448==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4448==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4448==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4448==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4448==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4448==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4448==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4448==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4448==    by 0x40339B: engine::flush() (engine.cpp:350)
==4448==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4448==    by 0x401C13: parser::process() (parser.cpp:44)
==4448==    by 0x403FC0: main (main.cpp:467)
==4448==  Address 0x5f01f0e is 206 bytes inside a block of size 4,176 alloc'd
==4448==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4448==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4448==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4448==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4448==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4448==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4448==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4448==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4448==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4448==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4448==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4448==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4448== 
==4448== 
==4448== HEAP SUMMARY:
==4448==     in use at exit: 0 bytes in 0 blocks
==4448==   total heap usage: 12,096 allocs, 12,096 frees, 4,078,296 bytes allocated
==4448== 
==4448== All heap blocks were freed -- no leaks are possible
==4448== 
==4448== For counts of detected and suppressed errors, rerun with: -v
==4448== Use --track-origins=yes to see where uninitialised values come from
==4448== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --pagesize=8192 --overwrite=1 --reopen=1    
==4451== Memcheck, a memory error detector
==4451== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4451== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4451== Command: ./test ../../testfiles/1/220.tst --pagesize=8192 --overwrite=1 --reopen=1
==4451== 
==4451== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4451==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4451==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4451==  Address 0x5f838a2 is 114 bytes inside a block of size 4,176 alloc'd
==4451==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4451==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4451==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4451==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4451== 
==4451== 
==4451== HEAP SUMMARY:
==4451==     in use at exit: 0 bytes in 0 blocks
==4451==   total heap usage: 2,805 allocs, 2,805 frees, 2,500,513 bytes allocated
==4451== 
==4451== All heap blocks were freed -- no leaks are possible
==4451== 
==4451== For counts of detected and suppressed errors, rerun with: -v
==4451== Use --track-origins=yes to see where uninitialised values come from
==4451== ERROR SUMMARY: 116 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --pagesize=8192 --overwrite=1 --reopen=1    
==4454== Memcheck, a memory error detector
==4454== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4454== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4454== Command: ./test ../../testfiles/1/ext_020.tst --pagesize=8192 --overwrite=1 --reopen=1
==4454== 
==4454== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4454==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4454==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4454==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4454==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4454==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4454==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4454==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4454==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4454==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4454==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4454==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4454==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4454==  Address 0x5f058f6 is 118 bytes inside a block of size 4,176 alloc'd
==4454==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4454==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4454==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4454==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4454==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4454==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4454==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4454==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4454==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4454==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4454==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4454==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4454== 
==4454== 
==4454== HEAP SUMMARY:
==4454==     in use at exit: 0 bytes in 0 blocks
==4454==   total heap usage: 998 allocs, 998 frees, 977,082 bytes allocated
==4454== 
==4454== All heap blocks were freed -- no leaks are possible
==4454== 
==4454== For counts of detected and suppressed errors, rerun with: -v
==4454== Use --track-origins=yes to see where uninitialised values come from
==4454== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --pagesize=8192 --overwrite=1 --reopen=1    
==4457== Memcheck, a memory error detector
==4457== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4457== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4457== Command: ./test ../../testfiles/2/ext_060.tst --pagesize=8192 --overwrite=1 --reopen=1
==4457== 
==4457== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4457==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4457==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4457==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4457==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4457==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4457==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4457==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4457==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4457==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4457==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4457==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4457==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4457==  Address 0x5f1bb0e is 414 bytes inside a block of size 4,176 alloc'd
==4457==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4457==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4457==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4457==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4457==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4457==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4457==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4457==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4457==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4457==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4457==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4457==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4457== 
==4457== 
==4457== HEAP SUMMARY:
==4457==     in use at exit: 0 bytes in 0 blocks
==4457==   total heap usage: 910,383 allocs, 910,383 frees, 24,619,273 bytes allocated
==4457== 
==4457== All heap blocks were freed -- no leaks are possible
==4457== 
==4457== For counts of detected and suppressed errors, rerun with: -v
==4457== Use --track-origins=yes to see where uninitialised values come from
==4457== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --pagesize=8192 --overwrite=1 --reopen=1    
==4461== Memcheck, a memory error detector
==4461== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4461== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4461== Command: ./test ../../testfiles/2/blb-001.tst --pagesize=8192 --overwrite=1 --reopen=1
==4461== 
==4461== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4461==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4461==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4461==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4461==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4461==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4461==  Address 0x5f02a1c is 3,580 bytes inside a block of size 4,176 alloc'd
==4461==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4461==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4461==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4461== 
==4461== 
==4461== HEAP SUMMARY:
==4461==     in use at exit: 0 bytes in 0 blocks
==4461==   total heap usage: 364 allocs, 364 frees, 45,701,335 bytes allocated
==4461== 
==4461== All heap blocks were freed -- no leaks are possible
==4461== 
==4461== For counts of detected and suppressed errors, rerun with: -v
==4461== Use --track-origins=yes to see where uninitialised values come from
==4461== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --pagesize=131072 --overwrite=1 --reopen=1    
==4465== Memcheck, a memory error detector
==4465== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4465== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4465== Command: ./test ../../testfiles/1/45.tst --pagesize=131072 --overwrite=1 --reopen=1
==4465== 
==4465== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4465==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4465==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4465==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4465==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4465==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4465==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4465==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4465==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4465==    by 0x40339B: engine::flush() (engine.cpp:350)
==4465==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4465==    by 0x401C13: parser::process() (parser.cpp:44)
==4465==    by 0x403FC0: main (main.cpp:467)
==4465==  Address 0x5f01f0e is 206 bytes inside a block of size 4,176 alloc'd
==4465==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4465==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4465==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4465==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4465==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4465==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4465==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4465==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4465==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4465==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4465==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4465==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4465== 
==4465== 
==4465== HEAP SUMMARY:
==4465==     in use at exit: 0 bytes in 0 blocks
==4465==   total heap usage: 5,223 allocs, 5,223 frees, 2,752,252 bytes allocated
==4465== 
==4465== All heap blocks were freed -- no leaks are possible
==4465== 
==4465== For counts of detected and suppressed errors, rerun with: -v
==4465== Use --track-origins=yes to see where uninitialised values come from
==4465== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --pagesize=131072 --overwrite=1 --reopen=1    
==4468== Memcheck, a memory error detector
==4468== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4468== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4468== Command: ./test ../../testfiles/1/220.tst --pagesize=131072 --overwrite=1 --reopen=1
==4468== 
==4468== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4468==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4468==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4468==  Address 0x5f82f02 is 114 bytes inside a block of size 4,176 alloc'd
==4468==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4468==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4468==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4468==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4468== 
==4468== 
==4468== HEAP SUMMARY:
==4468==     in use at exit: 0 bytes in 0 blocks
==4468==   total heap usage: 4,547 allocs, 4,547 frees, 2,491,497 bytes allocated
==4468== 
==4468== All heap blocks were freed -- no leaks are possible
==4468== 
==4468== For counts of detected and suppressed errors, rerun with: -v
==4468== Use --track-origins=yes to see where uninitialised values come from
==4468== ERROR SUMMARY: 116 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --pagesize=131072 --overwrite=1 --reopen=1    
==4471== Memcheck, a memory error detector
==4471== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4471== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4471== Command: ./test ../../testfiles/1/ext_020.tst --pagesize=131072 --overwrite=1 --reopen=1
==4471== 
==4471== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4471==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4471==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4471==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4471==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4471==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4471==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4471==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4471==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4471==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4471==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4471==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4471==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4471==  Address 0x5f058f6 is 118 bytes inside a block of size 4,176 alloc'd
==4471==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4471==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4471==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4471==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4471==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4471==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4471==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4471==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4471==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4471==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4471==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4471==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4471== 
==4471== 
==4471== HEAP SUMMARY:
==4471==     in use at exit: 0 bytes in 0 blocks
==4471==   total heap usage: 994 allocs, 994 frees, 976,474 bytes allocated
==4471== 
==4471== All heap blocks were freed -- no leaks are possible
==4471== 
==4471== For counts of detected and suppressed errors, rerun with: -v
==4471== Use --track-origins=yes to see where uninitialised values come from
==4471== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --pagesize=131072 --overwrite=1 --reopen=1    
==4474== Memcheck, a memory error detector
==4474== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4474== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4474== Command: ./test ../../testfiles/2/ext_060.tst --pagesize=131072 --overwrite=1 --reopen=1
==4474== 
==4474== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4474==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4474==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4474==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4474==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4474==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4474==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4474==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4474==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4474==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4474==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4474==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4474==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4474==  Address 0x5f1bb0e is 414 bytes inside a block of size 4,176 alloc'd
==4474==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4474==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4474==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4474==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4474==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4474==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4474==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4474==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4474==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4474==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4474==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4474==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4474== 
==4474== 
==4474== HEAP SUMMARY:
==4474==     in use at exit: 0 bytes in 0 blocks
==4474==   total heap usage: 911,480 allocs, 911,480 frees, 24,569,955 bytes allocated
==4474== 
==4474== All heap blocks were freed -- no leaks are possible
==4474== 
==4474== For counts of detected and suppressed errors, rerun with: -v
==4474== Use --track-origins=yes to see where uninitialised values come from
==4474== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --pagesize=131072 --overwrite=1 --reopen=1    
==4477== Memcheck, a memory error detector
==4477== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4477== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4477== Command: ./test ../../testfiles/2/blb-001.tst --pagesize=131072 --overwrite=1 --reopen=1
==4477== 
==4477== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4477==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4477==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4477==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4477==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4477==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4477==  Address 0x5eff8dc is 3,580 bytes inside a block of size 4,176 alloc'd
==4477==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4477==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4477==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4477== 
==4477== 
==4477== HEAP SUMMARY:
==4477==     in use at exit: 0 bytes in 0 blocks
==4477==   total heap usage: 331 allocs, 331 frees, 45,687,807 bytes allocated
==4477== 
==4477== All heap blocks were freed -- no leaks are possible
==4477== 
==4477== For counts of detected and suppressed errors, rerun with: -v
==4477== Use --track-origins=yes to see where uninitialised values come from
==4477== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --cachesize=0 --overwrite=1 --reopen=1    
==4481== Memcheck, a memory error detector
==4481== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4481== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4481== Command: ./test ../../testfiles/1/45.tst --cachesize=0 --overwrite=1 --reopen=1
==4481== 
==4481== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4481==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4481==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4481==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4481==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4481==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4481==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4481==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4481==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4481==    by 0x40339B: engine::flush() (engine.cpp:350)
==4481==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4481==    by 0x401C13: parser::process() (parser.cpp:44)
==4481==    by 0x403FC0: main (main.cpp:467)
==4481==  Address 0x5f01f0e is 206 bytes inside a block of size 4,176 alloc'd
==4481==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4481==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4481==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4481==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4481==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4481==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4481==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4481==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4481==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4481==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4481==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4481==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4481== 
==4481== 
==4481== HEAP SUMMARY:
==4481==     in use at exit: 0 bytes in 0 blocks
==4481==   total heap usage: 3,543 allocs, 3,543 frees, 2,760,332 bytes allocated
==4481== 
==4481== All heap blocks were freed -- no leaks are possible
==4481== 
==4481== For counts of detected and suppressed errors, rerun with: -v
==4481== Use --track-origins=yes to see where uninitialised values come from
==4481== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --cachesize=0 --overwrite=1 --reopen=1    
==4485== Memcheck, a memory error detector
==4485== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4485== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4485== Command: ./test ../../testfiles/1/220.tst --cachesize=0 --overwrite=1 --reopen=1
==4485== 
==4485== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4485==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4485==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4F076CC: __db_poff (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4E5450D: ??? (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4E5557C: __bam_iitem (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4E501CF: ??? (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4485==  Address 0x5f83362 is 114 bytes inside a block of size 4,176 alloc'd
==4485==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4485==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4485==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4485==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4485== 
==4485== 
==4485== HEAP SUMMARY:
==4485==     in use at exit: 0 bytes in 0 blocks
==4485==   total heap usage: 3,800 allocs, 3,800 frees, 2,495,909 bytes allocated
==4485== 
==4485== All heap blocks were freed -- no leaks are possible
==4485== 
==4485== For counts of detected and suppressed errors, rerun with: -v
==4485== Use --track-origins=yes to see where uninitialised values come from
==4485== ERROR SUMMARY: 116 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --cachesize=0 --overwrite=1 --reopen=1    
==4488== Memcheck, a memory error detector
==4488== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4488== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4488== Command: ./test ../../testfiles/1/ext_020.tst --cachesize=0 --overwrite=1 --reopen=1
==4488== 
==4488== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4488==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4488==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4488==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4488==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4488==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4488==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4488==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4488==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4488==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4488==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4488==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4488==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4488==  Address 0x5f058f6 is 118 bytes inside a block of size 4,176 alloc'd
==4488==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4488==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4488==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4488==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4488==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4488==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4488==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4488==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4488==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4488==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4488==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4488==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4488== 
==4488== 
==4488== HEAP SUMMARY:
==4488==     in use at exit: 0 bytes in 0 blocks
==4488==   total heap usage: 996 allocs, 996 frees, 976,778 bytes allocated
==4488== 
==4488== All heap blocks were freed -- no leaks are possible
==4488== 
==4488== For counts of detected and suppressed errors, rerun with: -v
==4488== Use --track-origins=yes to see where uninitialised values come from
==4488== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --cachesize=0 --overwrite=1 --reopen=1    
==4491== Memcheck, a memory error detector
==4491== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4491== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4491== Command: ./test ../../testfiles/2/ext_060.tst --cachesize=0 --overwrite=1 --reopen=1
==4491== 
==4491== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4491==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4491==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4491==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4491==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4491==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4491==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4491==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4491==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4491==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4491==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4491==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4491==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4491==  Address 0x5f1bb0e is 414 bytes inside a block of size 4,176 alloc'd
==4491==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4491==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4491==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4491==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4491==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4491==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4491==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4491==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4491==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4491==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4491==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4491==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4491== 
==4491== 
==4491== HEAP SUMMARY:
==4491==     in use at exit: 0 bytes in 0 blocks
==4491==   total heap usage: 911,482 allocs, 911,482 frees, 24,570,259 bytes allocated
==4491== 
==4491== All heap blocks were freed -- no leaks are possible
==4491== 
==4491== For counts of detected and suppressed errors, rerun with: -v
==4491== Use --track-origins=yes to see where uninitialised values come from
==4491== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --cachesize=0 --overwrite=1 --reopen=1    
==4494== Memcheck, a memory error detector
==4494== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4494== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4494== Command: ./test ../../testfiles/2/blb-001.tst --cachesize=0 --overwrite=1 --reopen=1
==4494== 
==4494== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4494==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4494==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4494==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4494==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4494==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4494==  Address 0x5f00d3c is 3,580 bytes inside a block of size 4,176 alloc'd
==4494==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4494==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4494==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4494== 
==4494== 
==4494== HEAP SUMMARY:
==4494==     in use at exit: 0 bytes in 0 blocks
==4494==   total heap usage: 342 allocs, 342 frees, 45,693,063 bytes allocated
==4494== 
==4494== All heap blocks were freed -- no leaks are possible
==4494== 
==4494== For counts of detected and suppressed errors, rerun with: -v
==4494== Use --track-origins=yes to see where uninitialised values come from
==4494== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --use-aes=1 --reopen=1    
==4498== Memcheck, a memory error detector
==4498== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4498== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4498== Command: ./test ../../testfiles/1/45.tst --use-aes=1 --reopen=1
==4498== 
==4498== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4498==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4498==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4498==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4498==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4498==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4498==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4498==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4498==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4498==    by 0x40339B: engine::flush() (engine.cpp:350)
==4498==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4498==    by 0x401C13: parser::process() (parser.cpp:44)
==4498==    by 0x403FC0: main (main.cpp:467)
==4498==  Address 0x5f01f0e is 206 bytes inside a block of size 4,176 alloc'd
==4498==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4498==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4498==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4498==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4498==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4498==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4498==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4498==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4498==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4498==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4498==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4498==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4498== 
==4498== 
==4498== HEAP SUMMARY:
==4498==     in use at exit: 0 bytes in 0 blocks
==4498==   total heap usage: 3,543 allocs, 3,543 frees, 2,760,332 bytes allocated
==4498== 
==4498== All heap blocks were freed -- no leaks are possible
==4498== 
==4498== For counts of detected and suppressed errors, rerun with: -v
==4498== Use --track-origins=yes to see where uninitialised values come from
==4498== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --use-aes=1 --reopen=1    
==4501== Memcheck, a memory error detector
==4501== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4501== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4501== Command: ./test ../../testfiles/1/220.tst --use-aes=1 --reopen=1
==4501== 
==4501== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4501==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4501==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4501==  Address 0x5f7feea is 138 bytes inside a block of size 4,176 alloc'd
==4501==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4501==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4501==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4501==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4501== 
==4501== 
==4501== HEAP SUMMARY:
==4501==     in use at exit: 0 bytes in 0 blocks
==4501==   total heap usage: 4,224 allocs, 4,224 frees, 2,445,762 bytes allocated
==4501== 
==4501== All heap blocks were freed -- no leaks are possible
==4501== 
==4501== For counts of detected and suppressed errors, rerun with: -v
==4501== Use --track-origins=yes to see where uninitialised values come from
==4501== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --use-aes=1 --reopen=1    
==4504== Memcheck, a memory error detector
==4504== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4504== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4504== Command: ./test ../../testfiles/1/ext_020.tst --use-aes=1 --reopen=1
==4504== 
==4504== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4504==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4504==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4504==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4504==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4504==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4504==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4504==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4504==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4504==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4504==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4504==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4504==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4504==  Address 0x5f058f6 is 118 bytes inside a block of size 4,176 alloc'd
==4504==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4504==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4504==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4504==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4504==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4504==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4504==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4504==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4504==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4504==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4504==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4504==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4504== 
==4504== 
==4504== HEAP SUMMARY:
==4504==     in use at exit: 0 bytes in 0 blocks
==4504==   total heap usage: 996 allocs, 996 frees, 976,778 bytes allocated
==4504== 
==4504== All heap blocks were freed -- no leaks are possible
==4504== 
==4504== For counts of detected and suppressed errors, rerun with: -v
==4504== Use --track-origins=yes to see where uninitialised values come from
==4504== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --use-aes=1 --reopen=1    
==4507== Memcheck, a memory error detector
==4507== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4507== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4507== Command: ./test ../../testfiles/2/ext_060.tst --use-aes=1 --reopen=1
==4507== 
==4507== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4507==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4507==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4507==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4507==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4507==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4507==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4507==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4507==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4507==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4507==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4507==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4507==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4507==  Address 0x5f1b9ca is 410 bytes inside a block of size 4,176 alloc'd
==4507==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4507==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4507==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4507==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4507==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4507==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4507==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4507==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4507==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4507==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4507==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4507==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4507== 
==4507== 
==4507== HEAP SUMMARY:
==4507==     in use at exit: 0 bytes in 0 blocks
==4507==   total heap usage: 920,403 allocs, 920,403 frees, 24,705,705 bytes allocated
==4507== 
==4507== All heap blocks were freed -- no leaks are possible
==4507== 
==4507== For counts of detected and suppressed errors, rerun with: -v
==4507== Use --track-origins=yes to see where uninitialised values come from
==4507== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --use-aes=1 --reopen=1    
==4512== Memcheck, a memory error detector
==4512== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4512== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4512== Command: ./test ../../testfiles/2/blb-001.tst --use-aes=1 --reopen=1
==4512== 
==4512== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4512==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4512==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4512==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4512==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4512==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4512==  Address 0x5f00ec8 is 3,976 bytes inside a block of size 4,176 alloc'd
==4512==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4512==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4512==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4512== 
==4512== 
==4512== HEAP SUMMARY:
==4512==     in use at exit: 0 bytes in 0 blocks
==4512==   total heap usage: 356 allocs, 356 frees, 203,444,715 bytes allocated
==4512== 
==4512== All heap blocks were freed -- no leaks are possible
==4512== 
==4512== For counts of detected and suppressed errors, rerun with: -v
==4512== Use --track-origins=yes to see where uninitialised values come from
==4512== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --use-recovery=1 --reopen=1    
==4516== Memcheck, a memory error detector
==4516== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4516== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4516== Command: ./test ../../testfiles/1/45.tst --use-recovery=1 --reopen=1
==4516== 
==4516== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4516==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4516==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4516==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4516==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4516==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4516==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4516==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4516==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4516==    by 0x40339B: engine::flush() (engine.cpp:350)
==4516==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4516==    by 0x401C13: parser::process() (parser.cpp:44)
==4516==    by 0x403FC0: main (main.cpp:467)
==4516==  Address 0x6098bde is 206 bytes inside a block of size 4,176 alloc'd
==4516==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4516==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4516==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4516==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4516==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4516==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4516==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4516==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4516==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4516==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4516==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4516==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4516== 
==4516== 
==4516== HEAP SUMMARY:
==4516==     in use at exit: 0 bytes in 0 blocks
==4516==   total heap usage: 15,009 allocs, 15,009 frees, 191,061,580 bytes allocated
==4516== 
==4516== All heap blocks were freed -- no leaks are possible
==4516== 
==4516== For counts of detected and suppressed errors, rerun with: -v
==4516== Use --track-origins=yes to see where uninitialised values come from
==4516== ERROR SUMMARY: 114 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --use-recovery=1 --reopen=1    
==4519== Memcheck, a memory error detector
==4519== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4519== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4519== Command: ./test ../../testfiles/1/220.tst --use-recovery=1 --reopen=1
==4519== 
==4519== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4519==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4519==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4519==  Address 0x68bb21a is 122 bytes inside a block of size 4,176 alloc'd
==4519==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4519==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4519==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4519==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4519== 
==4519== 
==4519== HEAP SUMMARY:
==4519==     in use at exit: 0 bytes in 0 blocks
==4519==   total heap usage: 14,550 allocs, 14,550 frees, 171,847,650 bytes allocated
==4519== 
==4519== All heap blocks were freed -- no leaks are possible
==4519== 
==4519== For counts of detected and suppressed errors, rerun with: -v
==4519== Use --track-origins=yes to see where uninitialised values come from
==4519== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --use-recovery=1 --reopen=1    
==4522== Memcheck, a memory error detector
==4522== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4522== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4522== Command: ./test ../../testfiles/1/ext_020.tst --use-recovery=1 --reopen=1
==4522== 
==4522== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4522==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4522==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4522==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4522==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4522==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4522==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4522==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4522==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4522==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4522==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4522==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4522==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4522==  Address 0x5f3dfb6 is 118 bytes inside a block of size 4,176 alloc'd
==4522==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4522==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4522==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4522==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4522==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4522==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4522==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4522==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4522==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4522==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4522==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4522==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4522== 
==4522== 
==4522== HEAP SUMMARY:
==4522==     in use at exit: 0 bytes in 0 blocks
==4522==   total heap usage: 1,041 allocs, 1,041 frees, 1,699,522 bytes allocated
==4522== 
==4522== All heap blocks were freed -- no leaks are possible
==4522== 
==4522== For counts of detected and suppressed errors, rerun with: -v
==4522== Use --track-origins=yes to see where uninitialised values come from
==4522== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --use-recovery=1 --reopen=1    
==4525== Memcheck, a memory error detector
==4525== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4525== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4525== Command: ./test ../../testfiles/2/ext_060.tst --use-recovery=1 --reopen=1
==4525== 
==4525== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4525==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4525==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4525==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4525==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4525==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4525==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4525==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4525==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4525==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4525==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4525==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4525==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4525==  Address 0x63c21fa is 410 bytes inside a block of size 4,176 alloc'd
==4525==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4525==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4525==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4525==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4525==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4525==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4525==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4525==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4525==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4525==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4525==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4525==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4525== 
==4525== 
==4525== HEAP SUMMARY:
==4525==     in use at exit: 0 bytes in 0 blocks
==4525==   total heap usage: 952,137 allocs, 952,137 frees, 545,227,745 bytes allocated
==4525== 
==4525== All heap blocks were freed -- no leaks are possible
==4525== 
==4525== For counts of detected and suppressed errors, rerun with: -v
==4525== Use --track-origins=yes to see where uninitialised values come from
==4525== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --use-recovery=1 --reopen=1    
==4528== Memcheck, a memory error detector
==4528== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4528== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4528== Command: ./test ../../testfiles/2/blb-001.tst --use-recovery=1 --reopen=1
==4528== 
==4528== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4528==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4528==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4528==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4528==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4528==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4528==  Address 0x5f85dd8 is 3,976 bytes inside a block of size 4,176 alloc'd
==4528==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4528==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4528==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4528== 
==4528== 
==4528== HEAP SUMMARY:
==4528==     in use at exit: 0 bytes in 0 blocks
==4528==   total heap usage: 454 allocs, 454 frees, 205,037,891 bytes allocated
==4528== 
==4528== All heap blocks were freed -- no leaks are possible
==4528== 
==4528== For counts of detected and suppressed errors, rerun with: -v
==4528== Use --track-origins=yes to see where uninitialised values come from
==4528== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --cacheunlimited=1    
==4532== Memcheck, a memory error detector
==4532== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4532== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4532== Command: ./test ../../testfiles/1/45.tst --cacheunlimited=1
==4532== 
db[0]: create failed w/ status -8
==4532== 
==4532== HEAP SUMMARY:
==4532==     in use at exit: 0 bytes in 0 blocks
==4532==   total heap usage: 7 allocs, 7 frees, 18,688 bytes allocated
==4532== 
==4532== All heap blocks were freed -- no leaks are possible
==4532== 
==4532== For counts of detected and suppressed errors, rerun with: -v
==4532== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --cacheunlimited=1    
==4535== Memcheck, a memory error detector
==4535== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4535== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4535== Command: ./test ../../testfiles/1/220.tst --cacheunlimited=1
==4535== 
db[0]: create failed w/ status -8
==4535== 
==4535== HEAP SUMMARY:
==4535==     in use at exit: 0 bytes in 0 blocks
==4535==   total heap usage: 7 allocs, 7 frees, 18,688 bytes allocated
==4535== 
==4535== All heap blocks were freed -- no leaks are possible
==4535== 
==4535== For counts of detected and suppressed errors, rerun with: -v
==4535== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --cacheunlimited=1    
==4538== Memcheck, a memory error detector
==4538== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4538== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4538== Command: ./test ../../testfiles/1/ext_020.tst --cacheunlimited=1
==4538== 
db[0]: create failed w/ status -8
==4538== 
==4538== HEAP SUMMARY:
==4538==     in use at exit: 0 bytes in 0 blocks
==4538==   total heap usage: 7 allocs, 7 frees, 18,688 bytes allocated
==4538== 
==4538== All heap blocks were freed -- no leaks are possible
==4538== 
==4538== For counts of detected and suppressed errors, rerun with: -v
==4538== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --cacheunlimited=1    
==4541== Memcheck, a memory error detector
==4541== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4541== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4541== Command: ./test ../../testfiles/2/ext_060.tst --cacheunlimited=1
==4541== 
db[0]: create failed w/ status -8
==4541== 
==4541== HEAP SUMMARY:
==4541==     in use at exit: 0 bytes in 0 blocks
==4541==   total heap usage: 7 allocs, 7 frees, 18,688 bytes allocated
==4541== 
==4541== All heap blocks were freed -- no leaks are possible
==4541== 
==4541== For counts of detected and suppressed errors, rerun with: -v
==4541== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --cacheunlimited=1    
==4544== Memcheck, a memory error detector
==4544== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4544== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4544== Command: ./test ../../testfiles/2/blb-001.tst --cacheunlimited=1
==4544== 
db[0]: create failed w/ status -8
==4544== 
==4544== HEAP SUMMARY:
==4544==     in use at exit: 0 bytes in 0 blocks
==4544==   total heap usage: 7 allocs, 7 frees, 18,688 bytes allocated
==4544== 
==4544== All heap blocks were freed -- no leaks are possible
==4544== 
==4544== For counts of detected and suppressed errors, rerun with: -v
==4544== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==4548== Memcheck, a memory error detector
==4548== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4548== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4548== Command: ./test ../../testfiles/1/45.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==4548== 
==4548== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4548==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4548==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4548==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4548==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4548==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4548==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4548==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4548==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4548==    by 0x40339B: engine::flush() (engine.cpp:350)
==4548==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4548==    by 0x401C13: parser::process() (parser.cpp:44)
==4548==    by 0x403FC0: main (main.cpp:467)
==4548==  Address 0x5f01f0e is 206 bytes inside a block of size 4,176 alloc'd
==4548==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4548==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4548==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4548==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4548==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4548==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4548==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4548==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4548==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4548==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4548==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4548==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4548== 
==4548== 
==4548== HEAP SUMMARY:
==4548==     in use at exit: 0 bytes in 0 blocks
==4548==   total heap usage: 3,543 allocs, 3,543 frees, 2,760,332 bytes allocated
==4548== 
==4548== All heap blocks were freed -- no leaks are possible
==4548== 
==4548== For counts of detected and suppressed errors, rerun with: -v
==4548== Use --track-origins=yes to see where uninitialised values come from
==4548== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==4551== Memcheck, a memory error detector
==4551== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4551== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4551== Command: ./test ../../testfiles/1/220.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==4551== 
==4551== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4551==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4551==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4551==  Address 0x5f7feea is 138 bytes inside a block of size 4,176 alloc'd
==4551==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4551==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4551==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4551==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4551== 
==4551== 
==4551== HEAP SUMMARY:
==4551==     in use at exit: 0 bytes in 0 blocks
==4551==   total heap usage: 4,224 allocs, 4,224 frees, 2,445,762 bytes allocated
==4551== 
==4551== All heap blocks were freed -- no leaks are possible
==4551== 
==4551== For counts of detected and suppressed errors, rerun with: -v
==4551== Use --track-origins=yes to see where uninitialised values come from
==4551== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==4554== Memcheck, a memory error detector
==4554== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4554== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4554== Command: ./test ../../testfiles/1/ext_020.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==4554== 
==4554== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4554==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4554==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4554==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4554==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4554==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4554==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4554==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4554==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4554==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4554==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4554==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4554==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4554==  Address 0x5f05896 is 118 bytes inside a block of size 4,176 alloc'd
==4554==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4554==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4554==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4554==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4554==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4554==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4554==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4554==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4554==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4554==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4554==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4554==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4554== 
==4554== 
==4554== HEAP SUMMARY:
==4554==     in use at exit: 0 bytes in 0 blocks
==4554==   total heap usage: 995 allocs, 995 frees, 976,746 bytes allocated
==4554== 
==4554== All heap blocks were freed -- no leaks are possible
==4554== 
==4554== For counts of detected and suppressed errors, rerun with: -v
==4554== Use --track-origins=yes to see where uninitialised values come from
==4554== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==4557== Memcheck, a memory error detector
==4557== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4557== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4557== Command: ./test ../../testfiles/2/ext_060.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==4557== 
==4557== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4557==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4557==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4557==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4557==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4557==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4557==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4557==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4557==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4557==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4557==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4557==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4557==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4557==  Address 0x5f1b90a is 410 bytes inside a block of size 4,176 alloc'd
==4557==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4557==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4557==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4557==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4557==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4557==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4557==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4557==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4557==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4557==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4557==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4557==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4557== 
==4557== 
==4557== HEAP SUMMARY:
==4557==     in use at exit: 0 bytes in 0 blocks
==4557==   total heap usage: 920,539 allocs, 920,539 frees, 24,709,296 bytes allocated
==4557== 
==4557== All heap blocks were freed -- no leaks are possible
==4557== 
==4557== For counts of detected and suppressed errors, rerun with: -v
==4557== Use --track-origins=yes to see where uninitialised values come from
==4557== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1    
==4560== Memcheck, a memory error detector
==4560== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4560== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4560== Command: ./test ../../testfiles/2/blb-001.tst --data_access_mode=HAM_DAM_SEQUENTIAL_INSERT --reopen=1
==4560== 
==4560== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4560==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4560==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4560==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4560==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4560==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4560==  Address 0x5f00ec8 is 3,976 bytes inside a block of size 4,176 alloc'd
==4560==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4560==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4560==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4560== 
==4560== 
==4560== HEAP SUMMARY:
==4560==     in use at exit: 0 bytes in 0 blocks
==4560==   total heap usage: 356 allocs, 356 frees, 203,444,715 bytes allocated
==4560== 
==4560== All heap blocks were freed -- no leaks are possible
==4560== 
==4560== For counts of detected and suppressed errors, rerun with: -v
==4560== Use --track-origins=yes to see where uninitialised values come from
==4560== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==4564== Memcheck, a memory error detector
==4564== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4564== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4564== Command: ./test ../../testfiles/1/45.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1
==4564== 
==4564== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4564==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4564==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4564==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4564==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4564==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4564==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4564==    by 0x4EFE6E3: __db_sync_pp (in /usr/lib/libdb-4.7.so)
==4564==    by 0x406333: berkeleydb::flush() (berkeleydb.cpp:141)
==4564==    by 0x40339B: engine::flush() (engine.cpp:350)
==4564==    by 0x401FB4: parser::process_line(char*) (parser.cpp:107)
==4564==    by 0x401C13: parser::process() (parser.cpp:44)
==4564==    by 0x403FC0: main (main.cpp:467)
==4564==  Address 0x5f01f0e is 206 bytes inside a block of size 4,176 alloc'd
==4564==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4564==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4564==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4564==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4564==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4564==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4564==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4564==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4564==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4564==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4564==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4564==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4564== 
==4564== 
==4564== HEAP SUMMARY:
==4564==     in use at exit: 0 bytes in 0 blocks
==4564==   total heap usage: 3,543 allocs, 3,543 frees, 2,760,332 bytes allocated
==4564== 
==4564== All heap blocks were freed -- no leaks are possible
==4564== 
==4564== For counts of detected and suppressed errors, rerun with: -v
==4564== Use --track-origins=yes to see where uninitialised values come from
==4564== ERROR SUMMARY: 111 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==4567== Memcheck, a memory error detector
==4567== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4567== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4567== Command: ./test ../../testfiles/1/220.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1
==4567== 
==4567== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4567==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4567==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4F398AD: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4567==  Address 0x5f7feea is 138 bytes inside a block of size 4,176 alloc'd
==4567==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4567==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4E6152A: __bam_split (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4567==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4567==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4567== 
==4567== 
==4567== HEAP SUMMARY:
==4567==     in use at exit: 0 bytes in 0 blocks
==4567==   total heap usage: 4,224 allocs, 4,224 frees, 2,445,762 bytes allocated
==4567== 
==4567== All heap blocks were freed -- no leaks are possible
==4567== 
==4567== For counts of detected and suppressed errors, rerun with: -v
==4567== Use --track-origins=yes to see where uninitialised values come from
==4567== ERROR SUMMARY: 92 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==4570== Memcheck, a memory error detector
==4570== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4570== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4570== Command: ./test ../../testfiles/1/ext_020.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1
==4570== 
==4570== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4570==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4570==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4570==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4570==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4570==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4570==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4570==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4570==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4570==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4570==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4570==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4570==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4570==  Address 0x5f058f6 is 118 bytes inside a block of size 4,176 alloc'd
==4570==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4570==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4570==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4570==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4570==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4570==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4570==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4570==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4570==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4570==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4570==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4570==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4570== 
==4570== 
==4570== HEAP SUMMARY:
==4570==     in use at exit: 0 bytes in 0 blocks
==4570==   total heap usage: 996 allocs, 996 frees, 976,778 bytes allocated
==4570== 
==4570== All heap blocks were freed -- no leaks are possible
==4570== 
==4570== For counts of detected and suppressed errors, rerun with: -v
==4570== Use --track-origins=yes to see where uninitialised values come from
==4570== ERROR SUMMARY: 10 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==4573== Memcheck, a memory error detector
==4573== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4573== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4573== Command: ./test ../../testfiles/2/ext_060.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1
==4573== 
==4573== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4573==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4573==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4573==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4573==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4573==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4573==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4573==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4573==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4573==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4573==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4573==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4573==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4573==  Address 0x5f1b9ca is 410 bytes inside a block of size 4,176 alloc'd
==4573==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4573==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4573==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4573==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4573==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4573==    by 0x4F03F7F: __db_new (in /usr/lib/libdb-4.7.so)
==4573==    by 0x4E619BF: __bam_split (in /usr/lib/libdb-4.7.so)
==4573==    by 0x4E502A0: ??? (in /usr/lib/libdb-4.7.so)
==4573==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4573==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4573==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4573==    by 0x40655D: berkeleydb::insert(ham_key_t*, ham_record_t*) (berkeleydb.cpp:175)
==4573== 
==4573== 
==4573== HEAP SUMMARY:
==4573==     in use at exit: 0 bytes in 0 blocks
==4573==   total heap usage: 920,403 allocs, 920,403 frees, 24,705,705 bytes allocated
==4573== 
==4573== All heap blocks were freed -- no leaks are possible
==4573== 
==4573== For counts of detected and suppressed errors, rerun with: -v
==4573== Use --track-origins=yes to see where uninitialised values come from
==4573== ERROR SUMMARY: 6 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1    
==4576== Memcheck, a memory error detector
==4576== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4576== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4576== Command: ./test ../../testfiles/2/blb-001.tst --data_access_mode=HAM_DAM_RANDOM_WRITE --reopen=1
==4576== 
==4576== Syscall param pwrite64(buf) points to uninitialised byte(s)
==4576==    at 0x519AAC3: __pwrite_nocancel (in /lib/libpthread-2.10.1.so)
==4576==    by 0x4F4C030: __os_io (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4F3A903: ??? (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4F3AB71: __memp_bhwrite (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4F48821: __memp_sync_int (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4EE91EA: __db_sync (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4EE7BE1: __db_refresh (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4EE7DD0: __db_close (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4F0127F: __db_close_pp (in /usr/lib/libdb-4.7.so)
==4576==    by 0x406284: berkeleydb::close() (berkeleydb.cpp:128)
==4576==    by 0x403208: engine::close(bool) (engine.cpp:321)
==4576==    by 0x401F8D: parser::process_line(char*) (parser.cpp:104)
==4576==  Address 0x5f00ec8 is 3,976 bytes inside a block of size 4,176 alloc'd
==4576==    at 0x4C25153: malloc (vg_replace_malloc.c:195)
==4576==    by 0x4F49757: __os_malloc (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4F1A5BC: __env_alloc (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4F39356: __memp_alloc (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4F3B663: __memp_fget (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4E5E2FC: __bam_get_root (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4E5E68A: __bam_search (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4E4D8A5: ??? (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4E503A2: ??? (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4EF7D9C: __dbc_put (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4EEA3F3: __db_put (in /usr/lib/libdb-4.7.so)
==4576==    by 0x4EFEE22: __db_put_pp (in /usr/lib/libdb-4.7.so)
==4576== 
==4576== 
==4576== HEAP SUMMARY:
==4576==     in use at exit: 0 bytes in 0 blocks
==4576==   total heap usage: 356 allocs, 356 frees, 203,444,715 bytes allocated
==4576== 
==4576== All heap blocks were freed -- no leaks are possible
==4576== 
==4576== For counts of detected and suppressed errors, rerun with: -v
==4576== Use --track-origins=yes to see where uninitialised values come from
==4576== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 4 from 4)


running ../../testfiles/1/45.tst --direct-access=1 --inmemorydb=1    
==4580== Memcheck, a memory error detector
==4580== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4580== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4580== Command: ./test ../../testfiles/1/45.tst --direct-access=1 --inmemorydb=1
==4580== 
unknown parameter 'direct-access=1'
==4580== 
==4580== HEAP SUMMARY:
==4580==     in use at exit: 0 bytes in 0 blocks
==4580==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==4580== 
==4580== All heap blocks were freed -- no leaks are possible
==4580== 
==4580== For counts of detected and suppressed errors, rerun with: -v
==4580== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/1/220.tst --direct-access=1 --inmemorydb=1    
==4583== Memcheck, a memory error detector
==4583== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4583== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4583== Command: ./test ../../testfiles/1/220.tst --direct-access=1 --inmemorydb=1
==4583== 
unknown parameter 'direct-access=1'
==4583== 
==4583== HEAP SUMMARY:
==4583==     in use at exit: 0 bytes in 0 blocks
==4583==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==4583== 
==4583== All heap blocks were freed -- no leaks are possible
==4583== 
==4583== For counts of detected and suppressed errors, rerun with: -v
==4583== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/1/ext_020.tst --direct-access=1 --inmemorydb=1    
==4586== Memcheck, a memory error detector
==4586== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4586== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4586== Command: ./test ../../testfiles/1/ext_020.tst --direct-access=1 --inmemorydb=1
==4586== 
unknown parameter 'direct-access=1'
==4586== 
==4586== HEAP SUMMARY:
==4586==     in use at exit: 0 bytes in 0 blocks
==4586==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==4586== 
==4586== All heap blocks were freed -- no leaks are possible
==4586== 
==4586== For counts of detected and suppressed errors, rerun with: -v
==4586== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/ext_060.tst --direct-access=1 --inmemorydb=1    
==4589== Memcheck, a memory error detector
==4589== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4589== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4589== Command: ./test ../../testfiles/2/ext_060.tst --direct-access=1 --inmemorydb=1
==4589== 
unknown parameter 'direct-access=1'
==4589== 
==4589== HEAP SUMMARY:
==4589==     in use at exit: 0 bytes in 0 blocks
==4589==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==4589== 
==4589== All heap blocks were freed -- no leaks are possible
==4589== 
==4589== For counts of detected and suppressed errors, rerun with: -v
==4589== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


running ../../testfiles/2/blb-001.tst --direct-access=1 --inmemorydb=1    
==4592== Memcheck, a memory error detector
==4592== Copyright (C) 2002-2009, and GNU GPL'd, by Julian Seward et al.
==4592== Using Valgrind-3.5.0-Debian and LibVEX; rerun with -h for copyright info
==4592== Command: ./test ../../testfiles/2/blb-001.tst --direct-access=1 --inmemorydb=1
==4592== 
unknown parameter 'direct-access=1'
==4592== 
==4592== HEAP SUMMARY:
==4592==     in use at exit: 0 bytes in 0 blocks
==4592==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==4592== 
==4592== All heap blocks were freed -- no leaks are possible
==4592== 
==4592== For counts of detected and suppressed errors, rerun with: -v
==4592== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 4)


christoph, Sat Feb 13 13:55:46 CET 2010
all tests with direct access failed because the command line parameter was
wrong; i restarted them with direct_access=1 and they were fine.
